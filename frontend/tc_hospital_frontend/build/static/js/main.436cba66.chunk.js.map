{"version":3,"sources":["services/auth_header.js","services/auth.service.js","slice/authSlice.js","helpers/history.js","components/general/landing/Signup.js","components/general/landing/LandingPage.js","components/general/login/Login.js","services/verify.service.js","slice/verifySlice.js","components/general/verify/Verify.js","components/general/logout/Logout.js","services/admin.service.js","slice/adminSlice.js","components/general/navbar/Tooltip.js","assets/nav/add_user.svg","assets/nav/logout.svg","assets/nav/analytics.svg","assets/nav/upload.svg","assets/nav/search.svg","assets/nav/edit.svg","components/general/navbar/Navbar.js","components/admin/manage/UserListItem.js","components/admin/manage/ManageUser.js","components/admin/invite/InviteUser.js","services/review.service.js","slice/reviewSlice.js","components/student/editor/Editor.js","services/user.service.js","slice/userSlice.js","components/student/search/Results.js","components/student/search/Search.js","components/student/analytics/AnalyticsListItem.js","assets/general/share.svg","components/student/analytics/AnalyticsCodeItem.js","components/student/analytics/DetailedAnalytics.js","components/student/analytics/GeneralAnalytics.js","components/student/analytics/Analytics.js","components/coder/editor/UploadFadeIn.js","components/coder/editor/Editor.js","components/coder/reviews/ReviewListItem.js","assets/general/accept.svg","assets/general/decline.svg","components/coder/reviews/ReviewEditor.js","components/coder/reviews/Reviews.js","components/general/routes/Routes.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["auth_header","a","user","JSON","parse","localStorage","getItem","accessToken","Authorization","signup","signupData","axios","post","then","response","data","tokenData","setItem","stringify","userType","login","credentials","catch","e","alert","console","log","initialState","loggedIn","loginAsync","createAsyncThunk","signUpAsync","logoutAsync","headers","removeItem","authSlice","createSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","selectIsLoggedIn","auth","selectUserType","history","createBrowserHistory","Signup","useState","loading","setLoading","selectedOption","setSelectedOption","dispatch","useDispatch","customStyles","option","provided","borderBottom","color","isSelected","backgroundColor","width","height","control","margin","borderRadius","padding","fontSize","textAlign","border","placeholder","defaultStyles","className","id","onSubmit","preventDefault","Object","fromEntries","FormData","target","hospitalCode","value","hospitalName","label","res","push","window","location","reload","err","type","required","styles","options","onChange","LandingPage","class","to","Login","email","setEmail","password","setPassword","forgotPsw","setForgotPsw","onClick","payload","validateInviteLink","hash","get","validateLinksAsync","submitUserAsync","userData","inviteData","verifySlice","actions","Verify","match","setInviteData","useEffect","params","prevState","inviteId","_id","Logout","activeLinks","getUsers","removeUser","userId","inviteUser","currentLinksAsync","getUserAsync","removeUserAsync","inviteUserAsync","adminSlice","userList","currentOrders","filteredUserList","filter","updatedUserList","pastOrders","selectUserList","admin","Tooltip","props","active","setActive","onMouseEnter","onMouseLeave","children","direction","content","Navbar","useSelector","src","add","edit","upload","analytics","search","logout","UserListItem","deleteUser","Date","creationTimestamp","toLocaleDateString","undefined","firstName","ManageUser","length","map","i","InviteUser","currentTarget","reset","htmlFor","codeCompletion","uploadCode","uploadStudentCode","getCreatedUploads","getSuitableUploads","searchOffset","getAnalyticsUploads","reviewIds","proposeCode","code","getProposal","reviewId","modifyProposal","proposalData","codeCompletionAsync","uploadCodeAsync","uploadStudentCodeAsync","getUploadsAsync","getSuitableUploadsAsync","getReviewAnalyticsAsync","proposeCodeAsync","getProposalsAsync","modifyProposalsAsync","reviewSlice","createdUploads","suitableUploads","codes","sort","b","proposalCounter","selectCreatedUploads","review","selectSuitableUploads","Editor","close","taskData","selTxt","setSelTxt","tempCodes","setTempCodes","loadedTxt","setLoadedTxt","bg","document","querySelector","style","cssText","marginTop","getElementsByClassName","innerHTML","txt","getElementById","scrollHeight","offsetHeight","typingTimerEdit","hideCreateView","forced","contains","setTimeout","syncScroll","origin","scrollTop","scrollLeft","onMouseUp","selectRange","getSelection","getRangeAt","selectPos","getBoundingClientRect","codeInput","codeInputPos","tooltip","display","top","left","offsetWidth","xpath","fromRange","val","toString","start","startOffset","end","endOffset","uuidv4","onScroll","startOverlapCheck","endOverlapCheck","el","range","createRange","selectNodeContents","endCharCount","textNode","textNodes","getTextNodesIn","foundStart","charCount","setStart","setEnd","sel","node","nodeType","childNodes","len","apply","removeAllRanges","addRange","setSelectionRange","currentCodes","clearTimeout","matches","newArr","mergedObj","icdCode","icdCodeDesc","editCode","readOnly","splice","removeTxt","index","userSlice","setUserData","selectUserData","SearchResults","title","select","paginate","difficulty","reviewCounter","timestamp","Search","internalIndex","externalIndex","searchIndex","visibleEditor","setVisibleEditor","selectedTask","setSelectedTask","keys","selectTask","answeredUploads","AnalyticsListItem","detailedView","studentAnswer","coderCoverage","coderCodeCounter","mutualCounter","intersect","elem","studentDiff","coderDiff","studentCoverage","totalReviewCounter","peerFoundCodesCounterAvg","AnalyticsCodeItem","hasOwnProperty","proposalEligible","pin","DetailedAnalytics","studentCodeData","setStudentCodeData","coderCodeData","setCoderCodeData","displayCodes","hideView","studentCodes","coderCodes","initialCodes","forEach","includes","codeProposal","GeneralAnalytics","totalCoderCodes","totalFoundCodes","avgTotalCodes","toPrecision","avgTotalFoundCodes","avgDeviations","Analytics","reviewDataList","setReviewDataList","globalAnalytics","setGlobalAnalytics","visibleDetailedAnalytics","setVisibleDetailedAnalytics","detailedAnalyticsData","setDetailedAnalyticsData","getAnalytics","globalKPIS","reviewData","UploadFadeIn","submit","input","focus","defaultChecked","insertTxtStage","setInsertTxtStage","setTxt","finalUploadStage","setFinalUploadStage","onPaste","clipboardData","originalEvent","getData","execCommand","selection","pasteHTML","pasteTxt","onKeyUp","contentEditable","codeDataObj","endEditMode","ReviewListItem","extView","proposalMode","setProposalMode","codeDeviation","toFixed","codeData","setCodeData","fetchProposals","proposalArr","proposals","proposal","proposedCode","studentId","senderId","proposalId","newCodeData","decline","accept","Reviews","visibleReview","setVisibleReview","visibleReviewData","setVisibleReviewData","uploads","showExtReview","ReviewEditor","Routes","exact","path","component","AdminInvite","AdminUsers","CoderEditor","CoderReviews","StudentEditor","StudentSearch","StudentAnalytics","App","store","configureStore","reducer","authReducer","adminReducer","verify","verifyReducer","reviewReducer","userReducer","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.436cba66.chunk.js","sourcesContent":["import axios from \"axios\";\n\n/**\n * @function (01) parse the user token, expiry and refresh token\n *           (02) if token has expired send refresh token to backend and generate a new access token\n *           (03) create authorization header with Bearer access token and return\n */\nexport default async function auth_header() {\n  //01\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  //02\n  /*if (user.tokenExp < Math.floor(Date.now() / 1000)) {\n    const accessData = await axios.post('localhost.../refresh', {\n      refreshToken: user.refreshToken,\n    });\n    if (accessData.data.accessToken) localStorage.setItem(\"user\", JSON.stringify(accessData.data));\n  }\n   */\n  //03\n  if (user && user.accessToken) return { Authorization: \"Bearer \" + user.accessToken };\n  return {};\n}\n","import axios from \"axios\";\nimport auth_header from \"./auth_header\";\n\nexport const signup = (signupData) => {\n    return axios\n        .post('https://gateway.icdcoder.de/admin/', signupData)\n        .then((response) => {\n            if (response.data.tokenData.accessToken) {\n                localStorage.setItem(\"user\", JSON.stringify(response.data.tokenData));\n                localStorage.setItem(\"userType\", response.data.userType);\n                localStorage.setItem(\"loggedIn\", \"true\");\n            }\n            return response.data;\n        });\n};\n\nexport const login = (credentials) => {\n    return axios\n        .post('https://gateway.icdcoder.de/auth/', credentials)\n        .then((response) => {\n            if (response.data.tokenData.accessToken) {\n                localStorage.setItem(\"user\", JSON.stringify(response.data.tokenData));\n                localStorage.setItem(\"userType\", response.data.userType);\n                localStorage.setItem(\"loggedIn\", \"true\");\n            }\n            return response.data;\n        })\n        .catch((e) => {\n            alert('wrong creds')\n            console.log(e)\n        })\n};\n\nexport const logout = () => {\n  return axios\n      .post('https://gateway.icdcoder.de/logout/', {}, { headers: auth_header() })\n      .then((response) => {\n          localStorage.removeItem(\"user\");\n          localStorage.removeItem(\"userType\");\n          localStorage.setItem(\"loggedIn\", \"false\");\n          return response.data;\n      });\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {login, logout, signup} from '../services/auth.service';\n\nconst initialState = {\n    loggedIn: localStorage.getItem(\"loggedIn\") === 'true',\n    userType: localStorage.getItem(\"userType\"),\n};\n\nexport const loginAsync = createAsyncThunk(\n    'auth/login',\n    async (credentials) => {\n        return await login(credentials);\n    }\n);\n\nexport const signUpAsync = createAsyncThunk(\n    'auth/signup',\n    async (signupData) => {\n        return await signup(signupData);\n    }\n);\n\nexport const logoutAsync = createAsyncThunk(\n    'auth/logout',\n    async () => {\n        return await logout();\n    }\n);\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(loginAsync.fulfilled, (state, action) => {\n                console.log('logged in')\n            })\n            .addCase(signUpAsync.fulfilled, (state, action) => {\n                console.log('signed up')\n            })\n            .addCase(logoutAsync.fulfilled, (state, action) => {\n                console.log('loaded logout');\n            });\n    },\n});\n\nexport const selectIsLoggedIn = (state) => state.auth.loggedIn;\nexport const selectUserType = (state) => state.auth.userType;\n\nexport default authSlice.reducer;\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","import React, {useEffect, useState, CSSProperties} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\n\nimport {signUpAsync} from \"../../../slice/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { history } from \"../../../helpers/history\";\n\nimport \"../../../styles/main/general/landing/Signup.css\";\n\nconst Signup = () => {\n\n    const [loading, setLoading] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n\n    const dispatch = useDispatch();\n\n\n    /**\n     * @function (01) prevent the default and update to loading state\n     *           (02) check if hospital option was selected - if not return\n     *           (03) merge with the form object\n     *           (02) dispatch to the signup reducer and wait until fulfilled\n     */\n    const performSignup = (e) => {\n        //01\n        e.preventDefault();\n        setLoading(true);\n        //02\n        if (!selectedOption) return alert('please select a hospital')\n        //03\n        let signupData = {...Object.fromEntries(new FormData(e.target)), ...{hospitalCode: selectedOption.value, hospitalName: selectedOption.label}}\n        //02\n        dispatch(signUpAsync(signupData))\n            .then((res) => {\n                history.push(\"/admin/invite/\");\n                window.location.reload();\n            })\n            .catch((err) => {\n                console.log(err)\n                setLoading(false);\n            });\n    };\n\n    // =================================\n\n    const options = [\n        { value: '00001', label: 'DONAUISAR Klinikum Deggendorf-Dingolfing-Landau' },\n        { value: '00003', label: 'Klinikum Bremen links der Weser' }\n    ];\n\n    const customStyles = {\n        option: (provided, state) => ({\n            ...provided,\n            borderBottom: '2px dotted green',\n            color: state.isSelected ? 'yellow' : 'black',\n            backgroundColor: state.isSelected ? 'green' : 'white',\n            width: '100%',\n            height: \"200%\"\n        }),\n        control: (provided) => ({\n            ...provided,\n            margin: \"4% 0 4% 0\",\n            width: \"34vw\",\n            borderRadius: \"8px\",\n            height: \"8vh\",\n            backgroundColor: \"white\",\n            padding: \"0 2.5% 0 2.5%\",\n            fontSize: \"1em\",\n            color: '#505DF7',\n            textAlign: 'center',\n            border: 'none'\n        }),\n        placeholder: (defaultStyles) => ({\n            ...defaultStyles,\n            fontSize: '1em',\n            color: '#505DF7',\n            textAlign: 'center'\n        })\n    }\n\n    // =================================\n\n    return (\n        <div className=\"main_section right_main_section\">\n            <div id=\"cta_wrapper\">\n                <form className=\"su_section\" onSubmit={performSignup}>\n                    <input className=\"signup_input short_input\" name=\"firstName\" placeholder=\"First name\" type=\"text\" required />\n                    <input className=\"signup_input short_input\" name=\"lastName\" placeholder=\"Last name\" type=\"text\" required />\n                    <Select\n                        placeholder=\"Choose hospital ...\"\n                        styles = { customStyles }\n                        options = { options }\n                        onChange = { setSelectedOption }\n                    />\n                    <input className=\"signup_input short_input\" name=\"email\" placeholder=\"E-Mail\" type=\"email\" required />\n                    <input className=\"signup_input short_input\" name=\"password\" placeholder=\"Password\" type=\"password\" required/>\n                    <button type=\"submit\" className=\"signup_input signup_btn\">\n                        {loading ? (\"Processing ...\") : (\"Signup\")}\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport {Link} from 'react-router-dom';\nimport {selectIsLoggedIn} from \"../../../slice/authSlice\";\n\nimport SignUp from './Signup';\n\nimport \"../../../styles/main/general/landing/LandingPage.css\";\n\nconst LandingPage = () => {\n\n    return (\n        <div className=\"landing_wrapper\">\n            <div id=\"navbar\">\n                <div id=\"logo_wrapper\">\n                    {/*ICD 10 Coder*/}\n                </div>\n                <div id=\"right_navbar\">\n                    <a class=\"navbar_link\">How it works</a>\n                    <a class=\"navbar_link\">Team</a>\n                    <a class=\"navbar_link\">Contact</a>\n                    <Link to={\"/login\"} id=\"login\" class=\"navbar_link active_link\">Log in</Link>\n                </div>\n            </div>\n\n            <div id=\"main\">\n                <div className=\"main_section\">\n                    {/*\n                    <p id=\"main_txt\">Spielerisch ihren Umsatz steigern</p>\n                    <p id=\"main_sub_text\">Durch die Zusammenarbeit von angehenden Ärzten und Krankenhäusern wirklich alle ICD Codes erfassen und so das Geld erhalten, welches Ihrem Krankenhaus zusteht.</p>\n                    */}\n                    <p id=\"main_txt\">Maximise revenues with gamification</p>\n                    <p id=\"main_sub_text\">By getting trainee doctors and hospitals to work together, capture all the ICD codes and get the money your hospital deserves.</p>\n                </div>\n                <SignUp />\n            </div>\n        </div>\n\n    );\n};\n\nexport default LandingPage;\n","import React, {useState} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {loginAsync} from \"../../../slice/authSlice\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { history } from \"../../../helpers/history\";\n\nimport '../../../styles/main/general/login/Login.css';\n\nconst Login = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [forgotPsw, setForgotPsw] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01) prevent the default form behaviour and set to loading\n     *           (02) dispatch the login\n     *           (03) redirect based on user type\n     */\n    const performLogin = (e) => {\n        //01\n        e.preventDefault();\n        setLoading(true);\n        //02\n        dispatch(loginAsync({email: email, password: password}))\n            .then((res) => {\n                //03\n                res.payload.userType === 'student' ? history.push(\"/student/search/\") : res.payload.userType === 'coder' ? history.push(\"/coder/editor/\") : history.push(\"/admin/invite/\")\n                window.location.reload();\n            })\n            .catch((err) => {\n                setLoading(false);\n            });\n    };\n\n    /**\n     * @function (01)\n     */\n    const performForgotPsw = (e) => {\n\n    }\n\n    //if (isLoggedIn) return <Redirect to=\"/profile\" />;\n\n    return (\n        <div className=\"login_wrapper\">\n            <div className=\"login_section\">\n                <div className=\"outer_login_wrapper\">\n                    {/*Welcome*/}\n                </div>\n                {!forgotPsw ? (\n                    <form className=\"login_field_wrapper\" onSubmit={performLogin}>\n                        <input name=\"email\" className=\"login_input\" placeholder=\"E-Mail\" type=\"email\" required onChange={(e) => setEmail(e.target.value)}/>\n                        <input name=\"password\" className=\"login_input\" placeholder=\"Password\" type=\"password\" required onChange={(e) => setPassword(e.target.value)}/>\n                        <button className=\"login_btn\" type=\"submit\">\n                            {loading ? (<span>Processing</span>) : (<span>Login</span>)}\n                        </button>\n                        <div className=\"login_btn forgot_btn\" onClick={() => {setForgotPsw(true)}}>Passwort vergessen</div>\n                        <div className=\"signup_txt_btn\">Noch keinen Account - <Link className=\"signup_txt_link\" to={\"/\"}>erstellen Sie noch heute einen</Link></div>\n                    </form>\n                ) : (\n                    <form className=\"login_field_wrapper\" onSubmit={performForgotPsw}>\n                        <input name=\"email\" className=\"login_input\" placeholder=\"E-Mail\" type=\"email\" required onChange={(e) => setEmail(e.target.value)}/>\n                        <button className=\"login_btn\" type=\"submit\">\n                            {loading ? (<span>Processing</span>) : (<span>Passwort wiederherstellen</span>)}\n                        </button>\n                        <div className=\"login_btn forgot_btn\" onClick={() => {setForgotPsw(false)}}>Zurück</div>\n                    </form>\n                )}\n                <div className=\"outer_login_wrapper\">\n                    <div className=\"login_legal\"><Link className=\"signup_txt_link\" to={\"/\"}>Impressum</Link>  |  <Link className=\"signup_txt_link\" to={\"/\"}>Datenschutz</Link>  |  <Link className=\"signup_txt_link\" to={\"/\"}>AGB</Link>  |  <Link className=\"signup_txt_link\" to={\"/\"}>Kontakt</Link></div>\n                </div>\n            </div>\n            <div className=\"login_section\">\n                Log In\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import axios from \"axios\";\n\n\nexport const validateInviteLink = (hash) => {\n    return axios\n        .get('https://gateway.icdcoder.de/invite/validate/'+hash)\n        .then((response) => {\n            return response.data;\n        })\n        .catch((e) => {\n            console.log('error', e)\n        })\n};\n\nexport const submitInvite = (inviteData) => {\n    return axios\n        .post('https://gateway.icdcoder.de/invite/submit/', inviteData)\n        .then((response) => {\n            if (response.data.tokenData.accessToken) {\n                localStorage.setItem(\"user\", JSON.stringify(response.data.tokenData));\n                localStorage.setItem(\"userType\", response.data.userType);\n                localStorage.setItem(\"loggedIn\", \"true\");\n            }\n            return response.data;\n        })\n        .catch((e) => {\n            console.log('error', e)\n        })\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { validateInviteLink, submitInvite } from '../services/verify.service';\n\nconst initialState = {\n};\n\nexport const validateLinksAsync = createAsyncThunk(\n    'invite/validate',\n    async (hash) => {\n        const response = await validateInviteLink(hash);\n        return response;\n    }\n);\n\nexport const submitUserAsync = createAsyncThunk(\n    'invite/submit',\n    async (userData) => {\n        return await submitInvite(userData);\n    }\n);\n\nexport const verifySlice = createSlice({\n    name: 'verify',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(validateLinksAsync.fulfilled, (state, action) => {\n                console.log(action.payload)\n            })\n            .addCase(submitUserAsync.fulfilled, (state, action) => {\n            })\n    },\n});\n\nexport const {} = verifySlice.actions;\n\nexport default verifySlice.reducer;\n","import React, { useState, useEffect } from \"react\";\nimport {validateLinksAsync, submitUserAsync} from \"../../../slice/verifySlice\"\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nimport '../../../styles/main/general/verify/verify.css'\n\nconst Verify = ({ match }) => {\n\n    const [inviteData, setInviteData] = useState({})\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (00) remove all tokens\n     *           (01) verify the signup link backend side\n     */\n    useEffect(() => {\n        //00\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"userType\");\n        localStorage.setItem(\"loggedIn\", \"false\");\n\n        //01\n        dispatch(validateLinksAsync(match.params.hash))\n            .then((res) => {\n                setInviteData(prevState => ({...prevState, ...res.payload.inviteData}))\n            })\n            .catch((e) => {\n                console.log('error', e)\n            })\n\n        console.log()\n    }, [])\n\n\n    /**\n     * @function (01) prevent the default form submit\n     *           (02) dispatch the form result to proceed data in the backend\n     *           (03) redirect user based on type to the appropriate home page\n     */\n    const signup = (e) => {\n        //01\n        e.preventDefault();\n        //02\n        let signupData = {...{hash: match.params.hash, inviteId: inviteData._id}, ...Object.fromEntries(new FormData(e.target))}\n        dispatch(submitUserAsync(signupData))\n            .then((res) => {\n                //03\n                res.payload.userType === 'student' ? history.push(\"/student/search/\") : history.push(\"/coder/editor/\")\n                window.location.reload();\n\n                //todo redirect to the right page\n                //todo update user type in auth slice\n            })\n            .catch((e) => {\n                console.log('error', e)\n            })\n\n\n    }\n\n\n    return (\n\n        <div className=\"main_wrapper\">\n            <div className=\"top_section\">\n                <div className=\"heading_text\"></div>\n            </div>\n\n            <div className=\"main_verify_section\">\n                <form className=\"main_sub_large\" onSubmit={signup}>\n                    <div className=\"input_wrapper\">\n                        <div className=\"input_section\">\n                            <div className=\"input_desc\" id=\"psw_input\">E-Mail wiederholen</div>\n                            <input className=\"input_field\" type=\"text\" name=\"email\" required/>\n                        </div>\n                        <div className=\"input_section\">\n                            <div className=\"input_desc\" id=\"psw_input\">Passwort vergeben</div>\n                            <input className=\"input_field\" id=\"psw_input\" type=\"password\" name=\"password\" required/>\n                        </div>\n                        <div className=\"input_section\">\n                            <button type=\"submit\" className=\"submit_btn\" id=\"submit_button\">Registrieren</button>\n                        </div>\n                    </div>\n                </form>\n                <div className=\"main_sub_small\">{inviteData.userType === 'student' ? \"Student Account\" : \"Coder Account\"}</div>\n            </div>\n\n            <div className=\"bottom_section\"></div>\n        </div>\n\n\n    );\n};\n\nexport default Verify;\n","import React, {useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\n\nimport {logoutAsync} from \"../../../slice/authSlice\";\n\nimport '../../../styles/main/general/logout/logout.css';\nimport {history} from \"../../../helpers/history\";\n\n\n\nconst Logout = () => {\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01) dispatch the logout to the backend\n     *           (02) on success redirect to the landing page again\n     */\n    useEffect(() => {\n        //01\n        dispatch(logoutAsync())\n            .then((res) => {\n                //02\n                history.push(\"/\");\n                window.location.reload();\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }, [])\n\n    return (\n        <div className=\"logout_container\">\n            You are safely being logged out...\n        </div>\n    );\n};\n\nexport default Logout;\n","import axios from \"axios\";\nimport auth_header from \"./auth_header\";\n\nexport const activeLinks = async () => {\n  return axios\n      .get('https://gateway.icdcoder.de/admin/invite/',{ headers: await auth_header() })\n      .then((response) => {\n        return response.data;\n      });\n};\n\nexport const getUsers = async () => {\n    return axios\n        .get('https://gateway.icdcoder.de/admin/users/',{ headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n\nexport const removeUser = async (userId) => {\n    return axios\n        .post('https://gateway.icdcoder.de/admin/remove/users/', userId,{ headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n\nexport const inviteUser = async (inviteData) => {\n  return axios\n      .post('https://gateway.icdcoder.de/admin/invite/', inviteData, { headers: await auth_header() })\n      .then((response) => {\n          return response.data;\n      });\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {activeLinks, getUsers, inviteUser, removeUser} from '../services/admin.service';\n\nconst initialState = {\n    activeLinks: [],\n    userList: []\n};\n\nexport const currentLinksAsync = createAsyncThunk(\n    'admin/fetchActiveLinks',\n    async () => {\n        return await activeLinks();\n    }\n);\n\nexport const getUserAsync = createAsyncThunk(\n    'admin/getUserList',\n    async () => {\n        return await getUsers();\n    }\n);\n\nexport const removeUserAsync = createAsyncThunk(\n    'admin/removeUser',\n    async (userId) => {\n        return await removeUser(userId);\n    }\n);\n\nexport const inviteUserAsync = createAsyncThunk(\n    'admin/invite',\n    async (userData) => {\n        return await inviteUser(userData);\n    }\n);\n\nexport const adminSlice = createSlice({\n    name: 'admin',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(currentLinksAsync.fulfilled, (state, action) => {\n                console.log('loaded current orders')\n                state.currentOrders = action.payload;\n            })\n            .addCase(getUserAsync.fulfilled, (state, action) => {\n                let filteredUserList = action.payload.userList.filter((user) => user._id !== action.payload.userId);\n                return {...state, userList: filteredUserList}\n            })\n            .addCase(removeUserAsync.fulfilled, (state, action) => {\n                let updatedUserList = state.userList.filter((user) => user._id !== action.payload.userId);\n                return { ...state, userList: updatedUserList }\n            })\n            .addCase(inviteUserAsync.fulfilled, (state, action) => {\n                console.log('loaded past orders')\n                state.pastOrders = action.payload;\n            })\n    },\n});\n\nexport const {} = adminSlice.actions;\n\nexport const selectActiveLinks = (state) => state.admin.activeLinks;\nexport const selectUserList = (state) => state.admin.userList;\n\nexport default adminSlice.reducer;\n","import React, { useState } from \"react\";\nimport \"../../../styles/shared/navbar/Tooltip.css\";\n\nconst Tooltip = (props) => {\n\n    const [active, setActive] = useState(false);\n\n    const showTip = () => {\n        setActive(true);\n    };\n\n    const hideTip = () => {\n        setActive(false);\n    };\n\n    return (\n        <div\n            className=\"Tooltip-Wrapper\"\n            // When to show the tooltip\n            onMouseEnter={showTip}\n            onMouseLeave={hideTip}\n        >\n            {/* Wrapping */}\n            {props.children}\n            {active && (\n                <div className={`Tooltip-Tip ${props.direction || \"top\"}`}>\n                    {/* Content */}\n                    {props.content}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Tooltip;\n","export default __webpack_public_path__ + \"static/media/add_user.f6b16a00.svg\";","export default __webpack_public_path__ + \"static/media/logout.52e3f806.svg\";","export default __webpack_public_path__ + \"static/media/analytics.1d780541.svg\";","export default __webpack_public_path__ + \"static/media/upload.df6672c7.svg\";","export default __webpack_public_path__ + \"static/media/search.2256f2ec.svg\";","export default __webpack_public_path__ + \"static/media/edit.8e1b6bed.svg\";","import React, {useState, useRef, useEffect} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {selectUserType} from \"../../../slice/authSlice\";\n\nimport Tooltip from \"./Tooltip\";\n\nimport '../../../styles/main/general/navbar/Navbar.css';\n\nimport add from '../../../assets/nav/add_user.svg';\nimport logout from '../../../assets/nav/logout.svg';\nimport analytics from '../../../assets/nav/analytics.svg';\nimport upload from '../../../assets/nav/upload.svg';\nimport search from '../../../assets/nav/search.svg';\nimport edit from '../../../assets/nav/edit.svg';\n\nconst Navbar = () => {\n\n    const userType = useSelector(selectUserType)\n\n\n    /**\n     * @function (01) on render of the component get the current path depending on the path add the active UI class\n     */\n    useEffect(() => {\n        //01\n        //document.getElementById(`${window.location.pathname.substring(1)}_nav_item`).classList.add('active_nav_item');\n    }, []);\n\n    /**\n     * @function (01) get the currently highlighted nav button and remove the highlight\n     *           (02) add the highlight to the clicked button\n     * @param id of the element where the class is added to\n     */\n    const changeHighlight = (id) => {\n        //01\n        //document.getElementsByClassName('active_nav_item')[0].classList.remove('active_nav_item')\n        //02\n        //document.getElementById(id).classList.add('active_nav_item');\n    }\n\n    return (\n        <div className=\"nav_bar\">\n\n            <div className=\"outer_nav_bar\">\n                <div className=\"nav_item\">\n                    {/*<img src={logo} className=\"nav_icon large_nav_icon\" />*/}\n                </div>\n            </div>\n\n            {\n                userType === 'admin' ? (\n                    <div className=\"center_nav_bar\">\n                        <Link to={\"/admin/invite/\"} id=\"order_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('orders_nav_item')}>\n                            <Tooltip content=\"Invite\" direction=\"right\">\n                                <img src={add} className=\"nav_icon\" />\n                            </Tooltip>\n                        </Link>\n                        <Link to={\"/admin/users/\"} id=\"order_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('orders_nav_item')}>\n                            <Tooltip content=\"User management\" direction=\"right\">\n                                <img src={edit} className=\"nav_icon\" />\n                            </Tooltip>\n                        </Link>\n                    </div>\n                ) : userType === 'coder' ? (\n                    <div className=\"center_nav_bar\">\n                        <div className=\"center_nav_bar\">\n                            <Link to={\"/coder/editor/\"} id=\"order_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('orders_nav_item')}>\n                                <Tooltip content=\"Upload document\" direction=\"right\">\n                                    <img src={upload} className=\"nav_icon\" />\n                                </Tooltip>\n                            </Link>\n                            <Link to={\"/coder/reviews/\"} id=\"income_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('income_nav_item')}>\n                                <Tooltip content=\"Reviews\" direction=\"right\">\n                                    <img src={analytics} className=\"nav_icon\" />\n                                </Tooltip>\n                            </Link>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"center_nav_bar\">\n                        <div className=\"center_nav_bar\">\n                            <div className=\"center_nav_bar\">\n                                <Link to={\"/student/search/\"} id=\"order_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('orders_nav_item')}>\n                                    <Tooltip content=\"Suche\" direction=\"right\">\n                                        <img src={search} className=\"nav_icon\" />\n                                    </Tooltip>\n                                </Link>\n                                <Link to={\"/student/analytics/\"} id=\"income_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('income_nav_item')}>\n                                    <Tooltip content=\"Analytics\" direction=\"right\">\n                                        <img src={analytics} className=\"nav_icon\" />\n                                    </Tooltip>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n\n            <div className=\"outer_nav_bar\">\n                <Link to={\"/logout\"} id=\"logout_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('logout_nav_item')}>\n                    <Tooltip content=\"Logout\" direction=\"right\">\n                        <img src={logout} className=\"nav_icon\" />\n                    </Tooltip>\n                </Link>\n            </div>\n\n        </div>\n\n    );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nimport '../../../styles/main/admin/manage/UserListItem.css';\n\nconst UserListItem = ({ user, deleteUser }) => {\n    return (\n        <div className=\"user_list_item\">\n            <div className=\"user_list_section small_user_list_section\">{user.userType}</div>\n            <div className=\"user_list_section\">{ new Date(user.creationTimestamp).toLocaleDateString(\"de-DE\")}</div>\n            <div className=\"user_list_section\">{user.firstName !== undefined ? (user.firstName) : 'no name'}</div>\n            <div className=\"user_list_section\">{user.email}</div>\n            <div className=\"user_list_section small_user_list_section\" onClick={() => deleteUser(user._id)}>Delete</div>\n        </div>\n    );\n};\n\nexport default UserListItem;\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport {selectIsLoggedIn, selectUserType} from \"../../../slice/authSlice\";\nimport {getUserAsync, removeUserAsync, selectUserList} from \"../../../slice/adminSlice\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nimport Navbar from \"../../general/navbar/Navbar\";\nimport UserListItem from \"../../admin/manage/UserListItem\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/main/admin/manage/ManageUser.css';\n\nconst ManageUser = () => {\n\n    const userList = useSelector(selectUserList)\n    const loggedIn = useSelector(selectIsLoggedIn)\n    const userType = useSelector(selectUserType)\n\n    if (!loggedIn || userType !== 'admin') {\n        history.push(\"/login\");\n        window.location.reload();\n    }\n\n    const dispatch = useDispatch();\n\n    // ======================================\n\n    /**\n     * @function (01) on load of component load all users of this hospital\n     *           (02) hide loading sign\n     */\n    useEffect(() => {\n        //01\n        dispatch(getUserAsync())\n            .then((res) => {\n                //02\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    /**\n     * @function (01) dispatch the delete user function\n     * @param userId is the specific id of the user\n     */\n    const removeUser = (userId) => {\n        //01\n        dispatch(removeUserAsync({userId: userId}))\n            .then((res) => {\n                console.log('success', res)\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }\n\n    // ======================================\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Manage users</div>\n                </div>\n                <div className=\"main_center_content start_main_center_content\">\n                    <div className=\"user_header\">\n                        <div className=\"user_header_section small_user_header_section\">Type</div>\n                        <div className=\"user_header_section\">Signup Date</div>\n                        <div className=\"user_header_section\">Name</div>\n                        <div className=\"user_header_section\">E-Mail</div>\n                        <div className=\"user_header_section small_user_header_section\">Delete</div>\n                    </div>\n\n                    <div className=\"user_table\">\n                        { userList.length > 0 ? userList.map((user, i) => <UserListItem user= {user} deleteUser = {removeUser} />) : <div className=\"admin_user_empty\">No users found - Invite other users</div>}\n                    </div>\n                </div>\n                <div className=\"main_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default ManageUser;\n","import React from \"react\";\n\nimport {selectIsLoggedIn, selectUserType} from \"../../../slice/authSlice\";\nimport {inviteUserAsync} from \"../../../slice/adminSlice\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nimport Navbar from \"../../general/navbar/Navbar\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/main/admin/invite/InviteUser.css';\n\nconst InviteUser = () => {\n\n    const loggedIn = useSelector(selectIsLoggedIn)\n    const userType = useSelector(selectUserType)\n\n    if (!loggedIn || userType !== 'admin') {\n        history.push(\"/login\");\n        window.location.reload();\n    }\n\n    const dispatch = useDispatch();\n\n    // ======================================\n\n    /**\n     * @function (01) prevent the default of the form behaviour\n     *           (02) dispatch the user invite data - convert form data to object\n     *           (03) clear the form and indicate success\n     *           (04) todo reload all active links\n     */\n    const inviteUser = (e) => {\n        //01\n        e.preventDefault();\n        //02\n        dispatch(inviteUserAsync(Object.fromEntries(new FormData(e.target))))\n        //03\n        e.currentTarget.reset();\n    }\n\n    // ======================================\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n                <div className=\"main_center_content_wrapper\">\n                    <div className=\"main_outer_content\">\n                        <div className=\"main_outer_heading\">Invite users</div>\n                    </div>\n                    <div className=\"main_center_content\">\n                        <form className=\"invite_section\" onSubmit={inviteUser}>\n                            <input className=\"create_input_invite_admin\" placeholder=\"E-Mail\" name=\"email\" type=\"email\" required/>\n                            <input className=\"radio_create\" id=\"student_radio\" type=\"radio\" name=\"user_type\" value=\"student\" required/>\n                            <label className=\"radio_label\" htmlFor=\"student_radio\">Student</label>\n                            <input className=\"radio_create\" id=\"coder_radio\" type=\"radio\" name=\"user_type\" value=\"coder\" required/>\n                            <label className=\"radio_label\" htmlFor=\"coder_radio\">Coder</label>\n                            <div className=\"horizontal_divider\"></div>\n                            <button className=\"create_submit_invite_admin\" type=\"submit\">Send</button>\n                        </form>\n                    </div>\n                    <div className=\"main_outer_content\"></div>\n                </div>\n        </div>\n    );\n};\n\nexport default InviteUser;\n","import axios from \"axios\";\nimport auth_header from \"./auth_header\";\n\nexport const codeCompletion = async (data) => {\n    return axios\n        .post('https://gateway.icdcoder.de/code/', data, { headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n\nexport const uploadCode = async (data) => {\n    return axios\n        .post('https://gateway.icdcoder.de/coder/upload/', data, { headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n\nexport const uploadStudentCode = async (data) => {\n    return axios\n        .post('https://gateway.icdcoder.de/student/upload/', data, { headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n\nexport const getCreatedUploads = async () => {\n    return axios\n        .get('https://gateway.icdcoder.de/coder/upload/', { headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n\nexport const getSuitableUploads = async (searchOffset) => {\n    return axios\n        .post('https://gateway.icdcoder.de/student/tasks/', searchOffset, { headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n\nexport const getAnalyticsUploads = async (reviewIds) => {\n    return axios\n        .post('https://gateway.icdcoder.de/student/analytics/', reviewIds, { headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n\nexport const proposeCode = async (code) => {\n    return axios\n        .post('https://gateway.icdcoder.de/student/proposal/', code, {headers: await auth_header()})\n        .then((response) => {\n            return response.data;\n        });\n}\n\nexport const getProposal = async (reviewId) => {\n    return axios\n        .post('https://gateway.icdcoder.de/coder/proposal/', reviewId, {headers: await auth_header()})\n        .then((response) => {\n            return response.data;\n        });\n}\n\nexport const modifyProposal = async (proposalData) => {\n    return axios\n        .post('https://gateway.icdcoder.de/coder/proposal/edit/', proposalData, {headers: await auth_header()})\n        .then((response) => {\n            return response.data;\n        });\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n    codeCompletion,\n    getAnalyticsUploads,\n    //compareCodes,\n    getCreatedUploads, getProposal,\n    getSuitableUploads, modifyProposal, proposeCode,\n    uploadCode, uploadStudentCode\n} from '../services/review.service';\n\nconst initialState = {\n    createdUploads: [],\n    suitableUploads: {}\n};\n\nexport const codeCompletionAsync = createAsyncThunk(\n    'review/codeCompletion',\n    async (data) => {\n        return await codeCompletion(data);\n    }\n);\n\nexport const uploadCodeAsync = createAsyncThunk(\n    'review/uploadCode',\n    async (data) => {\n        return await uploadCode(data);\n    }\n);\n\nexport const uploadStudentCodeAsync = createAsyncThunk(\n    'review/uploadStudentCode',\n    async (data) => {\n        const response = await uploadStudentCode(data);\n        return response;\n    }\n);\n\nexport const getUploadsAsync = createAsyncThunk(\n    'review/getUploads',\n    async () => {\n        return await getCreatedUploads();\n    }\n);\n\nexport const getSuitableUploadsAsync = createAsyncThunk(\n    'review/getSuitableUploads',\n    async (searchOffset) => {\n        const response = await getSuitableUploads(searchOffset);\n        return response;\n    }\n);\n\nexport const getReviewAnalyticsAsync = createAsyncThunk(\n    'review/analyseReviews',\n    async (reviewIds) => {\n        return await getAnalyticsUploads(reviewIds);\n    }\n);\n\nexport const proposeCodeAsync = createAsyncThunk(\n    'review/proposeCode',\n    async (code) => {\n        return await proposeCode(code);\n    }\n);\n\nexport const getProposalsAsync = createAsyncThunk(\n    'review/getProposal',\n    async (reviewId) => {\n        return await getProposal(reviewId);\n    }\n);\n\nexport const modifyProposalsAsync = createAsyncThunk(\n    'review/modifyProposal',\n    async (proposalData) => {\n        return await modifyProposal(proposalData);\n    }\n);\n\nexport const reviewSlice = createSlice({\n    name: 'review',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(codeCompletionAsync.fulfilled, (state, action) => {\n                //todo add to redux\n            })\n            .addCase(uploadCodeAsync.fulfilled, (state, action) => {\n                //todo add to redux\n            })\n            .addCase(getUploadsAsync.fulfilled, (state, action) => {\n                state.createdUploads = action.payload.codes.sort((a, b) => b.proposalCounter-a.proposalCounter);\n            })\n            .addCase(getSuitableUploadsAsync.fulfilled, (state, action) => {\n                state.suitableUploads = {...state.suitableUploads, ...action.payload}\n            })\n            .addCase(uploadStudentCodeAsync.fulfilled, (state, action) => {\n                console.log('uploaded student code')\n            })\n            .addCase(getReviewAnalyticsAsync.fulfilled, (state, action) => {\n                console.log('analytics ')\n            })\n            .addCase(proposeCodeAsync.fulfilled, (state, action) => {\n                console.log('proposed code')\n            })\n    },\n});\n\nexport const {} = reviewSlice.actions;\n\nexport const selectCreatedUploads = (state) => state.review.createdUploads;\nexport const selectSuitableUploads = (state) => state.review.suitableUploads;\n\nexport default reviewSlice.reducer;\n","import React, {useEffect, useState} from \"react\";\n\nimport '../../../styles/shared/editor/editor.css';\nimport '../../../styles/shared/fadein.css';\n\nimport {codeCompletionAsync, uploadStudentCodeAsync} from \"../../../slice/reviewSlice\";\n\nimport {fromRange} from \"xpath-range\";\nimport {v4 as uuidv4} from \"uuid\";\n\nimport {useDispatch} from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nconst Editor = ({ close, taskData }) => {\n\n    const [selTxt, setSelTxt] = useState({})\n    const [tempCodes, setTempCodes] = useState([])\n    const [loadedTxt, setLoadedTxt] = useState(false)\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01) get the dark background, the content wrapper and the inputs\n     *           (02) increase the dark background opacity\n     *           (03) fade up the content wrapper\n     *           =============\n     *           (04) insert the feature rich txt\n     *           (05) show the tooltip\n     *           (06) ensure that the code display has the same length as the overflow text\n     *           (07) ensure that the empty codes text is centered\n     */\n    useEffect(() => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        bg.style.cssText = \"opacity: 100%\";\n        //03\n        content.style.marginTop = \"0\";\n        //04\n        document.getElementsByClassName('code_input')[0].innerHTML = taskData.txt;\n        //05\n        setLoadedTxt(true);\n        //06\n        document.getElementById('internal_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        //07\n        document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight+'px'\n    }, [])\n\n    /**\n     * @function (01) get the background and content\n     *           (02) return if user clicked on the content\n     *           (03) user clicked outside of content - hide\n     *           (04) after timeout set state again to hidden\n     */\n    const hideCreateView = (e, forced) => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        if (!forced && content.contains(e.target)) return;\n        //03\n        bg.style.cssText = \"opacity: 0%\";\n        content.style.marginTop = \"150vh\";\n        //04\n        setTimeout(() => close(), 350)\n    };\n\n    /**\n     * @function (01) define the target by choosing the complementary of the scrolled div\n     *           (02) assign scroll toü and scroll left to the target based on the event scrolled position\n     */\n    const syncScroll = (e, origin) => {\n        //01\n        const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]\n        //02\n        target.scrollTop = e.currentTarget.scrollTop;\n        target.scrollLeft = e.currentTarget.scrollLeft;\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) check that there is no overlapping regarding the codes\n     *           (02) highlight the code\n     *           (03) push into data structure (updates the code overview on the right side)\n     */\n    const addCode = () => {\n        //01\n        let startOverlapCheck = tempCodes.filter(code => selTxt.start > code.start && selTxt.start < code.end)\n        let endOverlapCheck = tempCodes.filter(code => selTxt.end < code.end && selTxt.end > code.start)\n        if (startOverlapCheck.length > 0 || endOverlapCheck.length > 0) return alert('No overlaps possbile')\n        //02\n        setSelectionRange(selTxt.start, selTxt.end)\n        //highlight(\"yellow\");\n        //03\n        setTempCodes(currentCodes => [...currentCodes, selTxt]);\n    }\n\n    /**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */\n    const selector = (e) => {\n        //01\n        let select = window.getSelection(),\n            selectRange = select.getRangeAt(0),\n            selectPos = selectRange.getBoundingClientRect(),\n            codeInput = document.getElementsByClassName('code_input')[0],\n            codeInputPos = codeInput.getBoundingClientRect(),\n            tooltip = document.getElementById('tooltip_editor_wrapper');\n        //02\n        if (selectPos.width < 1) return tooltip.style.display = \"none\";\n        //03\n        tooltip.style.display = \"inline\";\n        tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n        tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n        //04\n        let xpath = fromRange(selectRange, codeInput)\n\n        setSelTxt({...selTxt,  ...{\n                val: selectRange.toString(),\n                start: xpath.startOffset,\n                end: xpath.endOffset,\n                top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5,\n                id: uuidv4()\n            },\n        })\n    }\n\n    /**\n     * @function (01)\n     *           (02)\n     * @param start\n     * @param end\n     */\n    function setSelectionRange(start, end) {\n\n        let el = document.getElementsByClassName('code_input')[0];\n\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var textNodes = getTextNodesIn(el);\n        var foundStart = false;\n        var charCount = 0, endCharCount;\n\n        for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n            endCharCount = charCount + textNode.length;\n            if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {\n                range.setStart(textNode, start - charCount);\n                foundStart = true;\n            }\n            if (foundStart && end <= endCharCount) {\n                range.setEnd(textNode, end - charCount);\n                break;\n            }\n            charCount = endCharCount;\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n        //Helper functions\n\n        function getTextNodesIn(node) {\n            var textNodes = [];\n            if (node.nodeType === 3) {\n                textNodes.push(node);\n            } else {\n                var children = node.childNodes;\n                for (var i = 0, len = children.length; i < len; ++i) {\n                    textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n                }\n            }\n            return textNodes;\n        }\n    }\n\n    //====================================================================\n\n    /**\n     * @function (00) wait until typing ended and dispatch send to backend for code completion and wait - if more than one is found throw error\n     *           (01) duplicate the array\n     *           (02) find the array entry by index\n     *           (03) add code to this entry\n     *           (04) add the description\n     *           (05) indicate that this code is ok -> remove any border color\n     * @param e is the event\n     * @param i is the index of the array element which is\n     * @param type either id or desc of the code - required for the autocompletion\n     */\n    let typingTimerEdit;\n    const editCode = (e, i, type) => {\n        //00\n        clearTimeout(typingTimerEdit);\n        if (!e.target.value) return;\n        typingTimerEdit = setTimeout(() => {\n            dispatch(codeCompletionAsync({type: type, val: e.target.value}))\n                .then((res) => {\n                    if (res.payload.matches.length !== 1) {\n                        document.getElementsByClassName('ind_code_display')[i].style.border = \"1px solid red\";\n                        return document.getElementsByClassName('large_code_section')[i].value = 'Zu viele Ergebnisse - '+res.payload.matches.length\n                    }\n                    //01\n                    let newArr = [...tempCodes];\n                    //02\n                    let mergedObj = {...newArr[i], icdCode: e.target.value, icdCodeDesc: res.payload.matches[0][2]}\n                    newArr[i] = mergedObj;\n                    //03\n                    setTempCodes(newArr);\n                    //04\n                    document.getElementsByClassName('large_code_section')[i].value = res.payload.matches[0][2]\n                    //05\n                    document.getElementsByClassName('ind_code_display')[i].style.border = \"none\";\n                })\n                .catch((err) => {\n                    console.log(err)\n                });\n        }, 200);\n    }\n\n    /**\n     * @function (01) duplicate the array\n     *           (02) splice the array\n     *           (03) set the new temp codes\n     * @param i index of the highlight which is deleted\n     */\n    const removeTxt = (i) => {\n        let newArr = [...tempCodes];\n        //02\n        newArr.splice(i, 1);\n        //03\n        setTempCodes(newArr);\n    }\n\n    // ====================================================================\n\n    /**\n     * @function (01) check if all temp codes were assigned - if not proceed and let user assign icd 10 code\n     *           (02) upload codes to backend and perform server side comparison\n     *           (03) once finished jump to the analytics page where detailed information can be obtained\n     */\n    const uploadStudentCode = () => {\n        //01\n        const nonFinishedCodes = tempCodes.filter((code, index) => !code.icdCode || code.icdCode === \"\")\n        if (nonFinishedCodes.length > 0) return alert('not all codes were assigned');\n        //02\n        dispatch(uploadStudentCodeAsync({tempCodes, ...{reviewId: taskData._id}}))\n            .then((res) => {\n                //03\n                history.push(\"/student/analytics/\");\n                window.location.reload();\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n\n    }\n\n    //====================================================================\n\n    return (\n        <div className=\"menu_dark_bg\" onClick={hideCreateView}>\n            <div className=\"create_input_wrapper enlarged_create_input_wrapper\">\n                <div className=\"create_input_hide\" onClick={(e) => {hideCreateView(e, true)}}>X</div>\n                <div className=\"code_input enlarged_code_input\" onMouseUp={selector} onScroll={(e) => syncScroll(e, 'input')}>\n\n                    {loadedTxt && <div id=\"tooltip_editor_wrapper\">\n                        <div className=\"tooltip_btn\" onClick={addCode}>Add code</div>\n                    </div>}\n                </div>\n                <div className=\"code_display enlarged_code_display\" onScroll={(e) => syncScroll(e, 'display')}>\n                    <div id=\"internal_code_display\">\n                    {\n                        tempCodes.length > 0 ? (\n                            tempCodes.map((code, i) => {\n                                return <div className=\"ind_code_display\" id={code.id} style={{top:code.top+'px'}} key={i}>\n                                    <input placeholder=\"Code ID\" className=\"small_code_section\" onChange={(e) => editCode(e, i, 'id')}/>\n                                    <input placeholder=\"Code Desc\" className=\"large_code_section\" readOnly/>\n                                    <div className=\"remove_code_btn\" onClick={() => removeTxt(i)}>X</div>\n                                </div>;\n                            })\n                        ) : (\n                            <div className=\"empty_editor\">Vergebe Codes</div>\n                            )\n                    }\n                    </div>\n                    { tempCodes.length > 0 && <div className=\"student_compare_btn\" onClick={() => uploadStudentCode()}>Upload codes and compare</div> }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Editor;\n","import axios from \"axios\";\nimport auth_header from \"./auth_header\";\n\nexport const userData = async () => {\n    return axios\n        .get('https://gateway.icdcoder.de/user/', { headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userData } from '../services/user.service';\n\nconst initialState = {\n    userData: {}\n};\n\nexport const getUserAsync = createAsyncThunk(\n    'user/data',\n    async (credentials) => {\n        return await userData(credentials);\n    }\n);\n\n//todo edit user and so on\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUserData: (state, action) => {\n            state.userData = action.payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(getUserAsync.fulfilled, (state, action) => {\n                return {userData: action.payload.userData}\n            })\n    },\n});\n\nexport const { setUserData } = userSlice.actions;\n\nexport const selectUserData = (state) => state.user.userData;\n\nexport default userSlice.reducer;\n","import React from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport {selectSuitableUploads} from \"../../../slice/reviewSlice\";\n\nimport '../../../styles/main/student/search/Results.css';\n\nconst SearchResults = ({ type, title, paginate, select }) => {\n\n    const searchResult = useSelector(selectSuitableUploads)\n    const data = searchResult[type]\n\n    return (\n        <div className=\"search_result_container\">\n            <div className=\"search_result_desc\">{title}</div>\n            {\n                data && data.length > 0 ? (\n                    data.map((res, index) => {\n                        return <div className=\"ind_search_result\" onClick={() => {select(res)}} >\n                            <div className=\"search_result_large\">{res.title}</div>\n                            <div className=\"search_result_small\">{res.difficulty}</div>\n                            <div className=\"search_result_small\">{res.reviewCounter}</div>\n                            <div className=\"search_result_small\">{new Date(res.timestamp).toLocaleDateString(\"de-DE\")}</div>\n                        </div>\n                    })\n                ) : (\n                    <div className=\"empty_search_result\">Empty</div>\n                )\n            }\n        </div>\n    );\n};\n\nexport default SearchResults;\n","import React, {useState, useEffect} from \"react\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nimport {selectIsLoggedIn, selectUserType} from \"../../../slice/authSlice\";\nimport {selectUserData, getUserAsync} from \"../../../slice/userSlice\";\nimport {getSuitableUploadsAsync} from \"../../../slice/reviewSlice\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/main/student/search/Search.css';\n\nimport Navbar from \"../../general/navbar/Navbar\";\n\nimport SearchResults from \"./Results\";\nimport Editor from \"../editor/Editor\";\n\n\nconst Search = () => {\n\n    const dispatch = useDispatch();\n\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userType = useSelector(selectUserType);\n    const userData = useSelector(selectUserData);\n\n    const [searchIndex, setSearchIndex] = useState({\n        internalIndex: 0,\n        externalIndex: 0\n    })\n    const [visibleEditor, setVisibleEditor] = useState(false)\n    const [selectedTask, setSelectedTask] = useState({})\n\n    if (!loggedIn || userType !== 'student') {\n        history.push(\"/login\");\n        window.location.reload();\n    }\n\n    /**\n     * @function (00) check if user data exists in redux - if not load the data\n     *           (01) load suitable tasks via dispatch\n     *           (02) hide the loading sign once fulfilled\n     */\n    useEffect(async () => {\n        //00\n        if (Object.keys(userData).length === 0) dispatch(getUserAsync());\n        //01\n        dispatch(getSuitableUploadsAsync(searchIndex))\n            .then((res) => {\n                //02\n            })\n            .catch((err) => {\n                console.log('error', err)\n            })\n    }, [])\n\n    /**\n     * @function (01) update the paginatiopn index counter\n     *           (02) dispatch the updated suitable upload and update the redux state variable\n     */\n    const paginateResults = () => {\n\n    }\n\n    /**\n     * @function (00) check if user has already answered this task\n     *           (01) set the selected task data\n     *           (02) make the editor visible\n     * @param taskData object of the entire task\n     */\n    const selectTask = (taskData) => {\n        //00\n        if (userData.answeredUploads && userData.answeredUploads.filter(review => review[0] === taskData._id.toString()).length > 0) return alert('already answered')\n        //01\n        setSelectedTask({...selectedTask, ...taskData})\n        //02\n        setVisibleEditor(true);\n    }\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Search</div>\n                </div>\n\n                <div className=\"main_center_content\">\n                    <SearchResults type = {\"extReviews\"} title = {\"Other universities\"} select = {selectTask} />\n                    <SearchResults type = {\"intReviews\"} title = {\"My university\"} select = {selectTask} />\n                    { visibleEditor && <Editor taskData = {selectedTask} close = {() => setVisibleEditor(false)}/> }\n                </div>\n\n                <div className=\"main_outer_content right_bound_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Search;\n","import React from \"react\";\n\nimport '../../../styles/shared/analytics/analytics_list_item.css';\n\nconst AnalyticsListItem = ({ data, index, detailedView }) => {\n\n    return (\n        <div className=\"analytics_list_item_wrapper\" onClick={() => detailedView(data)}>\n            <div className=\"analytics_item_title\">{data.review.title}</div>\n            <div className=\"analytics_list_item_separator\"></div>\n            <div className=\"analytics_ratio_wrapper\">\n                <div className=\"analytics_ratio_desc\">Date:</div>\n                <div className=\"analytics_ratio_val\">{new Date(data.studentAnswer.timestamp).toLocaleDateString(\"de-DE\")}</div>\n            </div>\n\n            <div className=\"analytics_list_item_separator\"></div>\n\n            <div className=\"analytics_ratio_wrapper\">\n                <div className=\"analytics_ratio_desc\">Total / Identified</div>\n                <div className=\"analytics_ratio_val\">{data.coderCoverage.coderCodeCounter+\" / \"+ data.coderCoverage.mutualCounter}</div>\n            </div>\n            <div className=\"analytics_ratio_wrapper\">\n                <div className=\"analytics_ratio_desc\">Mutual:</div>\n                <div className=\"analytics_ratio_val\">{data.coderCoverage.intersect.map((elem, index )=> {return elem + '/'})}</div>\n            </div>\n            <div className=\"analytics_ratio_wrapper\">\n                <div className=\"analytics_ratio_desc\">My deviation:</div>\n                <div className=\"analytics_ratio_val\">{data.coderCoverage.studentDiff.map((elem, index )=> {return elem + '/'})}</div>\n            </div>\n            <div className=\"analytics_ratio_wrapper\">\n                <div className=\"analytics_ratio_desc\">Coder deviation:</div>\n                <div className=\"analytics_ratio_val\">{data.coderCoverage.coderDiff.map((elem, index )=> {return elem + '/'})}</div>\n            </div>\n\n            <div className=\"analytics_list_item_separator\"></div>\n\n            <div className=\"analytics_ratio_wrapper\">\n                <div className=\"analytics_ratio_desc\">Total reviews</div>\n                <div className=\"analytics_ratio_val\">{data.studentCoverage.totalReviewCounter}</div>\n            </div>\n            <div className=\"analytics_ratio_wrapper\">\n                <div className=\"analytics_ratio_desc\">Total / Avg. peer identified</div>\n                <div className=\"analytics_ratio_val\">{data.coderCoverage.coderCodeCounter+\" / \"+ data.studentCoverage.peerFoundCodesCounterAvg}</div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default AnalyticsListItem;\n","export default __webpack_public_path__ + \"static/media/share.b4f3ae1f.svg\";","import React from \"react\";\nimport pin from \"../../../assets/general/share.svg\";\n\nconst AnalyticsCodeItem = ({ code, proposeCode }) => {\n\n    return (\n        <div className={\"ind_code_display\"} id={code.id} style={{top:code.top+'px'}}>\n            <input placeholder=\"Code ID\" value={code.icdCode} className=\"small_code_section split_small_code_section\" readOnly/>\n            <input placeholder=\"Code Desc\" value={code.icdCodeDesc} className=\"large_code_section split_large_code_section\" readOnly/>\n            {code.type === 'student' && code.hasOwnProperty('proposalEligible') && code.proposalEligible ? <img className=\"remove_code_btn\" onClick={() => proposeCode(code)} src={pin} /> : <div className=\"remove_code_btn\"></div>}\n        </div>\n    );\n};\n\nexport default AnalyticsCodeItem;\n","import React, {useEffect, useState} from \"react\";\n\nimport '../../../styles/shared/editor/editor.css';\nimport '../../../styles/shared/fadein.css';\n\nimport {proposeCodeAsync} from \"../../../slice/reviewSlice\";\nimport {useDispatch} from \"react-redux\";\n\nimport AnalyticsCodeItem from \"../analytics/AnalyticsCodeItem\";\n\nconst DetailedAnalytics = ({ data, close }) => {\n\n    const [loadedTxt, setLoadedTxt] = useState(false);\n    const [studentCodeData, setStudentCodeData] = useState([]);\n    const [coderCodeData, setCoderCodeData] = useState([]);\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01) get the dark background, the content wrapper and the inputs\n     *           (02) increase the dark background opacity\n     *           (03) fade up the content wrapper\n     *           =============\n     *           (04) ensure that the code display has the same length as the overflow text\n     *           (05) ensure that the empty codes text is centered\n     *           (06) process the provided codes to display them\n     */\n    useEffect(() => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        bg.style.cssText = \"opacity: 100%\";\n        //03\n        content.style.marginTop = \"0\";\n        //04\n        document.getElementsByClassName('code_input')[0].innerHTML = data.review.txt;\n        //05\n        setLoadedTxt(true);\n        //04\n        document.getElementById('internal_left_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        document.getElementById('internal_right_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        document.getElementById('internal_code_separator').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        //05\n        document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight+'px'\n        //06\n        displayCodes();\n    }, [])\n\n    /**\n     * @function (01) get the background and content\n     *           (02) return if user clicked on the content\n     *           (03) user clicked outside of content - hide\n     *           (04) after timeout set state again to hidden\n     */\n    const hideView = (e, forced) => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        if (!forced && content.contains(e.target)) return;\n        //03\n        bg.style.cssText = \"opacity: 0%\";\n        content.style.marginTop = \"150vh\";\n        //04\n        setTimeout(() => close(), 350)\n    };\n\n    /**\n     * @function (01) define the target by choosing the complementary of the scrolled div\n     *           (02) assign scroll toü and scroll left to the target based on the event scrolled position\n     */\n    const syncScroll = (e, origin) => {\n        //01\n        const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]\n        //02\n        target.scrollTop = e.currentTarget.scrollTop;\n        target.scrollLeft = e.currentTarget.scrollLeft;\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) transform the data provided into state data and enrich with type\n     *           (02) highlight those codes which the student but not the coder has\n     *           (03) merge into state array\n     */\n    const displayCodes = () => {\n        //01\n        let studentCodes = data.studentAnswer.codes.map(code => ({...code, type: 'student'}))\n        let coderCodes = data.review.initialCodes.map(code => ({...code, type: 'coder'}))\n        //02\n        studentCodes.forEach((code, i) => {\n            if (!data.coderCoverage.intersect.includes(code.icdCode)) studentCodes[i]['proposalEligible'] = true;\n        })\n        //03\n        setStudentCodeData(studentCodes)\n        setCoderCodeData(coderCodes)\n    }\n\n    /**\n     * @function (01) double check that this code is not included by the coder\n     *           (02) form object of all relevant ids\n     *           (03) dispatch the code to the backend\n     */\n    const proposeCode = (code) => {\n        //01\n        if (data.coderCoverage.intersect.includes(code.icdCode)) return alert('coder has already allocated this code')\n        //02\n        const codeProposal = {\n            reviewId: data.review._id,\n            codeProposal: code\n        }\n        //03\n        dispatch(proposeCodeAsync(codeProposal))\n            .then((res) => {\n                console.log(res.payload)\n                alert('proposed this to the coder')\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */\n    const selector = (e) => {\n        /*\n        //01\n        let select = window.getSelection(),\n            selectRange = select.getRangeAt(0),\n            selectPos = selectRange.getBoundingClientRect(),\n            codeInput = document.getElementsByClassName('code_input')[0],\n            codeInputPos = codeInput.getBoundingClientRect(),\n            tooltip = document.getElementById('tooltip_editor_wrapper');\n        //02\n        if (selectPos.width < 1) return tooltip.style.display = \"none\";\n        //03\n        tooltip.style.display = \"inline\";\n        tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n        tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n        //04\n        let xpath = fromRange(selectRange, codeInput)\n\n        setSelTxt({...selTxt,  ...{\n                val: selectRange.toString(),\n                start: xpath.startOffset,\n                end: xpath.endOffset,\n                top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5,\n                id: uuidv4()\n            },\n        })\n         */\n    }\n\n    /**\n     * @function (01)\n     *           (02)\n     * @param start\n     * @param end\n     */\n    function setSelectionRange(start, end) {\n\n        let el = document.getElementsByClassName('code_input')[0];\n\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var textNodes = getTextNodesIn(el);\n        var foundStart = false;\n        var charCount = 0, endCharCount;\n\n        for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n            endCharCount = charCount + textNode.length;\n            if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {\n                range.setStart(textNode, start - charCount);\n                foundStart = true;\n            }\n            if (foundStart && end <= endCharCount) {\n                range.setEnd(textNode, end - charCount);\n                break;\n            }\n            charCount = endCharCount;\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n        //Helper functions\n\n        function getTextNodesIn(node) {\n            var textNodes = [];\n            if (node.nodeType === 3) {\n                textNodes.push(node);\n            } else {\n                var children = node.childNodes;\n                for (var i = 0, len = children.length; i < len; ++i) {\n                    textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n                }\n            }\n            return textNodes;\n        }\n    }\n\n    //====================================================================\n\n    return (\n        <div className=\"menu_dark_bg\" onClick={hideView}>\n            <div className=\"create_input_wrapper enlarged_create_input_wrapper\">\n                <div className=\"create_input_hide\" onClick={(e) => {hideView(e, true)}}>X</div>\n                <div className=\"code_input enlarged_code_input\" onScroll={(e) => syncScroll(e, 'input')}>\n                    {loadedTxt &&\n                        <div id=\"tooltip_editor_wrapper\">\n                            <div className=\"tooltip_btn\">Add code</div>\n                        </div>\n                    }\n                </div>\n                <div className=\"code_display enlarged_code_display split_code_display\" onScroll={(e) => syncScroll(e, 'display')}>\n                    <div id=\"internal_left_code_display\">\n                        <div className=\"internal_code_desc\">Coder</div>\n                        {\n                            coderCodeData.length > 0 ? (\n                                coderCodeData.map((code, i) => <AnalyticsCodeItem code = {code} proposeCode = {proposeCode}/>)\n                            ) : (\n                                <div className=\"empty_editor\">Codes werden geladen</div>\n                            )\n                        }\n                    </div>\n                    <div id=\"internal_code_separator\"></div>\n                    <div id=\"internal_right_code_display\">\n                        <div className=\"internal_code_desc\">You</div>\n                        {\n                            studentCodeData.length > 0 ? (\n                                studentCodeData.map((code, i) => <AnalyticsCodeItem code = {code} proposeCode = {proposeCode}/>)\n                            ) : (\n                                <div className=\"empty_editor\">Codes werden geladen</div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DetailedAnalytics;\n","import React from \"react\";\n\nimport '../../../styles/shared/analytics/general_analytics.css';\n\nconst GeneralAnalytics = ({ data }) => {\n\n    return (\n        <div className=\"general_analytics_wrapper\">\n            <div className=\"general_analytics_info_wrapper\">\n                <div className=\"general_analytics_desc\">Total achievable / Total identified</div>\n                <div className=\"general_analytics_val_large\">{data.totalCoderCodes+\" / \"+data.totalFoundCodes}</div>\n            </div>\n            <div className=\"general_analytics_info_wrapper\">\n                <div className=\"general_analytics_desc\">Avg. # total codes / Avg. # of identified codes</div>\n                <div className=\"general_analytics_val_large\">{data.avgTotalCodes.toPrecision(1)+\" / \"+data.avgTotalFoundCodes.toPrecision(1)}</div>\n            </div>\n            <div className=\"general_analytics_info_wrapper\">\n                <div className=\"general_analytics_desc\">Avg. number of additional codes you assign</div>\n                <div className=\"general_analytics_val_large\">{data.avgDeviations.toPrecision(1)}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default GeneralAnalytics;\n","import React, {useState, useEffect} from \"react\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nimport {selectIsLoggedIn, selectUserType} from \"../../../slice/authSlice\";\nimport {selectUserData, getUserAsync} from \"../../../slice/userSlice\";\nimport {getReviewAnalyticsAsync} from \"../../../slice/reviewSlice\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/shared/analytics/analytics.css';\n\nimport Navbar from \"../../general/navbar/Navbar\";\nimport AnalyticsListItem from \"../../student/analytics/AnalyticsListItem\";\nimport DetailedAnalytics from \"../../student/analytics/DetailedAnalytics\";\nimport GeneralAnalytics from \"../../student/analytics/GeneralAnalytics\";\n\nconst Analytics = () => {\n\n    const dispatch = useDispatch();\n\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userType = useSelector(selectUserType);\n    const userData = useSelector(selectUserData);\n\n    if (!loggedIn || userType !== 'student') {\n        history.push(\"/login\");\n        window.location.reload();\n    }\n\n    const [reviewDataList, setReviewDataList] = useState([])\n    const [globalAnalytics, setGlobalAnalytics] = useState({})\n    const [visibleDetailedAnalytics, setVisibleDetailedAnalytics] = useState(false)\n    const [detailedAnalyticsData, setDetailedAnalyticsData] = useState({})\n\n    /**\n     * @function (00) if user data has been loaded check if any reviews were already made - if true load the reviewed uploads\n     *           (01) load answered uploads for this user - if user has ´made any reviews so far\n     *           (02) hide the loading sign once fulfilled\n     */\n    useEffect(() => {\n        //00\n        if (Object.keys(userData).length > 0) {\n            getAnalytics(userData.answeredUploads);\n            return;\n        }\n        //01\n        dispatch(getUserAsync())\n            .then((res) => {\n                getAnalytics(res.payload.userData.answeredUploads)\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }, [])\n\n    // Detailed view ==============================\n\n    /**\n     * @function (01) update the state and fade in the\n     * @param data\n     */\n    const detailedView = (data) => {\n        setDetailedAnalyticsData(data)\n        setVisibleDetailedAnalytics(true)\n\n    }\n\n    // Helper functions ===========================\n\n    /**\n     * @function (01) check if user has made any revies so far\n     *           (02) load the reviews from the backend\n     *           (03) assign the results to the local variables\n     * @param reviewIds array of reviews [0] reviewId [1] reviewAnswerId [2] reviewAnswerSubId\n     */\n    const getAnalytics = (reviewIds) => {\n        //01\n        if (!reviewIds || reviewIds.length === 0)  console.log('No replies so far')\n        //02\n        dispatch(getReviewAnalyticsAsync(reviewIds))\n            .then((res) => {\n                setGlobalAnalytics(res.payload.globalKPIS)\n                setReviewDataList(res.payload.reviewData)\n            })\n            .catch((err) => {\n                console.log('error', err)\n            })\n    }\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Analytics</div>\n                </div>\n\n                <div className=\"main_center_content\">\n                    <div className=\"analytics_review_wrapper\">\n                    {\n                        reviewDataList.length > 0 ? (\n                            reviewDataList.map((elem, index) => <AnalyticsListItem data = {elem} index = {index} detailedView = {detailedView} />)\n                        ) : (\n                            <div className=\"no_analytics_txt\">Tackle reviews - No answers mean no analytics</div>\n                        )\n                    }\n                    </div>\n                    { reviewDataList.length > 0 && <GeneralAnalytics data = {globalAnalytics} />}\n                    { visibleDetailedAnalytics && <DetailedAnalytics data = {detailedAnalyticsData}  close = {() => setVisibleDetailedAnalytics(false)}/> }\n                </div>\n\n                <div className=\"main_outer_content right_bound_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Analytics;\n","import React, {useEffect} from \"react\";\n\nimport '../../../styles/shared/fadein.css';\n\nconst UploadFadeIn = ({ submit, close}) => {\n\n    /**\n     * @function (01) get the dark background, the content wrapper and the inputs\n     *           (02) increase the dark background opacity\n     *           (03) fade up the content wrapper with an animation and set focus on the input\n     */\n    useEffect(() => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper'),\n            input = document.querySelector('.create_input');\n        //02\n        bg.style.cssText = \"opacity: 100%\";\n        //03\n        content.style.marginTop = \"0\";\n        setTimeout(() => {\n            input.focus()\n        }, 350)\n    }, [])\n\n    /**\n     * @function (01) get the background and content\n     *           (02) return if user clicked on the content\n     *           (03) user clicked outside of content - hide\n     *           (04) after timeout set state again to hidden\n     */\n    const hideCreateView = (e, forced) => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        if (!forced && content.contains(e.target)) return;\n        //03\n        bg.style.cssText = \"opacity: 0%\";\n        content.style.marginTop = \"150vh\";\n        //04\n        setTimeout(() => close(), 350)\n    };\n\n    return (\n        <div className=\"menu_dark_bg\" onClick={hideCreateView}>\n            <form className=\"create_input_wrapper\" onSubmit={submit}>\n                <div className=\"create_input_hide\" onClick={(e) => {hideCreateView(e, true)}}>X</div>\n\n                <input name=\"title\" className=\"create_input\" type=\"text\" placeholder=\"Titel\" required />\n                <div className=\"create_btn_wrapper\">\n                    <input id=\"easy_button\" value=\"easy\" name=\"difficulty\" className=\"create_input_radio\" type=\"radio\" defaultChecked />\n                    <label className=\"create_btn_label\" htmlFor=\"easy_button\">Easy</label>\n                    <input id=\"medium_button\" value=\"medium\" name=\"difficulty\" className=\"create_input_radio\" type=\"radio\" />\n                    <label className=\"create_btn_label\" htmlFor=\"medium_button\">Medium</label>\n                    <input id=\"hard_button\" value=\"hard\" name=\"difficulty\" className=\"create_input_radio\" type=\"radio\" />\n                    <label className=\"create_btn_label\" htmlFor=\"hard_button\">Difficult</label>\n                </div>\n                <div className=\"create_btn_wrapper\">\n                    <input id=\"internal_button\" value=\"true\" name=\"internalOnly\" className=\"create_input_radio\" type=\"radio\" defaultChecked />\n                    <label className=\"create_btn_label create_btn_label_ext\" htmlFor=\"internal_button\">Only for our students</label>\n                    <input id=\"external_button\" value=\"false\" name=\"internalOnly\" className=\"create_input_radio\" type=\"radio\" />\n                    <label className=\"create_btn_label create_btn_label_ext\" htmlFor=\"external_button\">For all</label>\n                </div>\n\n                <button className=\"create_submit\">Upload</button>\n            </form>\n        </div>\n    );\n};\n\nexport default UploadFadeIn;\n","import React, {useState, useRef, useEffect} from \"react\";\nimport { fromRange } from \"xpath-range\"\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Navbar from \"../../general/navbar/Navbar\";\nimport UploadFadeIn from \"./UploadFadeIn\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/shared/editor/editor.css';\n\nimport {} from \"../../../slice/authSlice\";\nimport {codeCompletionAsync, uploadCodeAsync} from \"../../../slice/reviewSlice\";\nimport {history} from \"../../../helpers/history\";\n\n\nimport {useDispatch} from \"react-redux\";\n\nconst Editor = () => {\n\n    const [insertTxtStage, setInsertTxtStage] = useState(true);\n    const [txt, setTxt] = useState(\"\");\n    const [selTxt, setSelTxt] = useState({})\n    const [tempCodes, setTempCodes] = useState([])\n    const [finalUploadStage, setFinalUploadStage] = useState(false)\n\n    const dispatch = useDispatch();\n\n    //todo security checks\n\n    /**\n     * @function (01) ensure that the empty sign has the correct height\n     */\n    useEffect(() => {\n        //01\n        document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight+'px'\n    }, [])\n\n    /**\n     * @function (01) define the target by choosing the complementary of the scrolled div\n     *           (02) assign scroll toü and scroll left to the target based on the event scrolled position\n     */\n    const syncScroll = (e, origin) => {\n        //01\n        const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]\n        //02\n        target.scrollTop = e.currentTarget.scrollTop;\n        target.scrollLeft = e.currentTarget.scrollLeft;\n    }\n\n    //==================================================\n\n    /**\n     * @function (01) check that there is no overlapping regarding the codes\n     *           (02) highlight the code\n     *           (03) push into data structure (updates the code overview on the right side)\n     */\n    const addCode = () => {\n        //01\n        let startOverlapCheck = tempCodes.filter(code => selTxt.start > code.start && selTxt.start < code.end)\n        let endOverlapCheck = tempCodes.filter(code => selTxt.end < code.end && selTxt.end > code.start)\n        //todo check that this code has not been used yet\n        if (startOverlapCheck.length > 0 || endOverlapCheck.length > 0) return alert('No overlaps possbile')\n        //02\n        setSelectionRange(selTxt.start, selTxt.end)\n        //highlight(\"yellow\");\n        //03\n        setTempCodes(currentCodes => [...currentCodes, selTxt]);\n    }\n\n    /**\n     * @function (00) wait until typing ended and dispatch send to backend for code completion and wait\n     *           (01) duplicate the array\n     *           (02) find the array entry by index\n     *           (03) add code to this entry\n     * @param e is the event\n     * @param i is the index of the array element which is\n     * @param type either id or desc of the code - required for the autocompletion\n     */\n    let typingTimerEdit;\n    const editCode = (e, i, type) => {\n        //00\n        clearTimeout(typingTimerEdit);\n        if (!e.target.value) return;\n        typingTimerEdit = setTimeout(() => {\n            dispatch(codeCompletionAsync({type: type, val: e.target.value}))\n                .then((res) => {\n                    if (res.payload.matches.length !== 1) {\n                        document.getElementsByClassName('ind_code_display')[i].style.border = \"1px solid red\";\n                        return document.getElementsByClassName('large_code_section')[i].value = 'Zu viele Ergebnisse - '+res.payload.matches.length\n                    }\n                    //01\n                    let newArr = [...tempCodes];\n                    //02\n                    let mergedObj = {...newArr[i], icdCode: e.target.value, icdCodeDesc: res.payload.matches[0][2]}\n                    newArr[i] = mergedObj;\n                    //03\n                    setTempCodes(newArr);\n                    //04\n                    document.getElementsByClassName('large_code_section')[i].value = res.payload.matches[0][2]\n                    //05\n                    document.getElementsByClassName('ind_code_display')[i].style.border = \"none\";\n                })\n                .catch((err) => {\n                    console.log(err)\n                });\n        }, 200);\n    }\n\n    /**\n     * @function (01) duplicate the array\n     *           (02) splice the array\n     *           (03) set the new temp codes\n     * @param i index of the highlight which is deleted\n     */\n    const removeTxt = (i) => {\n        let newArr = [...tempCodes];\n        //02\n        newArr.splice(i, 1);\n        //03\n        setTempCodes(newArr);\n    }\n\n    //==================================================\n\n    //todo next section\n\n    /**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */\n    const selector = (e) => {\n        //01\n        let select = window.getSelection(),\n            selectRange = select.getRangeAt(0),\n            selectPos = selectRange.getBoundingClientRect(),\n            codeInput = document.getElementsByClassName('code_input')[0],\n            codeInputPos = codeInput.getBoundingClientRect(),\n            tooltip = document.getElementById('tooltip_editor_wrapper');\n        //02\n        if (selectPos.width < 1) return tooltip.style.display = \"none\";\n        //03\n        tooltip.style.display = \"inline\";\n        tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n        tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n        //04\n        let xpath = fromRange(selectRange, codeInput)\n\n        setSelTxt({...selTxt,  ...{\n                val: selectRange.toString(),\n                start: xpath.startOffset,\n                end: xpath.endOffset,\n                id: uuidv4(),\n                top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5\n            },\n        })\n    }\n\n    /**\n     * @function (01)\n     *           (02)\n     * @param start\n     * @param end\n     */\n    function setSelectionRange(start, end) {\n\n        let el = document.getElementsByClassName('code_input')[0];\n\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var textNodes = getTextNodesIn(el);\n        var foundStart = false;\n        var charCount = 0, endCharCount;\n\n        for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n            endCharCount = charCount + textNode.length;\n            if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {\n                range.setStart(textNode, start - charCount);\n                foundStart = true;\n            }\n            if (foundStart && end <= endCharCount) {\n                range.setEnd(textNode, end - charCount);\n                break;\n            }\n            charCount = endCharCount;\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n        //Helper functions\n\n        function getTextNodesIn(node) {\n            var textNodes = [];\n            if (node.nodeType === 3) {\n                textNodes.push(node);\n            } else {\n                var children = node.childNodes;\n                for (var i = 0, len = children.length; i < len; ++i) {\n                    textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n                }\n            }\n            return textNodes;\n        }\n    }\n\n    /**\n     * @function\n     * @param colour\n     */\n    function highlight(colour) {\n\n        let range, sel;\n\n        sel = window.getSelection();\n        if (sel.rangeCount && sel.getRangeAt) {\n            range = sel.getRangeAt(0);\n        }\n        document.designMode = \"on\";\n        sel.removeAllRanges();\n        sel.addRange(range);\n        document.execCommand(\"BackColor\", false, colour);\n        document.designMode = \"off\";\n    }\n\n    //==================================================\n\n    /**\n     * @function (00) check if the div has any type of input\n     *           (01) update the state of the of the insertTxtStage\n     *           (02) adjust the heights\n     */\n    const endEditMode = () => {\n        //00\n        if (txt === \"\") return alert('we need some text')\n        //01\n        setInsertTxtStage(false);\n        //02\n        document.getElementById('internal_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n    }\n\n    /**\n     * @function (01) update the current text\n     *           (02) if the text is empty\n     */\n    const addTxt = (e) => {\n        //01\n        setTxt(e.currentTarget.innerHTML)\n        //02\n        if (e.currentTarget.innerHTML   === \"\") e.currentTarget.innerHTML = \"copy & paste patient record and anonymize it\"\n    }\n\n    /**\n     * @function (01) prevent the default behavior\n     *           (02) select the clipboard\n     *           (03) insert the plain text\n     *           (04) update the txt variable\n     */\n    const pasteTxt = (e) => {\n        //01\n        e.preventDefault();\n        let content;\n        //02\n        if (e.clipboardData) {\n            //03\n            content = (e.originalEvent || e).clipboardData.getData('text/plain');\n            document.execCommand('insertText', false, content);\n        } else if (window.clipboardData) {\n            //03\n            content = window.clipboardData.getData('Text');\n            document.selection.createRange().pasteHTML(content);\n        }\n        //04\n        setTxt(content)\n    }\n\n    //==================================================\n\n    /**\n     * @function (01) check if any codes were added - if not return + that every code has an icd code allocated\n     *           (02) fade in the final upload overview - where tags, difficulty, internal use and title are provided\n     */\n    const proceedUpload = () => {\n        //01\n        if (tempCodes.length < 1) return alert(\"please provide at least one code\");\n        if (tempCodes.filter(code => !code.hasOwnProperty('icdCode') || code.icdCode === \"\").length !== 0) return alert(\"allocate icd code\");\n        //02\n        setFinalUploadStage(true);\n    }\n\n    /**\n     * @function (01) prevent default\n     *           (02) create a merged object of text, codes\n     *           (03) upload via dispatch and wait for success\n     *           (04) on success clear the view and let user create a new - reset the inital state\n     */\n    const uploadCodes = (e) => {\n        //01\n        e.preventDefault();\n        setFinalUploadStage(false);\n        //02\n        let codeDataObj = {initialCodes: tempCodes, txt: txt, ...Object.fromEntries(new FormData(e.target))}\n        //03\n        dispatch(uploadCodeAsync(codeDataObj))\n            .then((res) => {\n                //04\n                window.location.reload();\n            })\n            .catch((err) => {\n                console.log('error', err)\n            })\n    }\n\n    // ==========================\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Code editor</div>\n                </div>\n\n                <div className=\"main_center_content\">\n                    <div className=\"code_input\" onPaste={(e) => pasteTxt(e)} placeholder=\"Copy & paste patient record and anonymize it in the editor...\" onKeyUp={insertTxtStage && addTxt} contentEditable={insertTxtStage ? \"true\" : \"false\"} onMouseUp={!insertTxtStage && selector} onScroll={(e) => syncScroll(e, 'input')}>\n                        {!insertTxtStage &&\n                            <div id=\"tooltip_editor_wrapper\">\n                                <div className=\"tooltip_btn\" onClick={addCode}>Code hinzufügen</div>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"code_display\">\n                        <div id=\"internal_code_display\" onScroll={(e) => syncScroll(e, 'input')}>\n                        {\n                            tempCodes.length > 0 ? (\n                                tempCodes.map((code, i) => {\n                                    return <div className=\"ind_code_display\" id={code.id} style={{top:code.top+'px'}} key={i}>\n                                        <input placeholder=\"Code ID\" className=\"small_code_section\" onChange={(e) => editCode(e, i, 'id')}/>\n                                        <input placeholder=\"Code Desc\" className=\"large_code_section\" readOnly/>\n                                        <div className=\"remove_code_btn\" onClick={() => removeTxt(i)}>X</div>\n                                    </div>;\n                                })\n                            ) : (\n                                <div className=\"empty_editor\">{!insertTxtStage ? (<span>Assign codes</span>) : (<span>Finalize editing the patient record</span>)}</div>\n                            )\n                        }\n                        </div>\n                    </div>\n                    {finalUploadStage && <UploadFadeIn submit = {uploadCodes} close = {() => setFinalUploadStage(false)}/>}\n                </div>\n\n                <div className=\"main_outer_content right_bound_outer_content\">\n                    {!finalUploadStage && <div className=\"editor_submit_btn highlighted_editor_submit_btn\" onClick={() => insertTxtStage ? endEditMode() : proceedUpload()}>{insertTxtStage ? <span>Proceed</span> : <span>Upload</span>}</div>}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Editor;\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport '../../../styles/main/coder/reviews/reviewListItem.css';\n\nconst ReviewListItem = ({data, index, extView}) => {\n\n    const [proposalMode, setProposalMode] = useState(\"pending\")\n\n    /**\n     * @function (01) check if enough reviews were provided\n     *           (02) check if threshold deviation was exceeded\n     */\n    useEffect(() => {\n        //01\n        if (data.reviewCounter < 10) return setProposalMode(10 - data.reviewCounter+\" more\")\n        //02\n        setProposalMode(data.codeDeviation > 5 ? 'review' : 'all good')\n    }, [])\n\n    return (\n        <div className=\"review_list_item\" onClick={() => extView(data)}>\n            <div className=\"large_list_field small_list_field displayed_list_field\">{new Date(data.timestamp).toLocaleDateString(\"de-DE\")}</div>\n            <div className=\"large_list_field displayed_list_field\">{data.title}</div>\n            <div className=\"large_list_field small_list_field displayed_list_field\">{data.reviewCounter}</div>\n            <div className=\"large_list_field small_list_field displayed_list_field\">{data.proposalCounter}</div>\n            <div className=\"large_list_field small_list_field displayed_list_field\">{data.codeDeviation.toFixed(2)}</div>\n            <div className=\"large_list_field small_list_field displayed_list_field\">{proposalMode}</div>\n            <div className=\"large_list_field small_list_field empty_list_field\">open</div>\n        </div>\n    );\n};\n\nexport default ReviewListItem;\n","export default __webpack_public_path__ + \"static/media/accept.d644c682.svg\";","export default __webpack_public_path__ + \"static/media/decline.4d6b22c2.svg\";","import React, {useEffect, useState} from \"react\";\n\nimport '../../../styles/shared/editor/editor.css';\nimport '../../../styles/shared/fadein.css';\nimport accept from '../../../assets/general/accept.svg';\nimport decline from '../../../assets/general/decline.svg';\n\nimport {getProposalsAsync, modifyProposalsAsync} from \"../../../slice/reviewSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst DetailedAnalytics = ({ data, close }) => {\n\n    const [loadedTxt, setLoadedTxt] = useState(false);\n    const [codeData, setCodeData] = useState([]);\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01) get the dark background, the content wrapper and the inputs\n     *           (02) increase the dark background opacity\n     *           (03) fade up the content wrapper\n     *           =============\n     *           (04) insert the feature rich txt\n     *           (05) show the tooltip\n     *           (06) ensure that the code display has the same length as the overflow text\n     *           (07) ensure that the empty codes text is centered\n     *           (08) process the provided codes to display them\n     */\n    useEffect(() => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        bg.style.cssText = \"opacity: 100%\";\n        //03\n        content.style.marginTop = \"0\";\n        //04\n        document.getElementsByClassName('code_input')[0].innerHTML = data.txt;\n        //05\n        setLoadedTxt(true)\n        //06\n        document.getElementById('internal_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        //07\n        document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight+'px'\n        //08\n        fetchProposals();\n    }, [])\n\n    /**\n     * @function (01) get the background and content\n     *           (02) return if user clicked on the content\n     *           (03) user clicked outside of content - hide\n     *           (04) after timeout set state again to hidden\n     */\n    const hideView = (e, forced) => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        if (!forced && content.contains(e.target)) return;\n        //03\n        bg.style.cssText = \"opacity: 0%\";\n        content.style.marginTop = \"150vh\";\n        //04\n        setTimeout(() => close(), 350)\n    };\n\n    /**\n     * @function (01) define the target by choosing the complementary of the scrolled div\n     *           (02) assign scroll toü and scroll left to the target based on the event scrolled position\n     */\n    const syncScroll = (e, origin) => {\n        //01\n        const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]\n        //02\n        target.scrollTop = e.currentTarget.scrollTop;\n        target.scrollLeft = e.currentTarget.scrollLeft;\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) fetch the proposals\n     *           (02) merge into state array\n     */\n    const fetchProposals = () => {\n        dispatch(getProposalsAsync({reviewId: data._id}))\n            .then((res) => {\n                //02\n                let proposalArr = res.payload.proposals.map(proposal => ({...proposal.proposedCode, ...{id:proposal._id, studentId: proposal.senderId}}));\n                setCodeData(proposalArr)\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }\n\n    /**\n     * @function (01) form proposalData object\n     *           (02) dispatch to the backend\n     *           (03) remove the code from the local state once the dispatch was successful\n     *           (04) decrement the proposal counter\n     * @param code is the affected code data object\n     * @param action either accept or decline of the proposal\n     * @param index is the index of the proposal within the codedata data structure\n     */\n    const modifyProposal = (action, code, index) => {\n        //01\n        let codeProposal = {\n            reviewId: data._id,\n            tempCodes: code,\n            userId: code.studentId,\n            action: action,\n            proposalId:code.id\n        }\n        //02\n        dispatch(modifyProposalsAsync(codeProposal))\n            .then((res) => {\n                //03\n                let newCodeData = [...codeData];\n                newCodeData.splice(index, 1);\n                setCodeData(newCodeData)\n                //04\n\n\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n        //test\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */\n    const selector = (e) => {\n        /*\n        //01\n        let select = window.getSelection(),\n            selectRange = select.getRangeAt(0),\n            selectPos = selectRange.getBoundingClientRect(),\n            codeInput = document.getElementsByClassName('code_input')[0],\n            codeInputPos = codeInput.getBoundingClientRect(),\n            tooltip = document.getElementById('tooltip_editor_wrapper');\n        //02\n        if (selectPos.width < 1) return tooltip.style.display = \"none\";\n        //03\n        tooltip.style.display = \"inline\";\n        tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n        tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n        //04\n        let xpath = fromRange(selectRange, codeInput)\n\n        setSelTxt({...selTxt,  ...{\n                val: selectRange.toString(),\n                start: xpath.startOffset,\n                end: xpath.endOffset,\n                top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5,\n                id: uuidv4()\n            },\n        })\n         */\n    }\n\n    /**\n     * @function (01)\n     *           (02)\n     * @param start\n     * @param end\n     */\n    function setSelectionRange(start, end) {\n\n        let el = document.getElementsByClassName('code_input')[0];\n\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var textNodes = getTextNodesIn(el);\n        var foundStart = false;\n        var charCount = 0, endCharCount;\n\n        for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n            endCharCount = charCount + textNode.length;\n            if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {\n                range.setStart(textNode, start - charCount);\n                foundStart = true;\n            }\n            if (foundStart && end <= endCharCount) {\n                range.setEnd(textNode, end - charCount);\n                break;\n            }\n            charCount = endCharCount;\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n        //Helper functions\n\n        function getTextNodesIn(node) {\n            var textNodes = [];\n            if (node.nodeType === 3) {\n                textNodes.push(node);\n            } else {\n                var children = node.childNodes;\n                for (var i = 0, len = children.length; i < len; ++i) {\n                    textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n                }\n            }\n            return textNodes;\n        }\n    }\n\n    //====================================================================\n\n    return (\n        <div className=\"menu_dark_bg\" onClick={hideView}>\n            <div className=\"create_input_wrapper enlarged_create_input_wrapper\">\n                <div className=\"create_input_hide\" onClick={(e) => {hideView(e, true)}}>X</div>\n                <div className=\"code_input enlarged_code_input\" onScroll={(e) => syncScroll(e, 'input')}>\n                    {loadedTxt &&\n                        <div id=\"tooltip_editor_wrapper\">\n                            <div className=\"tooltip_btn\">Code hinzufügen</div>\n                        </div>\n                    }\n                </div>\n                <div className=\"code_display enlarged_code_display\" onScroll={(e) => syncScroll(e, 'display')}>\n                    <div id=\"internal_code_display\">\n                        {\n                            codeData.length > 0 ? (\n                                codeData.map((code, i) => {\n                                    return <div className={\"ind_code_display\"} id={code.id} style={{top:code.top+'px'}} key={i}>\n                                        <input placeholder=\"Code ID\" value={code.icdCode} className=\"small_code_section\" readOnly/>\n                                        <input placeholder=\"Code Desc\" value={code.icdCodeDesc} className=\"large_code_section medium_code_section\" readOnly/>\n                                        <img className=\"remove_code_btn\" onClick={() => modifyProposal('decline', code, i)} src={decline} />\n                                        <img className=\"remove_code_btn\" onClick={() => modifyProposal('accept', code, i)} src={accept} />\n                                    </div>;\n                                })\n                            ) : (\n                                <div className=\"empty_editor\">No proposals</div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DetailedAnalytics;\n","import React, {useState, useRef, useEffect} from \"react\";\n\nimport Navbar from \"../../general/navbar/Navbar\";\nimport ReviewListItem from \"./ReviewListItem\";\nimport ReviewEditor from \"./ReviewEditor\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/main/coder/reviews/reviews.css';\n\nimport {} from \"../../../slice/authSlice\";\nimport {getUploadsAsync, selectCreatedUploads,} from \"../../../slice/reviewSlice\";\n\nimport {history} from \"../../../helpers/history\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {Link} from \"react-router-dom\";\n\nconst Reviews = () => {\n\n    const [visibleReview, setVisibleReview] = useState(false);\n    const [visibleReviewData, setVisibleReviewData] = useState(false);\n\n    const dispatch = useDispatch();\n    const uploads = useSelector(selectCreatedUploads)\n\n    //todo security checks\n\n    /**\n     * @function (01) load all documents which were uploaded by the coder + show loading spinner\n     *           (02) hide loading spinner once the load was finished\n     */\n    useEffect(() => {\n        //01\n        dispatch(getUploadsAsync())\n            .then((res) => {\n                //02\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }, [])\n\n    /**\n     * @function (01) update state and set the extended view to true\n     */\n    const showExtReview = (data) => {\n        //01\n        setVisibleReview(true);\n        setVisibleReviewData(data)\n    }\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Student reviews</div>\n                </div>\n                <div className=\"main_center_content\">\n                        {\n                            uploads.length > 0 ? (\n                                <div className=\"review_list_container\">\n                                    <div className=\"review_list_heading\">\n                                        <div className=\"large_list_field small_list_field\">Date</div>\n                                        <div className=\"large_list_field\">Title</div>\n                                        <div className=\"large_list_field small_list_field\">Reviews</div>\n                                        <div className=\"large_list_field small_list_field\">Proposals</div>\n                                        <div className=\"large_list_field small_list_field\">Deviation</div>\n                                        <div className=\"large_list_field small_list_field\">Code check</div>\n                                        <div className=\"large_list_field small_list_field empty_list_field\"></div>\n                                    </div>\n                                    {uploads.map((upload, index) => <ReviewListItem data = {upload} index = {index} extView = {showExtReview}/>)}\n                                </div>\n                            ) : (\n                                <Link to={\"/coder/editor/\"} className=\"empty_review_msg\">You have not uploaded yet - start now</Link>\n                            )\n                        }\n                        { visibleReview && <ReviewEditor data = {visibleReviewData} close = {() => setVisibleReview(false)}/> }\n                </div>\n                <div className=\"main_outer_content right_bound_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Reviews;\n","import React, {useEffect} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\n\n//General routes\nimport LandingPage from \"../landing/LandingPage\";\nimport Login from \"../login/Login\";\nimport Verify from \"../verify/Verify\";\nimport Logout from \"../logout/Logout\";\n\n//Admin only routes\nimport AdminUsers from \"../../admin/manage/ManageUser\";\nimport AdminInvite from \"../../admin/invite/InviteUser\";\n\n//Student routes\nimport StudentEditor from \"../../student/editor/Editor\";\nimport StudentSearch from \"../../student/search/Search\";\nimport StudentAnalytics from \"../../student/analytics/Analytics\";\n\n//Coder routes\nimport CoderEditor from \"../../coder/editor/Editor\";\nimport CoderReviews from \"../../coder/reviews/Reviews\";\n\n\nimport { history } from \"../../../helpers/history\";\nimport {selectIsLoggedIn, selectUserType} from \"../../../slice/authSlice\";\n\n\nfunction Routes() {\n    /**\n     * @desc (01) check from redux if the user is logged in\n     *       (02) if user is logged in redirect to the specific user type\n     */\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userType = useSelector(selectUserType);\n\n    /**\n     * @desc return the available routes based on the current user status - logged in or not logged in\n     */\n    return (\n        <>\n            {loggedIn && userType === 'admin' ? (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route exact path=\"/verify/:hash\" component={Verify} />\n\n                    <Route exact path=\"/admin/invite/\" component={AdminInvite} />\n                    <Route exact path=\"/admin/users/\" component={AdminUsers} />\n                </Switch>\n            ) : loggedIn && userType === 'coder' ? (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route exact path=\"/verify/:hash\" component={Verify} />\n\n                    <Route exact path=\"/coder/editor/\" component={CoderEditor} />\n                    <Route exact path=\"/coder/reviews/\" component={CoderReviews} />\n                </Switch>\n            ) : loggedIn && userType === 'student' ? (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route exact path=\"/verify/:hash\" component={Verify} />\n\n                    <Route exact path=\"/student/editor/\" component={StudentEditor} />\n                    <Route exact path=\"/student/search/\" component={StudentSearch} />\n                    <Route exact path=\"/student/analytics/:id\" component={StudentAnalytics} />\n                    <Route exact path=\"/student/analytics/\" component={StudentAnalytics} />\n                </Switch>\n            ) : (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/verify/:hash\" component={Verify} />\n                </Switch>\n            )}\n        </>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\n\nimport \"./styles/shared/App.css\";\n\nimport Routes from \"./components/general/routes/Routes\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <Routes />\n        </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from '../slice/authSlice';\nimport adminReducer from '../slice/adminSlice';\nimport userReducer from '../slice/userSlice';\nimport verifyReducer from '../slice/verifySlice';\nimport reviewReducer from '../slice/reviewSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    admin: adminReducer,\n    verify: verifyReducer,\n    review: reviewReducer,\n    user: userReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/shared/index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}