{"ast":null,"code":"import React,{useEffect}from\"react\";import{useSelector}from\"react-redux\";import{Switch,Route}from\"react-router-dom\";//General routes\nimport LandingPage from\"../landing/LandingPage\";import Login from\"../login/Login\";import Verify from\"../verify/Verify\";import Logout from\"../logout/Logout\";//Admin only routes\nimport AdminUsers from\"../../admin/manage/ManageUser\";import AdminInvite from\"../../admin/invite/InviteUser\";//Student routes\nimport StudentEditor from\"../../student/editor/Editor\";import StudentSearch from\"../../student/search/Search\";import StudentAnalytics from\"../../student/analytics/Analytics\";//Coder routes\nimport CoderEditor from\"../../coder/editor/Editor\";import CoderReviews from\"../../coder/reviews/Reviews\";import{history}from\"../../../helpers/history\";import{selectIsLoggedIn,selectUserType}from\"../../../slice/authSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Routes(){/**\n     * @desc (01) check from redux if the user is logged in\n     *       (02) if user is logged in redirect to the specific user type\n     */var loggedIn=useSelector(selectIsLoggedIn);var userType=useSelector(selectUserType);/**\n     * @desc return the available routes based on the current user status - logged in or not logged in\n     */return/*#__PURE__*/_jsx(_Fragment,{children:loggedIn&&userType==='admin'?/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:LandingPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",component:Login}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/logout\",component:Logout}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/verify/:hash\",component:Verify}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/admin/invite/\",component:AdminInvite}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/admin/users/\",component:AdminUsers})]}):loggedIn&&userType==='coder'?/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:LandingPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",component:Login}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/logout\",component:Logout}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/verify/:hash\",component:Verify}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/coder/editor/\",component:CoderEditor}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/coder/reviews/\",component:CoderReviews})]}):loggedIn&&userType==='student'?/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:LandingPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",component:Login}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/logout\",component:Logout}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/verify/:hash\",component:Verify}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/student/editor/\",component:StudentEditor}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/student/search/\",component:StudentSearch}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/student/analytics/:id\",component:StudentAnalytics}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/student/analytics/\",component:StudentAnalytics})]}):/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:LandingPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",component:Login}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/verify/:hash\",component:Verify})]})});}export default Routes;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/routes/Routes.js"],"names":["React","useEffect","useSelector","Switch","Route","LandingPage","Login","Verify","Logout","AdminUsers","AdminInvite","StudentEditor","StudentSearch","StudentAnalytics","CoderEditor","CoderReviews","history","selectIsLoggedIn","selectUserType","Routes","loggedIn","userType"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\n\n//General routes\nimport LandingPage from \"../landing/LandingPage\";\nimport Login from \"../login/Login\";\nimport Verify from \"../verify/Verify\";\nimport Logout from \"../logout/Logout\";\n\n//Admin only routes\nimport AdminUsers from \"../../admin/manage/ManageUser\";\nimport AdminInvite from \"../../admin/invite/InviteUser\";\n\n//Student routes\nimport StudentEditor from \"../../student/editor/Editor\";\nimport StudentSearch from \"../../student/search/Search\";\nimport StudentAnalytics from \"../../student/analytics/Analytics\";\n\n//Coder routes\nimport CoderEditor from \"../../coder/editor/Editor\";\nimport CoderReviews from \"../../coder/reviews/Reviews\";\n\n\nimport { history } from \"../../../helpers/history\";\nimport {selectIsLoggedIn, selectUserType} from \"../../../slice/authSlice\";\n\n\nfunction Routes() {\n    /**\n     * @desc (01) check from redux if the user is logged in\n     *       (02) if user is logged in redirect to the specific user type\n     */\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userType = useSelector(selectUserType);\n\n    /**\n     * @desc return the available routes based on the current user status - logged in or not logged in\n     */\n    return (\n        <>\n            {loggedIn && userType === 'admin' ? (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route exact path=\"/verify/:hash\" component={Verify} />\n\n                    <Route exact path=\"/admin/invite/\" component={AdminInvite} />\n                    <Route exact path=\"/admin/users/\" component={AdminUsers} />\n                </Switch>\n            ) : loggedIn && userType === 'coder' ? (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route exact path=\"/verify/:hash\" component={Verify} />\n\n                    <Route exact path=\"/coder/editor/\" component={CoderEditor} />\n                    <Route exact path=\"/coder/reviews/\" component={CoderReviews} />\n                </Switch>\n            ) : loggedIn && userType === 'student' ? (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route exact path=\"/verify/:hash\" component={Verify} />\n\n                    <Route exact path=\"/student/editor/\" component={StudentEditor} />\n                    <Route exact path=\"/student/search/\" component={StudentSearch} />\n                    <Route exact path=\"/student/analytics/:id\" component={StudentAnalytics} />\n                    <Route exact path=\"/student/analytics/\" component={StudentAnalytics} />\n                </Switch>\n            ) : (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/verify/:hash\" component={Verify} />\n                </Switch>\n            )}\n        </>\n    );\n}\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}