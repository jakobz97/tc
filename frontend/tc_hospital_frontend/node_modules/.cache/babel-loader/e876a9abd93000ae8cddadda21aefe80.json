{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/student/analytics/Analytics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { history } from \"../../../helpers/history\";\nimport { selectIsLoggedIn, selectUserType } from \"../../../slice/authSlice\";\nimport { selectUserData, getUserAsync } from \"../../../slice/userSlice\";\nimport { getAnalyticsUploads } from \"../../../services/review.service\";\nimport '../../../styles/shared/main.css';\nimport '../../../styles/shared/analytics/analytics.css';\nimport Navbar from \"../../general/navbar/Navbar\";\nimport { getReviewAnalyticsAsync } from \"../../../slice/reviewSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Analytics = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const loggedIn = useSelector(selectIsLoggedIn);\n  const userType = useSelector(selectUserType);\n  const userData = useSelector(selectUserData);\n\n  if (!loggedIn || userType !== 'student') {\n    history.push(\"/login\");\n    window.location.reload();\n  }\n  /**\n   * @function (00) get user data if no data has been loaded so far\n   *           (01) load answered uploads for this user - if user has ´made any reviews so far\n   *           (02) hide the loading sign once fulfilled\n   */\n\n\n  useEffect(async () => {\n    //00\n    if (Object.keys(userData).length === 0) {\n      dispatch(getUserAsync()).then(res => {\n        console.log('result', res.payload);\n      }).catch(err => {\n        console.log('err', err);\n      });\n    } //01\n\n\n    if (!userData.answeredUploads || userData.answeredUploads.length === 0) console.log('No replies so far'); //02\n\n    dispatch(getReviewAnalyticsAsync(JSON.stringify(userData.answeredUploads))).then(res => {}).catch(err => {\n      console.log('error', err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center_container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_center_content_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_outer_content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main_outer_heading\",\n          children: \"Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_center_content\",\n        children: \"list all reviewed tasks on the one side on the other side general analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_outer_content right_bound_outer_content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Analytics, \"NKHHDQJrS0a9oCeVJI6q4Uo1T0U=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Analytics;\nexport default Analytics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/student/analytics/Analytics.js"],"names":["React","useState","useRef","useEffect","useDispatch","useSelector","history","selectIsLoggedIn","selectUserType","selectUserData","getUserAsync","getAnalyticsUploads","Navbar","getReviewAnalyticsAsync","Analytics","dispatch","loggedIn","userType","userData","push","window","location","reload","Object","keys","length","then","res","console","log","payload","catch","err","answeredUploads","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,OAAR,QAAsB,0BAAtB;AAEA,SAAQC,gBAAR,EAA0BC,cAA1B,QAA+C,0BAA/C;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,0BAA3C;AACA,SAAQC,mBAAR,QAAkC,kCAAlC;AAEA,OAAO,iCAAP;AACA,OAAO,gDAAP;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAAQC,uBAAR,QAAsC,4BAAtC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAMY,QAAQ,GAAGX,WAAW,CAACE,gBAAD,CAA5B;AACA,QAAMU,QAAQ,GAAGZ,WAAW,CAACG,cAAD,CAA5B;AACA,QAAMU,QAAQ,GAAGb,WAAW,CAACI,cAAD,CAA5B;;AAEA,MAAI,CAACO,QAAD,IAAaC,QAAQ,KAAK,SAA9B,EAAyC;AACrCX,IAAAA,OAAO,CAACa,IAAR,CAAa,QAAb;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACInB,EAAAA,SAAS,CAAC,YAAY;AAClB;AACA,QAAIoB,MAAM,CAACC,IAAP,CAAYN,QAAZ,EAAsBO,MAAtB,KAAiC,CAArC,EAAwC;AACpCV,MAAAA,QAAQ,CAACL,YAAY,EAAb,CAAR,CACKgB,IADL,CACWC,GAAD,IAAS;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAG,CAACG,OAA1B;AACH,OAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBG,GAAnB;AACH,OANL;AAOH,KAViB,CAWlB;;;AACA,QAAI,CAACd,QAAQ,CAACe,eAAV,IAA6Bf,QAAQ,CAACe,eAAT,CAAyBR,MAAzB,KAAoC,CAArE,EAAyEG,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAZvD,CAalB;;AACAd,IAAAA,QAAQ,CAACF,uBAAuB,CAACqB,IAAI,CAACC,SAAL,CAAejB,QAAQ,CAACe,eAAxB,CAAD,CAAxB,CAAR,CACKP,IADL,CACWC,GAAD,IAAS,CAEd,CAHL,EAIKI,KAJL,CAIYC,GAAD,IAAS;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,GAArB;AACH,KANL;AAOH,GArBQ,EAqBN,EArBM,CAAT;AAwBA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAUI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA3DD;;GAAMlB,S;UAEeV,W,EAEAC,W,EACAA,W,EACAA,W;;;KANfS,S;AA6DN,eAAeA,SAAf","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nimport {selectIsLoggedIn, selectUserType} from \"../../../slice/authSlice\";\nimport {selectUserData, getUserAsync} from \"../../../slice/userSlice\";\nimport {getAnalyticsUploads} from \"../../../services/review.service\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/shared/analytics/analytics.css';\n\nimport Navbar from \"../../general/navbar/Navbar\";\nimport {getReviewAnalyticsAsync} from \"../../../slice/reviewSlice\";\n\nconst Analytics = () => {\n\n    const dispatch = useDispatch();\n\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userType = useSelector(selectUserType);\n    const userData = useSelector(selectUserData);\n\n    if (!loggedIn || userType !== 'student') {\n        history.push(\"/login\");\n        window.location.reload();\n    }\n\n    /**\n     * @function (00) get user data if no data has been loaded so far\n     *           (01) load answered uploads for this user - if user has ´made any reviews so far\n     *           (02) hide the loading sign once fulfilled\n     */\n    useEffect(async () => {\n        //00\n        if (Object.keys(userData).length === 0) {\n            dispatch(getUserAsync())\n                .then((res) => {\n                    console.log('result', res.payload)\n                })\n                .catch((err) => {\n                    console.log('err', err)\n                })\n        }\n        //01\n        if (!userData.answeredUploads || userData.answeredUploads.length === 0)  console.log('No replies so far')\n        //02\n        dispatch(getReviewAnalyticsAsync(JSON.stringify(userData.answeredUploads)))\n            .then((res) => {\n\n            })\n            .catch((err) => {\n                console.log('error', err)\n            })\n    }, [])\n\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Analytics</div>\n                </div>\n\n                <div className=\"main_center_content\">\n                    list all reviewed tasks on the one side\n                    on the other side general analytics\n                </div>\n\n                <div className=\"main_outer_content right_bound_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Analytics;\n"]},"metadata":{},"sourceType":"module"}