{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/main/general/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, CSSProperties } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\nimport { signUpAsync } from \"../../../slice/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { history } from \"../../../helpers/history\";\nimport \"../../../styles/main/Signup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const dispatch = useDispatch();\n  /**\n   * @function (01) prevent the default and update to loading state\n   *           (02) check if hospital option was selected - if not return\n   *           (03) merge with the form object\n   *           (02) dispatch to the signup reducer and wait until fulfilled\n   */\n\n  const performSignup = e => {\n    //01\n    e.preventDefault();\n    setLoading(true); //02\n\n    if (!selectedOption) return alert('please select a hospital'); //03\n\n    let signupData = { ...Object.fromEntries(new FormData(e.target)),\n      ...{\n        hospitalCode: selectedOption.value\n      }\n    }; //02\n\n    dispatch(signUpAsync(signupData)).then(res => {//history.push(\"/order\");\n      //window.location.reload();\n    }).catch(err => {\n      setLoading(false);\n    });\n  }; // =================================\n\n\n  const options = [{\n    value: '00001',\n    label: 'DONAUISAR Klinikum Deggendorf-Dingolfing-Landau'\n  }];\n  const customStyles = {\n    option: (provided, state) => ({ ...provided,\n      borderBottom: '2px dotted green',\n      color: state.isSelected ? 'yellow' : 'black',\n      backgroundColor: state.isSelected ? 'green' : 'white',\n      width: '100%',\n      height: \"200%\"\n    }),\n    control: provided => ({ ...provided,\n      margin: \"2.75% 0 2.75% 0\",\n      width: \"34vw\",\n      borderRadius: \"8px\",\n      height: \"8vh\",\n      backgroundColor: \"white\",\n      padding: \"0 2.5% 0 2.5%\",\n      fontSize: \"1em\",\n      color: '#505DF7',\n      textAlign: 'center'\n    }),\n    placeholder: defaultStyles => ({ ...defaultStyles,\n      fontSize: '1em',\n      color: '#505DF7',\n      textAlign: 'center'\n    })\n  }; // =================================\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main_section right_main_section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"cta_wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"su_section\",\n        onSubmit: performSignup,\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Krankenhaus w\\xE4hlen ...\",\n          styles: customStyles,\n          options: options,\n          onChange: setSelectedOption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"signup_input short_input\",\n          name: \"firstName\",\n          placeholder: \"Vorname\",\n          type: \"text\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"signup_input short_input\",\n          name: \"lastName\",\n          placeholder: \"Nachname\",\n          type: \"text\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"signup_input\",\n          name: \"email\",\n          placeholder: \"E-Mail\",\n          type: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"signup_input\",\n          name: \"password\",\n          placeholder: \"Passwort\",\n          type: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"signup_input signup_btn\",\n          children: loading ? \"In Arbeit ...\" : \"Anmelden\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Signup, \"2c5BiPRqv+HygHQazkclNb4HX6E=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/main/general/Signup.js"],"names":["React","useEffect","useState","CSSProperties","Redirect","Select","signUpAsync","useDispatch","useSelector","history","Signup","loading","setLoading","selectedOption","setSelectedOption","dispatch","performSignup","e","preventDefault","alert","signupData","Object","fromEntries","FormData","target","hospitalCode","value","then","res","catch","err","options","label","customStyles","option","provided","state","borderBottom","color","isSelected","backgroundColor","width","height","control","margin","borderRadius","padding","fontSize","textAlign","placeholder","defaultStyles"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, CSSProperties} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\n\nimport {signUpAsync} from \"../../../slice/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { history } from \"../../../helpers/history\";\n\nimport \"../../../styles/main/Signup.css\";\n\nconst Signup = () => {\n\n    const [loading, setLoading] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n\n    const dispatch = useDispatch();\n\n\n    /**\n     * @function (01) prevent the default and update to loading state\n     *           (02) check if hospital option was selected - if not return\n     *           (03) merge with the form object\n     *           (02) dispatch to the signup reducer and wait until fulfilled\n     */\n    const performSignup = (e) => {\n        //01\n        e.preventDefault();\n        setLoading(true);\n        //02\n        if (!selectedOption) return alert('please select a hospital')\n        //03\n        let signupData = {...Object.fromEntries(new FormData(e.target)), ...{hospitalCode: selectedOption.value}}\n        //02\n        dispatch(signUpAsync(signupData))\n            .then((res) => {\n                //history.push(\"/order\");\n                //window.location.reload();\n            })\n            .catch((err) => {\n                setLoading(false);\n            });\n    };\n\n    // =================================\n\n    const options = [\n        { value: '00001', label: 'DONAUISAR Klinikum Deggendorf-Dingolfing-Landau' }\n    ];\n\n    const customStyles = {\n        option: (provided, state) => ({\n            ...provided,\n            borderBottom: '2px dotted green',\n            color: state.isSelected ? 'yellow' : 'black',\n            backgroundColor: state.isSelected ? 'green' : 'white',\n            width: '100%',\n            height: \"200%\"\n        }),\n        control: (provided) => ({\n            ...provided,\n            margin: \"2.75% 0 2.75% 0\",\n            width: \"34vw\",\n            borderRadius: \"8px\",\n            height: \"8vh\",\n            backgroundColor: \"white\",\n            padding: \"0 2.5% 0 2.5%\",\n            fontSize: \"1em\",\n            color: '#505DF7',\n            textAlign: 'center'\n        }),\n        placeholder: (defaultStyles) => ({\n            ...defaultStyles,\n            fontSize: '1em',\n            color: '#505DF7',\n            textAlign: 'center'\n        })\n    }\n\n    // =================================\n\n    return (\n        <div className=\"main_section right_main_section\">\n            <div id=\"cta_wrapper\">\n                <form className=\"su_section\" onSubmit={performSignup}>\n                    <Select\n                        placeholder=\"Krankenhaus wählen ...\"\n                        styles = { customStyles }\n                        options = { options }\n                        onChange = { setSelectedOption }\n                    />\n                    <input className=\"signup_input short_input\" name=\"firstName\" placeholder=\"Vorname\" type=\"text\" required />\n                    <input className=\"signup_input short_input\" name=\"lastName\" placeholder=\"Nachname\" type=\"text\" required />\n                    <input className=\"signup_input\" name=\"email\" placeholder=\"E-Mail\" type=\"email\" required />\n                    <input className=\"signup_input\" name=\"password\" placeholder=\"Passwort\" type=\"password\" required/>\n                    <button type=\"submit\" className=\"signup_input signup_btn\">\n                        {loading ? (\"In Arbeit ...\") : (\"Anmelden\")}\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}