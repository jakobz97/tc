{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { loadMenu } from '../services/menu.service';\nconst initialState = {\n  menu: []\n};\nexport const loadMenuAsync = createAsyncThunk('menu/', async () => {\n  const response = await loadMenu();\n  return response.data;\n});\nexport const menuSlice = createSlice({\n  name: 'menu',\n  initialState,\n  reducers: {\n    setMenu: (state, action) => {\n      state.menu = { ...state.menu,\n        ...action.payload\n      };\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loadMenuAsync.pending, state => {\n      console.log('loading');\n    }).addCase(loadMenuAsync.fulfilled, (state, action) => {\n      console.log('loaded');\n      console.log('loaded', action.payload); //todo assign menu to state\n    });\n  }\n});\nexport const {\n  setMenu\n} = menuSlice.actions;\nexport const selectMenu = state => state.menu.menu;\nexport default menuSlice.reducer;","map":{"version":3,"sources":["/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/slice/menuSlice.js"],"names":["createAsyncThunk","createSlice","loadMenu","initialState","menu","loadMenuAsync","response","data","menuSlice","name","reducers","setMenu","state","action","payload","extraReducers","builder","addCase","pending","console","log","fulfilled","actions","selectMenu","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAAQC,QAAR,QAAuB,0BAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;AAIA,OAAO,MAAMC,aAAa,GAAGL,gBAAgB,CACzC,OADyC,EAEzC,YAAY;AACR,QAAMM,QAAQ,GAAG,MAAMJ,QAAQ,EAA/B;AACA,SAAOI,QAAQ,CAACC,IAAhB;AACH,CALwC,CAAtC;AAQP,OAAO,MAAMC,SAAS,GAAGP,WAAW,CAAC;AACjCQ,EAAAA,IAAI,EAAE,MAD2B;AAEjCN,EAAAA,YAFiC;AAGjCO,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxBD,MAAAA,KAAK,CAACR,IAAN,GAAa,EAAC,GAAGQ,KAAK,CAACR,IAAV;AAAgB,WAAGS,MAAM,CAACC;AAA1B,OAAb;AACH;AAHK,GAHuB;AAQjCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CACFC,OADL,CACaZ,aAAa,CAACa,OAD3B,EACqCN,KAAD,IAAW;AACvCO,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAHL,EAIKH,OAJL,CAIaZ,aAAa,CAACgB,SAJ3B,EAIsC,CAACT,KAAD,EAAQC,MAAR,KAAmB;AACjDM,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,MAAM,CAACC,OAA7B,EAFiD,CAGjD;AACH,KARL;AASH;AAlBgC,CAAD,CAA7B;AAqBP,OAAO,MAAM;AAACH,EAAAA;AAAD,IAAYH,SAAS,CAACc,OAA5B;AAEP,OAAO,MAAMC,UAAU,GAAIX,KAAD,IAAWA,KAAK,CAACR,IAAN,CAAWA,IAAzC;AAGP,eAAeI,SAAS,CAACgB,OAAzB","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {loadMenu} from '../services/menu.service';\n\nconst initialState = {\n    menu: []\n};\n\nexport const loadMenuAsync = createAsyncThunk(\n    'menu/',\n    async () => {\n        const response = await loadMenu();\n        return response.data;\n    }\n);\n\nexport const menuSlice = createSlice({\n    name: 'menu',\n    initialState,\n    reducers: {\n        setMenu: (state, action) => {\n            state.menu = {...state.menu, ...action.payload};\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(loadMenuAsync.pending, (state) => {\n                console.log('loading');\n            })\n            .addCase(loadMenuAsync.fulfilled, (state, action) => {\n                console.log('loaded');\n                console.log('loaded', action.payload)\n                //todo assign menu to state\n            });\n    },\n});\n\nexport const {setMenu} = menuSlice.actions;\n\nexport const selectMenu = (state) => state.menu.menu;\n\n\nexport default menuSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}