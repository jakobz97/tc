{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { validateInviteLink, submitInvite } from '../services/verify.service';\nconst initialState = {};\nexport const validateLinksAsync = createAsyncThunk('invite/validate', async hash => {\n  const response = await validateInviteLink(hash);\n  return response;\n});\nexport const submitUserAsync = createAsyncThunk('invite/submit', async userData => {\n  const response = await submitInvite(userData);\n  if (response.tokenData.accessToken) localStorage.setItem(\"user\", JSON.stringify(response.data.tokenData));\n  console.log('submit', response);\n  return response;\n});\nexport const verifySlice = createSlice({\n  name: 'verify',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(validateLinksAsync.fulfilled, (state, action) => {\n      console.log(action.payload);\n    }).addCase(submitUserAsync.fulfilled, (state, action) => {});\n  }\n});\nexport const {} = verifySlice.actions;\nexport default verifySlice.reducer;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/slice/verifySlice.js"],"names":["createAsyncThunk","createSlice","validateInviteLink","submitInvite","initialState","validateLinksAsync","hash","response","submitUserAsync","userData","tokenData","accessToken","localStorage","setItem","JSON","stringify","data","console","log","verifySlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,kBAAT,EAA6BC,YAA7B,QAAiD,4BAAjD;AAEA,MAAMC,YAAY,GAAG,EAArB;AAGA,OAAO,MAAMC,kBAAkB,GAAGL,gBAAgB,CAC9C,iBAD8C,EAE9C,MAAOM,IAAP,IAAgB;AACZ,QAAMC,QAAQ,GAAG,MAAML,kBAAkB,CAACI,IAAD,CAAzC;AACA,SAAOC,QAAP;AACH,CAL6C,CAA3C;AAQP,OAAO,MAAMC,eAAe,GAAGR,gBAAgB,CAC3C,eAD2C,EAE3C,MAAOS,QAAP,IAAoB;AAChB,QAAMF,QAAQ,GAAG,MAAMJ,YAAY,CAACM,QAAD,CAAnC;AACA,MAAIF,QAAQ,CAACG,SAAT,CAAmBC,WAAvB,EAAoCC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACS,IAAT,CAAcN,SAA7B,CAA7B;AACpCO,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBX,QAAtB;AACA,SAAOA,QAAP;AACH,CAP0C,CAAxC;AAUP,OAAO,MAAMY,WAAW,GAAGlB,WAAW,CAAC;AACnCmB,EAAAA,IAAI,EAAE,QAD6B;AAEnChB,EAAAA,YAFmC;AAGnCiB,EAAAA,QAAQ,EAAE,EAHyB;AAKnCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CACFC,OADL,CACanB,kBAAkB,CAACoB,SADhC,EAC2C,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtDV,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAM,CAACC,OAAnB;AACH,KAHL,EAIKJ,OAJL,CAIahB,eAAe,CAACiB,SAJ7B,EAIwC,CAACC,KAAD,EAAQC,MAAR,KAAmB,CACtD,CALL;AAMH;AAZkC,CAAD,CAA/B;AAeP,OAAO,MAAM,KAAKR,WAAW,CAACU,OAAvB;AAEP,eAAeV,WAAW,CAACW,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { validateInviteLink, submitInvite } from '../services/verify.service';\n\nconst initialState = {\n};\n\nexport const validateLinksAsync = createAsyncThunk(\n    'invite/validate',\n    async (hash) => {\n        const response = await validateInviteLink(hash);\n        return response;\n    }\n);\n\nexport const submitUserAsync = createAsyncThunk(\n    'invite/submit',\n    async (userData) => {\n        const response = await submitInvite(userData);\n        if (response.tokenData.accessToken) localStorage.setItem(\"user\", JSON.stringify(response.data.tokenData));\n        console.log('submit', response);\n        return response;\n    }\n);\n\nexport const verifySlice = createSlice({\n    name: 'verify',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(validateLinksAsync.fulfilled, (state, action) => {\n                console.log(action.payload)\n            })\n            .addCase(submitUserAsync.fulfilled, (state, action) => {\n            })\n    },\n});\n\nexport const {} = verifySlice.actions;\n\nexport default verifySlice.reducer;\n"]},"metadata":{},"sourceType":"module"}