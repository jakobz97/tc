{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { selectIsLoggedIn, selectMessage, selectUserType, loginAsync } from \"../../slice/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { history } from \"../../helpers/history\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const message = useSelector(selectMessage);\n  const userType = useSelector(selectUserType);\n  const dispatch = useDispatch(); //Change handlers\n\n  const changeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const changePassword = e => {\n    setPassword(e.target.value);\n  };\n  /**\n   * @function (01)\n   */\n\n\n  const performLogin = e => {\n    e.preventDefault();\n    setLoading(true);\n    history.push(`/${userType}`);\n    window.location.reload();\n    /*\n    dispatch(loginAsync({email: email, password: password}))\n        .then(() => {\n            props.history.push(\"/profile\");\n            window.location.reload();\n        })\n        .catch(() => {\n            setLoading(false);\n        });\n     */\n  };\n\n  if (isLoggedIn) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/profile\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: performLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        className: \"\",\n        placeholder: \"E-Mail\",\n        type: \"email\",\n        required: true,\n        onChange: changeEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        className: \"\",\n        placeholder: \"Password\",\n        type: \"password\",\n        required: true,\n        onChange: changePassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Processing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      role: \"alert\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"gaeBmXCTIuF4LpNRflCYwXlViEw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Login.js"],"names":["React","useState","Redirect","selectIsLoggedIn","selectMessage","selectUserType","loginAsync","useDispatch","useSelector","history","Login","email","setEmail","password","setPassword","loading","setLoading","isLoggedIn","message","userType","dispatch","changeEmail","e","target","value","changePassword","performLogin","preventDefault","push","window","location","reload"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport {selectIsLoggedIn, selectMessage, selectUserType, loginAsync} from \"../../slice/authSlice\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { history } from \"../../helpers/history\";\n\nconst Login = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [loading, setLoading] = useState(false);\n\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    const message = useSelector(selectMessage);\n    const userType = useSelector(selectUserType);\n\n    const dispatch = useDispatch();\n\n    //Change handlers\n    const changeEmail = (e) => {\n        setEmail(e.target.value);\n    };\n    const changePassword = (e) => {\n        setPassword(e.target.value);\n    };\n\n    /**\n     * @function (01)\n     */\n    const performLogin = (e) => {\n        e.preventDefault();\n\n        setLoading(true);\n\n\n        history.push(`/${userType}`);\n        window.location.reload();\n\n\n        /*\n        dispatch(loginAsync({email: email, password: password}))\n            .then(() => {\n                props.history.push(\"/profile\");\n                window.location.reload();\n            })\n            .catch(() => {\n                setLoading(false);\n            });\n         */\n    };\n\n    if (isLoggedIn) return <Redirect to=\"/profile\" />;\n\n    return (\n        <div className=\"\">\n            <form onSubmit={performLogin}>\n                <input name=\"email\" className=\"\" placeholder=\"E-Mail\" type=\"email\" required onChange={changeEmail}/>\n                <input name=\"password\" className=\"\" placeholder=\"Password\" type=\"password\" required onChange={changePassword}/>\n                <button type=\"submit\">\n                    {loading && (<span>Processing</span>)}\n                    <span>Login</span>\n                </button>\n            </form>\n\n            {message && (\n                <div className=\"\" role=\"alert\">\n                    {message}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}