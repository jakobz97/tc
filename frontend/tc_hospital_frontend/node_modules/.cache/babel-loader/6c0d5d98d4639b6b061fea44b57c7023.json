{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/main/coder/editor/Editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { fromRange } from \"xpath-range\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Navbar from \"../../general/navbar/Navbar\";\nimport '../../../../styles/main/coder/editor/editor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = () => {\n  _s();\n\n  const [selTxt, setSelTxt] = useState(\"\"); //todo security checks\n\n  /**\n   * @function\n   */\n\n  const addCode = () => {\n    alert(selTxt);\n  };\n  /**\n   * @function\n   */\n\n\n  const removeTxt = () => {\n    alert('remove');\n  };\n  /**\n   * @function (01) get all selects and positions\n   *           (02) if only cursor change takes place only hide the tooltip\n   *           (03) reposition tooltip\n   *           (04) set selected text state\n   */\n\n\n  const selector = e => {\n    //01\n    let select = window.getSelection(),\n        selectRange = select.getRangeAt(0),\n        selectPos = selectRange.getBoundingClientRect(),\n        codeInput = document.getElementsByClassName('coder_input')[0],\n        codeInputPos = codeInput.getBoundingClientRect(),\n        tooltip = document.getElementById('tooltip_editor_wrapper'); //02\n\n    if (selectPos.width < 1) return tooltip.style.display = \"none\"; //03\n\n    tooltip.style.display = \"inline\";\n    tooltip.style.top = selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop + 'px';\n    tooltip.style.left = selectPos.left - codeInputPos.left + selectPos.width / 2 - tooltip.offsetWidth / 2 + 'px'; //04\n\n    setSelTxt(select.toString());\n    let xpath = fromRange(selectRange, codeInput);\n    let {\n      startOffset,\n      endOffset,\n      startContainer,\n      endContainer\n    } = getXpathParameters(xpath);\n    /* Native Javasript */\n\n    for (var i in codeInput) {\n      var element = codeInput[i];\n      console.log(element); //element.innerHTML = element.innerHTML.replace(element.innerHTML.substr(startOffset, endOffset-startOffset), '<code style=\"margin: 0.1em;background-color: #EFE7DF;\">' + element.innerHTML.substr(startOffset, endOffset-startOffset) + '</code>');\n    }\n  };\n\n  function getTextNodesIn(node) {\n    var textNodes = [];\n\n    if (node.nodeType == 3) {\n      textNodes.push(node);\n    } else {\n      var children = node.childNodes;\n\n      for (var i = 0, len = children.length; i < len; ++i) {\n        textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n      }\n    }\n\n    return textNodes;\n  }\n\n  function setSelectionRange(el, start, end) {\n    if (document.createRange && window.getSelection) {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      var textNodes = getTextNodesIn(el);\n      var foundStart = false;\n      var charCount = 0,\n          endCharCount;\n\n      for (var i = 0, textNode; textNode = textNodes[i++];) {\n        endCharCount = charCount + textNode.length;\n\n        if (!foundStart && start >= charCount && (start < endCharCount || start == endCharCount && i <= textNodes.length)) {\n          range.setStart(textNode, start - charCount);\n          foundStart = true;\n        }\n\n        if (foundStart && end <= endCharCount) {\n          range.setEnd(textNode, end - charCount);\n          break;\n        }\n\n        charCount = endCharCount;\n      }\n\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else if (document.selection && document.body.createTextRange) {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(true);\n      textRange.moveEnd(\"character\", end);\n      textRange.moveStart(\"character\", start);\n      textRange.select();\n    }\n  }\n\n  const getXpathParameters = xpath => {\n    const startOffset = xpath.startOffset;\n    const endOffset = xpath.endOffset;\n    let startContainer = xpath.start; // /div[2]/p[7]/text()[1] -> /div[2]/p[7]/text[1]\n\n    startContainer = startContainer.replace(/(|)/g, \"\");\n    let endContainer = xpath.end;\n    endContainer = endContainer.replace(/(|)/g, \"\");\n    return {\n      startOffset,\n      endOffset,\n      startContainer,\n      endContainer\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center_container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_invite_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_outer_content\",\n        children: \"Coder editor - alles erstmal offline bis gepublished wird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_center_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coder_input\",\n          placeholder: \"Patientendokumentation\",\n          contentEditable: \"true\",\n          onSelect: selector,\n          children: [txt, /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"tooltip_editor_wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tooltip_btn\",\n              onClick: addCode,\n              children: \"Code hinzuf\\xFCgen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tooltip_btn\",\n              onClick: removeTxt,\n              children: \"L\\xF6schen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"code_display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_outer_content\",\n        children: \"Codes exportieren / anzeigen Hochladen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Editor, \"pfD4SwMn3qn2RWLzJw3b9IZOFpQ=\");\n\n_c = Editor;\nexport default Editor;\nconst txt = \"Die wichtigste Klassifikation für klinische Diagnosen ist die Internationale statistische Klassifikation der Krankheiten und verwandter Gesundheitsprobleme (International Statistical Classification of Diseases and Related Health Problems, ICD). Sie wird von der WHO (World Health Organization) herausgegeben und weltweit für die Diagnosendokumentation, Todesursachenstatistik und andere medizinische Statistiken verwendet.\\n\" + \"\\n\" + \"Erste Versuche mit einer Klassifikation von Krankheiten bzw. Todesursachen gab es bereits im 18. Jahrhundert. So hat der Probst Johann Peter Süßmilch (1707-1767) eine Todesursachenstatistik für Berlin mit mehr als 80.000 Fällen veröffentlicht. Im 19. Jahrhundert wurde versucht, die Kenntnis über die Häufigkeit verschiedener Todesursachen in soziale Maßnahmen einfließen zu lassen. 1893 wurde im Auftrag des Internationalen Statistischen Instituts von dem Direktor des statistischen Amtes von Paris, Dr. Jacques Bertillot, ein systematisches Todesursachen-Verzeichnis vorgelegt, in das Erfahrungen aus Frankreich, England, Deutschland und der Schweiz eingingen. Als Grundlage diente das Prinzip der Unterscheidung zwischen Allgemeinkrankheiten und lokalisierten Organerkrankungen. Bis 1938 gab es fünf Revisionen dieses Todesursachen-Verzeichnisses. Seit 1946 liegt die Verantwortung für die ICD bei der Weltgesundheitsorganisation WHO. Neben der Definition des Verzeichnisses (6. Revision) einigte man sich damals auch auf internationale Vorschriften zur Feststellung des Grundleidens und auf die Annahme eines umfassenden Programms der internationalen Zusammenarbeit auf dem Gebiet der Bevölkerungs- und Gesundheitsstatistik.\\n\" + \"\\n\" + \"Nach umfangreichen Vorarbeiten zu Inhalt, Aufbau und Verwendungszweck der ICD wurde 1987 die 10. Revision (ICD-10) von der WHO-Vollversammlung verabschiedet. Diese Version wird weltweit für die Gesundheitsstatistik verwendet und erlaubt damit Vergleiche zwischen einzelnen Ländern. Die deutsche Fassung wird von dem Deutschen Institut für Medizinische Dokumentation und Information (DIMDI) in Köln herausgegeben. Für die Todesursachenstatistik wird die ICD-10 in Deutschland seit dem 1.1.1998 eingesetzt (ICD-10-WHO). Die aktuelle Fassung für die stationäre und vertragsärztliche ambulante Gesundheitsversorgung wird als Version ICD-10-GM (German Modification) bezeichnet. Sie enthält eine Reihe von Modifikationen für das deutsche Gesundheitssystem, insbesondere Anpassungen für die Abrechnung stationärer Leistungen mit dem diagnose-orientierten Fallpauschalensystem (DRG-System).\\n\" + \"\\n\" + \"Die ICD-10 ist als numerische (d.h. Gliederung nach Schlüsseln) und alphabetische (d.h. Gliederung nach Krankheitsbezeichnungen) Klassifikation zusammen mit den Regeln ihrer Anwendung im Buchhandel erhältlich. Die alphabetische Klassifikation wird auch als Diagnosenthesaurus bezeichnet. Die aktuelle Version der ICD-10 kann in beiden Formen auf der WWW-Seite des DIMDI gelesen werden.\";\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/main/coder/editor/Editor.js"],"names":["React","useState","useRef","fromRange","v4","uuidv4","Navbar","Editor","selTxt","setSelTxt","addCode","alert","removeTxt","selector","e","select","window","getSelection","selectRange","getRangeAt","selectPos","getBoundingClientRect","codeInput","document","getElementsByClassName","codeInputPos","tooltip","getElementById","width","style","display","top","offsetHeight","scrollTop","left","offsetWidth","toString","xpath","startOffset","endOffset","startContainer","endContainer","getXpathParameters","i","element","console","log","getTextNodesIn","node","textNodes","nodeType","push","children","childNodes","len","length","apply","setSelectionRange","el","start","end","createRange","range","selectNodeContents","foundStart","charCount","endCharCount","textNode","setStart","setEnd","sel","removeAllRanges","addRange","selection","body","createTextRange","textRange","moveToElementText","collapse","moveEnd","moveStart","replace","txt"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { fromRange } from \"xpath-range\"\nimport { v4 as uuidv4 } from \"uuid\"\n\nimport Navbar from \"../../general/navbar/Navbar\";\n\nimport '../../../../styles/main/coder/editor/editor.css';\n\nconst Editor = () => {\n\n\n    const [selTxt, setSelTxt] = useState(\"\")\n\n\n    //todo security checks\n\n    /**\n     * @function\n     */\n    const addCode = () => {\n        alert(selTxt)\n    }\n\n    /**\n     * @function\n     */\n    const removeTxt = () => {\n        alert('remove')\n    }\n\n    /**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */\n    const selector = (e) => {\n        //01\n        let select = window.getSelection(),\n            selectRange = select.getRangeAt(0),\n            selectPos = selectRange.getBoundingClientRect(),\n            codeInput = document.getElementsByClassName('coder_input')[0],\n            codeInputPos = codeInput.getBoundingClientRect(),\n            tooltip = document.getElementById('tooltip_editor_wrapper');\n        //02\n        if (selectPos.width < 1) return tooltip.style.display = \"none\";\n        //03\n        tooltip.style.display = \"inline\";\n        tooltip.style.top =(selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n        tooltip.style.left =(selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n        //04\n        setSelTxt(select.toString());\n\n\n        let xpath = fromRange(selectRange, codeInput)\n        let {\n            startOffset,\n            endOffset,\n            startContainer,\n            endContainer,\n        } = getXpathParameters(xpath)\n\n\n        /* Native Javasript */\n        for (var i in codeInput) {\n            var element = codeInput[i];\n            console.log(element);\n            //element.innerHTML = element.innerHTML.replace(element.innerHTML.substr(startOffset, endOffset-startOffset), '<code style=\"margin: 0.1em;background-color: #EFE7DF;\">' + element.innerHTML.substr(startOffset, endOffset-startOffset) + '</code>');\n        }\n\n    }\n\n\n\n    function getTextNodesIn(node) {\n        var textNodes = [];\n        if (node.nodeType == 3) {\n            textNodes.push(node);\n        } else {\n            var children = node.childNodes;\n            for (var i = 0, len = children.length; i < len; ++i) {\n                textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n            }\n        }\n        return textNodes;\n    }\n\n    function setSelectionRange(el, start, end) {\n        if (document.createRange && window.getSelection) {\n            var range = document.createRange();\n            range.selectNodeContents(el);\n            var textNodes = getTextNodesIn(el);\n            var foundStart = false;\n            var charCount = 0, endCharCount;\n\n            for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n                endCharCount = charCount + textNode.length;\n                if (!foundStart && start >= charCount\n                    && (start < endCharCount ||\n                        (start == endCharCount && i <= textNodes.length))) {\n                    range.setStart(textNode, start - charCount);\n                    foundStart = true;\n                }\n                if (foundStart && end <= endCharCount) {\n                    range.setEnd(textNode, end - charCount);\n                    break;\n                }\n                charCount = endCharCount;\n            }\n\n            var sel = window.getSelection();\n            sel.removeAllRanges();\n            sel.addRange(range);\n        } else if (document.selection && document.body.createTextRange) {\n            var textRange = document.body.createTextRange();\n            textRange.moveToElementText(el);\n            textRange.collapse(true);\n            textRange.moveEnd(\"character\", end);\n            textRange.moveStart(\"character\", start);\n            textRange.select();\n        }\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    const getXpathParameters = xpath => {\n        const startOffset = xpath.startOffset\n        const endOffset = xpath.endOffset\n        let startContainer = xpath.start\n        // /div[2]/p[7]/text()[1] -> /div[2]/p[7]/text[1]\n        startContainer = startContainer.replace(/(|)/g, \"\")\n        let endContainer = xpath.end\n        endContainer = endContainer.replace(/(|)/g, \"\")\n        return { startOffset, endOffset, startContainer, endContainer }\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_invite_content\">\n                <div className=\"main_outer_content\">Coder editor - alles erstmal offline bis gepublished wird</div>\n                <div className=\"main_center_content\">\n\n                    <div className=\"coder_input\" placeholder=\"Patientendokumentation\" contentEditable=\"true\" onSelect={selector}>\n                        {txt}\n                        <div id=\"tooltip_editor_wrapper\">\n                            <div className=\"tooltip_btn\" onClick={addCode}>Code hinzufügen</div>\n                            <div className=\"tooltip_btn\" onClick={removeTxt}>Löschen</div>\n                        </div>\n                    </div>\n                    <div className=\"code_display\">\n                        {/*iterate over codes and their position */}\n                    </div>\n                </div>\n                <div className=\"main_outer_content\">\n                    Codes exportieren / anzeigen\n                    Hochladen\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Editor;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst txt = \"Die wichtigste Klassifikation für klinische Diagnosen ist die Internationale statistische Klassifikation der Krankheiten und verwandter Gesundheitsprobleme (International Statistical Classification of Diseases and Related Health Problems, ICD). Sie wird von der WHO (World Health Organization) herausgegeben und weltweit für die Diagnosendokumentation, Todesursachenstatistik und andere medizinische Statistiken verwendet.\\n\" +\n    \"\\n\" +\n    \"Erste Versuche mit einer Klassifikation von Krankheiten bzw. Todesursachen gab es bereits im 18. Jahrhundert. So hat der Probst Johann Peter Süßmilch (1707-1767) eine Todesursachenstatistik für Berlin mit mehr als 80.000 Fällen veröffentlicht. Im 19. Jahrhundert wurde versucht, die Kenntnis über die Häufigkeit verschiedener Todesursachen in soziale Maßnahmen einfließen zu lassen. 1893 wurde im Auftrag des Internationalen Statistischen Instituts von dem Direktor des statistischen Amtes von Paris, Dr. Jacques Bertillot, ein systematisches Todesursachen-Verzeichnis vorgelegt, in das Erfahrungen aus Frankreich, England, Deutschland und der Schweiz eingingen. Als Grundlage diente das Prinzip der Unterscheidung zwischen Allgemeinkrankheiten und lokalisierten Organerkrankungen. Bis 1938 gab es fünf Revisionen dieses Todesursachen-Verzeichnisses. Seit 1946 liegt die Verantwortung für die ICD bei der Weltgesundheitsorganisation WHO. Neben der Definition des Verzeichnisses (6. Revision) einigte man sich damals auch auf internationale Vorschriften zur Feststellung des Grundleidens und auf die Annahme eines umfassenden Programms der internationalen Zusammenarbeit auf dem Gebiet der Bevölkerungs- und Gesundheitsstatistik.\\n\" +\n    \"\\n\" +\n    \"Nach umfangreichen Vorarbeiten zu Inhalt, Aufbau und Verwendungszweck der ICD wurde 1987 die 10. Revision (ICD-10) von der WHO-Vollversammlung verabschiedet. Diese Version wird weltweit für die Gesundheitsstatistik verwendet und erlaubt damit Vergleiche zwischen einzelnen Ländern. Die deutsche Fassung wird von dem Deutschen Institut für Medizinische Dokumentation und Information (DIMDI) in Köln herausgegeben. Für die Todesursachenstatistik wird die ICD-10 in Deutschland seit dem 1.1.1998 eingesetzt (ICD-10-WHO). Die aktuelle Fassung für die stationäre und vertragsärztliche ambulante Gesundheitsversorgung wird als Version ICD-10-GM (German Modification) bezeichnet. Sie enthält eine Reihe von Modifikationen für das deutsche Gesundheitssystem, insbesondere Anpassungen für die Abrechnung stationärer Leistungen mit dem diagnose-orientierten Fallpauschalensystem (DRG-System).\\n\" +\n    \"\\n\" +\n    \"Die ICD-10 ist als numerische (d.h. Gliederung nach Schlüsseln) und alphabetische (d.h. Gliederung nach Krankheitsbezeichnungen) Klassifikation zusammen mit den Regeln ihrer Anwendung im Buchhandel erhältlich. Die alphabetische Klassifikation wird auch als Diagnosenthesaurus bezeichnet. Die aktuelle Version der ICD-10 kann in beiden Formen auf der WWW-Seite des DIMDI gelesen werden.\"\n"]},"metadata":{},"sourceType":"module"}