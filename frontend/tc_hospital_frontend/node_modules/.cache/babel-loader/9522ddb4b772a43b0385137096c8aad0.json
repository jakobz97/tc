{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { loadMenu } from '../services/menu.service';\nconst initialState = {\n  menu: [],\n  selectedCategory: null\n};\nexport const loadMenuAsync = createAsyncThunk('menu/', async () => {\n  const response = await loadMenu();\n  return response.data;\n});\nexport const menuSlice = createSlice({\n  name: 'menu',\n  initialState,\n  reducers: {\n    setMenuCategory: (state, action) => {\n      state.menu = [action.payload, ...state.menu];\n    },\n    updateMenuCategory: (state, action) => {\n      state.menu = [action.payload, ...state.menu];\n    },\n    setSelectedCategory: (state, action) => {\n      state.selectedCategory = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loadMenuAsync.pending, state => {\n      console.log('loading');\n    }).addCase(loadMenuAsync.fulfilled, (state, action) => {\n      console.log('loaded');\n      console.log('loaded', action.payload); //todo assign menu to state\n    });\n  }\n});\nexport const {\n  setMenuCategory,\n  setSelectedCategory\n} = menuSlice.actions;\nexport const selectMenu = state => state.menu.menu;\nexport const selectCurrentCategory = state => state.menu.selectedCategory;\nexport default menuSlice.reducer;","map":{"version":3,"sources":["/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/slice/menuSlice.js"],"names":["createAsyncThunk","createSlice","loadMenu","initialState","menu","selectedCategory","loadMenuAsync","response","data","menuSlice","name","reducers","setMenuCategory","state","action","payload","updateMenuCategory","setSelectedCategory","extraReducers","builder","addCase","pending","console","log","fulfilled","actions","selectMenu","selectCurrentCategory","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAAQC,QAAR,QAAuB,0BAAvB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,gBAAgB,EAAE;AAFD,CAArB;AAKA,OAAO,MAAMC,aAAa,GAAGN,gBAAgB,CACzC,OADyC,EAEzC,YAAY;AACR,QAAMO,QAAQ,GAAG,MAAML,QAAQ,EAA/B;AACA,SAAOK,QAAQ,CAACC,IAAhB;AACH,CALwC,CAAtC;AAQP,OAAO,MAAMC,SAAS,GAAGR,WAAW,CAAC;AACjCS,EAAAA,IAAI,EAAE,MAD2B;AAEjCP,EAAAA,YAFiC;AAGjCQ,EAAAA,QAAQ,EAAE;AACNC,IAAAA,eAAe,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChCD,MAAAA,KAAK,CAACT,IAAN,GAAa,CAACU,MAAM,CAACC,OAAR,EAAiB,GAAGF,KAAK,CAACT,IAA1B,CAAb;AACH,KAHK;AAINY,IAAAA,kBAAkB,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACnCD,MAAAA,KAAK,CAACT,IAAN,GAAa,CAACU,MAAM,CAACC,OAAR,EAAiB,GAAGF,KAAK,CAACT,IAA1B,CAAb;AACH,KANK;AAONa,IAAAA,mBAAmB,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACR,gBAAN,GAAyBS,MAAM,CAACC,OAAhC;AACH;AATK,GAHuB;AAcjCG,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CACFC,OADL,CACad,aAAa,CAACe,OAD3B,EACqCR,KAAD,IAAW;AACvCS,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAHL,EAIKH,OAJL,CAIad,aAAa,CAACkB,SAJ3B,EAIsC,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACjDQ,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBT,MAAM,CAACC,OAA7B,EAFiD,CAGjD;AACH,KARL;AASH;AAxBgC,CAAD,CAA7B;AA2BP,OAAO,MAAM;AAACH,EAAAA,eAAD;AAAkBK,EAAAA;AAAlB,IAAyCR,SAAS,CAACgB,OAAzD;AAEP,OAAO,MAAMC,UAAU,GAAIb,KAAD,IAAWA,KAAK,CAACT,IAAN,CAAWA,IAAzC;AACP,OAAO,MAAMuB,qBAAqB,GAAId,KAAD,IAAWA,KAAK,CAACT,IAAN,CAAWC,gBAApD;AAGP,eAAeI,SAAS,CAACmB,OAAzB","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {loadMenu} from '../services/menu.service';\n\nconst initialState = {\n    menu: [],\n    selectedCategory: null\n};\n\nexport const loadMenuAsync = createAsyncThunk(\n    'menu/',\n    async () => {\n        const response = await loadMenu();\n        return response.data;\n    }\n);\n\nexport const menuSlice = createSlice({\n    name: 'menu',\n    initialState,\n    reducers: {\n        setMenuCategory: (state, action) => {\n            state.menu = [action.payload, ...state.menu]\n        },\n        updateMenuCategory: (state, action) => {\n            state.menu = [action.payload, ...state.menu]\n        },\n        setSelectedCategory: (state, action) => {\n            state.selectedCategory = action.payload\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(loadMenuAsync.pending, (state) => {\n                console.log('loading');\n            })\n            .addCase(loadMenuAsync.fulfilled, (state, action) => {\n                console.log('loaded');\n                console.log('loaded', action.payload)\n                //todo assign menu to state\n            });\n    },\n});\n\nexport const {setMenuCategory, setSelectedCategory} = menuSlice.actions;\n\nexport const selectMenu = (state) => state.menu.menu;\nexport const selectCurrentCategory = (state) => state.menu.selectedCategory;\n\n\nexport default menuSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}