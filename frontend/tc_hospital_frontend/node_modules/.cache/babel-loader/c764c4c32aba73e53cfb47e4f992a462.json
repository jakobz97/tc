{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { login, logout, signup } from '../services/auth.service';\nconst initialState = {\n  loggedIn: localStorage.getItem(\"loggedIn\") === 'true',\n  userType: localStorage.getItem(\"userType\")\n};\nexport const loginAsync = createAsyncThunk('auth/login', async credentials => {\n  return await login(credentials);\n});\nexport const signUpAsync = createAsyncThunk('auth/signup', async signupData => {\n  return await signup(signupData);\n});\nexport const logoutAsync = createAsyncThunk('auth/logout', async () => {\n  return await logout();\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(loginAsync.fulfilled, (state, action) => {\n      return {\n        loggedIn: true\n      };\n    }).addCase(signUpAsync.fulfilled, (state, action) => {\n      console.log('signed up');\n    }).addCase(logoutAsync.fulfilled, (state, action) => {\n      console.log('loaded logout');\n    });\n  }\n});\nexport const selectIsLoggedIn = state => state.auth.loggedIn;\nexport const selectUserType = state => state.auth.userType;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/authSlice.js"],"names":["createAsyncThunk","createSlice","login","logout","signup","initialState","loggedIn","localStorage","getItem","userType","loginAsync","credentials","signUpAsync","signupData","logoutAsync","authSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","console","log","selectIsLoggedIn","auth","selectUserType","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,MAAvB,QAAoC,0BAApC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,MAD9B;AAEjBC,EAAAA,QAAQ,EAAEF,YAAY,CAACC,OAAb,CAAqB,UAArB;AAFO,CAArB;AAKA,OAAO,MAAME,UAAU,GAAGV,gBAAgB,CACtC,YADsC,EAEtC,MAAOW,WAAP,IAAuB;AACnB,SAAO,MAAMT,KAAK,CAACS,WAAD,CAAlB;AACH,CAJqC,CAAnC;AAOP,OAAO,MAAMC,WAAW,GAAGZ,gBAAgB,CACvC,aADuC,EAEvC,MAAOa,UAAP,IAAsB;AAClB,SAAO,MAAMT,MAAM,CAACS,UAAD,CAAnB;AACH,CAJsC,CAApC;AAOP,OAAO,MAAMC,WAAW,GAAGd,gBAAgB,CACvC,aADuC,EAEvC,YAAY;AACR,SAAO,MAAMG,MAAM,EAAnB;AACH,CAJsC,CAApC;AAOP,OAAO,MAAMY,SAAS,GAAGd,WAAW,CAAC;AACjCe,EAAAA,IAAI,EAAE,MAD2B;AAEjCX,EAAAA,YAFiC;AAGjCY,EAAAA,QAAQ,EAAE,EAHuB;AAKjCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CACFC,OADL,CACaV,UAAU,CAACW,SADxB,EACmC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9C,aAAO;AACHjB,QAAAA,QAAQ,EAAE;AADP,OAAP;AAGH,KALL,EAMKc,OANL,CAMaR,WAAW,CAACS,SANzB,EAMoC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/CC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,KARL,EASKL,OATL,CASaN,WAAW,CAACO,SATzB,EASoC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/CC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,KAXL;AAYH;AAlBgC,CAAD,CAA7B;AAqBP,OAAO,MAAMC,gBAAgB,GAAIJ,KAAD,IAAWA,KAAK,CAACK,IAAN,CAAWrB,QAA/C;AACP,OAAO,MAAMsB,cAAc,GAAIN,KAAD,IAAWA,KAAK,CAACK,IAAN,CAAWlB,QAA7C;AAEP,eAAeM,SAAS,CAACc,OAAzB","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {login, logout, signup} from '../services/auth.service';\n\nconst initialState = {\n    loggedIn: localStorage.getItem(\"loggedIn\") === 'true',\n    userType: localStorage.getItem(\"userType\"),\n};\n\nexport const loginAsync = createAsyncThunk(\n    'auth/login',\n    async (credentials) => {\n        return await login(credentials);\n    }\n);\n\nexport const signUpAsync = createAsyncThunk(\n    'auth/signup',\n    async (signupData) => {\n        return await signup(signupData);\n    }\n);\n\nexport const logoutAsync = createAsyncThunk(\n    'auth/logout',\n    async () => {\n        return await logout();\n    }\n);\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(loginAsync.fulfilled, (state, action) => {\n                return {\n                    loggedIn: true\n                }\n            })\n            .addCase(signUpAsync.fulfilled, (state, action) => {\n                console.log('signed up')\n            })\n            .addCase(logoutAsync.fulfilled, (state, action) => {\n                console.log('loaded logout');\n            });\n    },\n});\n\nexport const selectIsLoggedIn = (state) => state.auth.loggedIn;\nexport const selectUserType = (state) => state.auth.userType;\n\nexport default authSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}