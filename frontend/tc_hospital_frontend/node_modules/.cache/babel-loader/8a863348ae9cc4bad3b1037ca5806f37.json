{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/menu/MenuCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { selectMenu, setMenu, selectCurrentCategory } from \"../../../slice/menuSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport '../../../styles/sub/menu/MenuCreate.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuCreate = _ref => {\n  _s();\n\n  let {\n    hide\n  } = _ref;\n  const menuList = useSelector(selectMenu);\n  const categorySelected = useSelector(selectCurrentCategory);\n  const [ingredientList, addIngredient] = useState([]);\n  const [allergenList, addAllergen] = useState([]);\n  const [extraList, addExtra] = useState([]);\n  const dispatch = useDispatch();\n  /**\n   *\n   */\n\n  useEffect(() => {\n    let bg = document.querySelector('.menu_dark_bg'),\n        content = document.querySelector('.menu_input_wrapper');\n    bg.style.cssText = \"opacity: 100%\";\n    content.style.marginTop = \"0\";\n  }, []);\n  /**\n   * @function (01) obtain value of input and check that not empty\n   *           (02) use selector to check if category already exists\n   *           (03) dispatch to menu reducer and add to data structure\n   *           (04) hide the add category view again\n   */\n\n  const addMenu = e => {\n    //01\n    e.preventDefault();\n    /**\n     *\n     *\n     <input placeholder=\"Zutaten\"/> aus dem usestate extrahieren\n     <input placeholder=\"Allergene\"/>\n     * aus dem use state extrahieren\n     *\n     */\n    //const val = document.querySelector('.category_input').value;\n    //if (!val) return alert('provide value');\n    //02\n    //if (menuList.filter(category => category.name.toLowerCase() === val.toLowerCase()).length !== 0) return alert('already exists');\n    //03 todo set dish to a given category\n    //dispatch(setMenu({name: val, rank: 1, dishes:[]}));\n    //04\n\n    hideMenuAddView(null, true);\n  };\n  /**\n   * @function (01) get the background and content\n   *           (02) return if user clicked on the content\n   *           (03) user clicked outside of content - hide\n   *           (04) after timeout set state again to hidden\n   */\n\n\n  const hideMenuAddView = (e, forced) => {\n    //01\n    let bg = document.querySelector('.menu_dark_bg'),\n        content = document.querySelector('.menu_input_wrapper'); //02\n\n    if (!forced && content.contains(e.target)) return; //03\n\n    bg.style.cssText = \"opacity: 0%\";\n    content.style.marginTop = \"150vh\"; //04\n\n    setTimeout(() => hide(), 350);\n  };\n  /**\n   * @function (01) use the type to get the respective input and its value\n   *           (02) check that the value is not empty\n   *           (03) perform check if this value already exists in the list\n   *           (04) add to the list based on type\n   *           (05) clear input value\n   * @param type can either be ingredient or allergen\n   */\n\n\n  const addIngredientData = type => {\n    //01\n    let input = document.getElementById(type),\n        val = input.value; //02\n\n    if (!val) return alert('provide value'); //03 + 04\n\n    if (type === 'allergen_input') {\n      if (allergenList.includes(val)) return alert('ist schon drin');\n      addAllergen([...allergenList, val]);\n    } else {\n      if (ingredientList.includes(val)) return alert('ist schon drin');\n      addIngredient([...ingredientList, val]);\n    } //05\n\n\n    input.value = \"\";\n  };\n  /**\n   * @function (01) differentiate between types\n   *           (02) filter the element by index and remove it\n   * @param e\n   * @param type\n   * @param index\n   */\n\n\n  const removeIngredientData = (e, type, index) => {\n    addIngredient(prevIngredientList => prevIngredientList.filter((val, i) => i !== index));\n  }; //todo autocomplete ingredients, allergen - if new value occurs add to the list and make it accessible to other people -> im Backend dann schauen ob es das ding schon gibt wenn nicht erstellen und verlinken\n\n  /**\n   *\n   * @param type\n   * @param val\n   */\n\n\n  const addExtraOffer = (desc, price) => {};\n  /**\n   * @function (01) hide the add button\n   *           (02) display the uploaded image as background image\n   *           (03) show the delete button\n   * @param e\n   */\n\n\n  const onChangeMenuImg = e => {\n    if (!e.target.files[0]) return;\n    document.getElementById('add_menu_img_icon').style.display = 'none';\n    document.getElementById('menu_img_placeholder').style.backgroundImage = \"url('\" + URL.createObjectURL(e.target.files[0]) + \"')\";\n    document.getElementById('remove_menu_img_icon').style.display = 'flex';\n  };\n  /**\n   * @function (01) do not trigger the fiel select\n   */\n\n\n  const deleteMenuImg = e => {\n    e.currentTarget.style.display = \"none\";\n    document.getElementById('add_menu_img_icon').style.display = 'inline';\n    document.getElementById('menu_img_placeholder').style.backgroundImage = \"none\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu_dark_bg\",\n    onClick: hideMenuAddView,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_input_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu_input_hide\",\n        onClick: e => {\n          hideMenuAddView(e, true);\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"menu_create_form\",\n        onSubmit: addMenu,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"menu_img_create\",\n          className: \"\",\n          type: \"file\",\n          name: \"menu_img\",\n          onChange: onChangeMenuImg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"menu_img_placeholder\",\n          for: \"menu_img_create\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"add_menu_img_icon\",\n            children: \"Bild hochladen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"remove_menu_img_icon\",\n            onClick: deleteMenuImg,\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"remove_menu_img_icon\",\n          onClick: deleteMenuImg,\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu_main_create_wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"menu_create_input\",\n            type: \"text\",\n            name: \"menu_name\",\n            placeholder: \"Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"menu_create_input menu_create_field\",\n            type: \"text\",\n            name: \"menu_desc\",\n            placeholder: \"Beschreibung\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu_separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu_sub_container_desc\",\n          children: \"Zutaten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu_sub_container_desc\",\n          children: \"Allergene\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu_sub_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"ingredient_input\",\n            className: \"menu_create_input menu_sub_create_input\",\n            type: \"text\",\n            placeholder: \"Zutat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sub_container_add\",\n            onClick: () => addIngredientData('ingredient_input'),\n            children: \"Hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), ingredientList.length > 0 && ingredientList.map((elem, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredient_elem\",\n              onClick: e => removeIngredientData(e, '', i),\n              children: elem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 36\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu_sub_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"allergen_input\",\n            className: \"menu_create_input menu_sub_create_input\",\n            type: \"text\",\n            placeholder: \"Allergen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sub_container_add\",\n            onClick: () => addIngredientData('allergen_input'),\n            children: \"Hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), allergenList.length > 0 && allergenList.map((elem, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredient_elem\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: elem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"remove_ingredient_elem\",\n                onClick: e => removeIngredientData(e, '', i),\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 36\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuCreate, \"vLDeY5aX1yYXJIoeQnA+1O18Yj4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = MenuCreate;\nexport default MenuCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuCreate\");","map":{"version":3,"sources":["/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/menu/MenuCreate.js"],"names":["React","useState","useEffect","selectMenu","setMenu","selectCurrentCategory","useDispatch","useSelector","MenuCreate","hide","menuList","categorySelected","ingredientList","addIngredient","allergenList","addAllergen","extraList","addExtra","dispatch","bg","document","querySelector","content","style","cssText","marginTop","addMenu","e","preventDefault","hideMenuAddView","forced","contains","target","setTimeout","addIngredientData","type","input","getElementById","val","value","alert","includes","removeIngredientData","index","prevIngredientList","filter","i","addExtraOffer","desc","price","onChangeMenuImg","files","display","backgroundImage","URL","createObjectURL","deleteMenuImg","currentTarget","length","map","elem"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport {selectMenu, setMenu, selectCurrentCategory} from \"../../../slice/menuSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport '../../../styles/sub/menu/MenuCreate.css';\n\nconst MenuCreate = ({ hide }) => {\n    const menuList = useSelector(selectMenu)\n    const categorySelected = useSelector(selectCurrentCategory)\n\n    const [ingredientList, addIngredient] = useState([]);\n    const [allergenList, addAllergen] = useState([]);\n    const [extraList, addExtra] = useState([]);\n\n    const dispatch = useDispatch();\n\n    /**\n     *\n     */\n    useEffect(() => {\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.menu_input_wrapper');\n        bg.style.cssText = \"opacity: 100%\";\n        content.style.marginTop = \"0\";\n    }, [])\n\n\n    /**\n     * @function (01) obtain value of input and check that not empty\n     *           (02) use selector to check if category already exists\n     *           (03) dispatch to menu reducer and add to data structure\n     *           (04) hide the add category view again\n     */\n    const addMenu = (e) => {\n        //01\n        e.preventDefault();\n\n\n        /**\n         *\n         *\n         <input placeholder=\"Zutaten\"/> aus dem usestate extrahieren\n         <input placeholder=\"Allergene\"/>\n         * aus dem use state extrahieren\n         *\n         */\n\n        //const val = document.querySelector('.category_input').value;\n        //if (!val) return alert('provide value');\n        //02\n        //if (menuList.filter(category => category.name.toLowerCase() === val.toLowerCase()).length !== 0) return alert('already exists');\n        //03 todo set dish to a given category\n        //dispatch(setMenu({name: val, rank: 1, dishes:[]}));\n        //04\n        hideMenuAddView(null, true)\n    };\n\n    /**\n     * @function (01) get the background and content\n     *           (02) return if user clicked on the content\n     *           (03) user clicked outside of content - hide\n     *           (04) after timeout set state again to hidden\n     */\n    const hideMenuAddView = (e, forced) => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.menu_input_wrapper');\n        //02\n        if (!forced && content.contains(e.target)) return;\n        //03\n        bg.style.cssText = \"opacity: 0%\";\n        content.style.marginTop = \"150vh\";\n        //04\n        setTimeout(() => hide(), 350)\n    };\n\n    /**\n     * @function (01) use the type to get the respective input and its value\n     *           (02) check that the value is not empty\n     *           (03) perform check if this value already exists in the list\n     *           (04) add to the list based on type\n     *           (05) clear input value\n     * @param type can either be ingredient or allergen\n     */\n    const addIngredientData = (type) => {\n        //01\n        let input = document.getElementById(type),\n            val = input.value;\n        //02\n        if (!val) return alert('provide value')\n        //03 + 04\n        if (type === 'allergen_input') {\n            if (allergenList.includes(val)) return alert('ist schon drin')\n            addAllergen([...allergenList, val])\n        } else {\n            if (ingredientList.includes(val)) return alert('ist schon drin')\n            addIngredient([...ingredientList, val])\n        }\n        //05\n        input.value = \"\";\n    }\n    /**\n     * @function (01) differentiate between types\n     *           (02) filter the element by index and remove it\n     * @param e\n     * @param type\n     * @param index\n     */\n    const removeIngredientData = (e, type, index) => {\n        addIngredient(prevIngredientList => (\n            prevIngredientList.filter((val, i) => i !== index)\n        ));\n    }\n\n    //todo autocomplete ingredients, allergen - if new value occurs add to the list and make it accessible to other people -> im Backend dann schauen ob es das ding schon gibt wenn nicht erstellen und verlinken\n\n    /**\n     *\n     * @param type\n     * @param val\n     */\n    const addExtraOffer = (desc, price) => {\n\n    }\n\n    /**\n     * @function (01) hide the add button\n     *           (02) display the uploaded image as background image\n     *           (03) show the delete button\n     * @param e\n     */\n    const onChangeMenuImg = (e) => {\n        if (!e.target.files[0]) return\n        document.getElementById('add_menu_img_icon').style.display = 'none'\n        document.getElementById('menu_img_placeholder').style.backgroundImage = \"url('\"+URL.createObjectURL(e.target.files[0])+\"')\"\n        document.getElementById('remove_menu_img_icon').style.display = 'flex';\n    };\n    /**\n     * @function (01) do not trigger the fiel select\n     */\n    const deleteMenuImg = (e) => {\n        e.currentTarget.style.display = \"none\"\n        document.getElementById('add_menu_img_icon').style.display = 'inline'\n        document.getElementById('menu_img_placeholder').style.backgroundImage = \"none\"\n    }\n\n    return (\n        <div className=\"menu_dark_bg\" onClick={hideMenuAddView}>\n            <div className=\"menu_input_wrapper\">\n                <div className=\"menu_input_hide\" onClick={(e) => {hideMenuAddView(e, true)}}>X</div>\n                <form className=\"menu_create_form\" onSubmit={addMenu}>\n\n                    <input id=\"menu_img_create\" className=\"\" type=\"file\" name=\"menu_img\" onChange={onChangeMenuImg}/>\n                    <label id=\"menu_img_placeholder\" for=\"menu_img_create\">\n                        <div id=\"add_menu_img_icon\">Bild hochladen</div>\n                        <div id=\"remove_menu_img_icon\" onClick={deleteMenuImg}>-</div>\n                    </label>\n                    <div id=\"remove_menu_img_icon\" onClick={deleteMenuImg}>-</div>\n\n                    <div className=\"menu_main_create_wrapper\">\n                        <input className=\"menu_create_input\" type=\"text\" name=\"menu_name\" placeholder=\"Name\" required/>\n                        <textarea className=\"menu_create_input menu_create_field\" type=\"text\" name=\"menu_desc\" placeholder=\"Beschreibung\" required/>\n                    </div>\n\n                    <div className=\"menu_separator\"></div>\n\n                    <div className=\"menu_sub_container_desc\">Zutaten</div>\n                    <div className=\"menu_sub_container_desc\">Allergene</div>\n\n                    <div className=\"menu_sub_container\">\n                        <input id=\"ingredient_input\" className=\"menu_create_input menu_sub_create_input\" type=\"text\" placeholder=\"Zutat\" />\n                        <div className=\"sub_container_add\" onClick={() => addIngredientData('ingredient_input')}>Hinzufügen</div>\n                        {ingredientList.length > 0 &&\n                            ingredientList.map((elem, i) => {\n                            return <div className=\"ingredient_elem\" onClick={(e) => removeIngredientData(e, '', i)}>{elem}</div>\n                        })\n                        }\n                    </div>\n                    <div className=\"menu_sub_container\">\n                        <input id=\"allergen_input\" className=\"menu_create_input menu_sub_create_input\" type=\"text\" placeholder=\"Allergen\" />\n                        <div className=\"sub_container_add\" onClick={() => addIngredientData('allergen_input')}>Hinzufügen</div>\n                        {allergenList.length > 0 &&\n                            allergenList.map((elem, i) => {\n                            return <div className=\"ingredient_elem\">\n                                <div>{elem}</div>\n                                <div className=\"remove_ingredient_elem\" onClick={(e) => removeIngredientData(e, '', i)}>-</div>\n                            </div>\n                        })\n                        }\n                    </div>\n\n                    {/*\n\n\n                        <input type=\"text\" name=\"menu_desc\" placeholder=\"Vegan\"/>\n                        <input type=\"text\" name=\"menu_desc\" placeholder=\"Fleisch -> öffnet dann gar grad\"/>\n                        <input type=\"text\" name=\"menu_desc\" placeholder=\"Schärfegrad bestimmen\"/>\n\n\n                        <div className=\"menu_sub_container\">\n                        <input placeholder=\"Extras Liste mit Preis\"/>\n                        <input type=\"text\" placeholder=\"Beschreibung\" />\n                        <input type=\"text\" placeholder=\"€\" />\n                        <input type=\"text\" placeholder=\"ct.\" />\n                        <div onClick={addExtraOffer()}></div>\n                    {extraList.map((elem, i) => {\n                        return <span>elem</span>\n                    })}\n                        </div>\n\n                        <input placeholder=\"Angebot inkl Zeitraum und Preis\"/>\n                        <input placeholder=\"€\"/>\n                        <input placeholder=\"ct.\"/>\n\n                        <button className=\"category_submit\">Hinzufügen</button>\n                    */}\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default MenuCreate;\n"]},"metadata":{},"sourceType":"module"}