{"ast":null,"code":"import _objectDestructuringEmpty from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";import _asyncToGenerator from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/regenerator/index.js\";import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{validateInviteLink,submitInvite}from'../services/verify.service';var initialState={};export var validateLinksAsync=createAsyncThunk('invite/validate',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(hash){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return validateInviteLink(hash);case 2:response=_context.sent;return _context.abrupt(\"return\",response);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());export var submitUserAsync=createAsyncThunk('invite/submit',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userData){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return submitInvite(userData);case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());export var verifySlice=createSlice({name:'verify',initialState:initialState,reducers:{},extraReducers:function extraReducers(builder){builder.addCase(validateLinksAsync.fulfilled,function(state,action){console.log(action.payload);}).addCase(submitUserAsync.fulfilled,function(state,action){});}});_objectDestructuringEmpty(verifySlice.actions);export{};export default verifySlice.reducer;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/verifySlice.js"],"names":["createAsyncThunk","createSlice","validateInviteLink","submitInvite","initialState","validateLinksAsync","hash","response","submitUserAsync","userData","verifySlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","console","log","payload","actions","reducer"],"mappings":"wjBAAA,OAASA,gBAAT,CAA2BC,WAA3B,KAA8C,kBAA9C,CACA,OAASC,kBAAT,CAA6BC,YAA7B,KAAiD,4BAAjD,CAEA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CAGA,MAAO,IAAMC,CAAAA,kBAAkB,CAAGL,gBAAgB,CAC9C,iBAD8C,0FAE9C,iBAAOM,IAAP,qJAC2BJ,CAAAA,kBAAkB,CAACI,IAAD,CAD7C,QACUC,QADV,+CAEWA,QAFX,wDAF8C,+DAA3C,CAQP,MAAO,IAAMC,CAAAA,eAAe,CAAGR,gBAAgB,CAC3C,eAD2C,2FAE3C,kBAAOS,QAAP,6IACiBN,CAAAA,YAAY,CAACM,QAAD,CAD7B,iHAF2C,iEAAxC,CAOP,MAAO,IAAMC,CAAAA,WAAW,CAAGT,WAAW,CAAC,CACnCU,IAAI,CAAE,QAD6B,CAEnCP,YAAY,CAAZA,YAFmC,CAGnCQ,QAAQ,CAAE,EAHyB,CAKnCC,aAAa,CAAE,uBAACC,OAAD,CAAa,CACxBA,OAAO,CACFC,OADL,CACaV,kBAAkB,CAACW,SADhC,CAC2C,SAACC,KAAD,CAAQC,MAAR,CAAmB,CACtDC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB,EACH,CAHL,EAIKN,OAJL,CAIaP,eAAe,CAACQ,SAJ7B,CAIwC,SAACC,KAAD,CAAQC,MAAR,CAAmB,CACtD,CALL,EAMH,CAZkC,CAAD,CAA/B,CAeA,0BAAWR,WAAW,CAACY,OAAvB,E,SAEP,cAAeZ,CAAAA,WAAW,CAACa,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { validateInviteLink, submitInvite } from '../services/verify.service';\n\nconst initialState = {\n};\n\nexport const validateLinksAsync = createAsyncThunk(\n    'invite/validate',\n    async (hash) => {\n        const response = await validateInviteLink(hash);\n        return response;\n    }\n);\n\nexport const submitUserAsync = createAsyncThunk(\n    'invite/submit',\n    async (userData) => {\n        return await submitInvite(userData);\n    }\n);\n\nexport const verifySlice = createSlice({\n    name: 'verify',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(validateLinksAsync.fulfilled, (state, action) => {\n                console.log(action.payload)\n            })\n            .addCase(submitUserAsync.fulfilled, (state, action) => {\n            })\n    },\n});\n\nexport const {} = verifySlice.actions;\n\nexport default verifySlice.reducer;\n"]},"metadata":{},"sourceType":"module"}