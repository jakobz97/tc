{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/main/coder/reviews/Reviews.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Navbar from \"../../general/navbar/Navbar\";\nimport ReviewListItem from \"../../coder/reviews/ReviewListItem\";\nimport ReviewEditor from \"../../coder/reviews/ReviewEditor\";\nimport '../../../../styles/shared/main.css';\nimport '../../../../styles/main/coder/reviews/reviews.css';\nimport \"../../../../slice/authSlice\";\nimport { getUploadsAsync, selectCreatedUploads } from \"../../../../slice/reviewSlice\";\nimport { history } from \"../../../../helpers/history\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reviews = () => {\n  _s();\n\n  const [visibleReview, setVisibleReview] = useState(false);\n  const dispatch = useDispatch();\n  const uploads = useSelector(selectCreatedUploads); //todo security checks\n\n  /**\n   * @function (01) load all documents which were uploaded by the coder + show loading spinner\n   *           (02) hide loading spinner once the load was finished\n   */\n\n  useEffect(() => {\n    //01\n    dispatch(getUploadsAsync()).then(res => {//02\n    }).catch(err => {\n      console.log('err', err);\n    });\n  }, []);\n  /**\n   * @function (01)\n   */\n\n  const showExtReview = id => {\n    alert(id); //open an overview of the student proposals\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center_container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_center_content_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_outer_content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main_outer_heading\",\n          children: \"Student reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_center_content\",\n        children: [uploads.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"review_list_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"review_list_item\",\n            children: \"moin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }, this), uploads.map((upload, index) => /*#__PURE__*/_jsxDEV(ReviewListItem, {\n            data: upload,\n            index: index,\n            extView: showExtReview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 69\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/coder/editor/\",\n          className: \"empty_review_msg\",\n          children: \"Du hast noch nichts hochgeladen - Fange jetzt damit an\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }, this), visibleReview && /*#__PURE__*/_jsxDEV(ReviewEditor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_outer_content right_bound_outer_content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reviews, \"OkdASTz9ZCRastzdllL0qhJ+NfE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Reviews;\nexport default Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/main/coder/reviews/Reviews.js"],"names":["React","useState","useRef","useEffect","Navbar","ReviewListItem","ReviewEditor","getUploadsAsync","selectCreatedUploads","history","useDispatch","useSelector","Link","Reviews","visibleReview","setVisibleReview","dispatch","uploads","then","res","catch","err","console","log","showExtReview","id","alert","length","map","upload","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AAEA,OAAO,oCAAP;AACA,OAAO,mDAAP;AAEA,OAAe,6BAAf;AACA,SAAQC,eAAR,EAAyBC,oBAAzB,QAAqD,+BAArD;AAEA,SAAQC,OAAR,QAAsB,6BAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMe,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,OAAO,GAAGN,WAAW,CAACH,oBAAD,CAA3B,CALkB,CAOlB;;AAEA;AACJ;AACA;AACA;;AACIL,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAa,IAAAA,QAAQ,CAACT,eAAe,EAAhB,CAAR,CACKW,IADL,CACWC,GAAD,IAAS,CACX;AACH,KAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AACH,KANL;AAOH,GATQ,EASN,EATM,CAAT;AAWA;AACJ;AACA;;AACI,QAAMG,aAAa,GAAIC,EAAD,IAAQ;AAC1BC,IAAAA,KAAK,CAACD,EAAD,CAAL,CAD0B,CAE1B;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,mBAEYR,OAAO,CAACU,MAAR,GAAiB,CAAjB,gBACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKV,OAAO,CAACW,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBAAmB,QAAC,cAAD;AAAgB,YAAA,IAAI,EAAID,MAAxB;AAAgC,YAAA,KAAK,EAAIC,KAAzC;AAAgD,YAAA,OAAO,EAAIN;AAA3D;AAAA;AAAA;AAAA;AAAA,kBAA/B,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,gBAMI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,gBAAV;AAA4B,UAAA,SAAS,EAAC,kBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARhB,EAWUV,aAAa,iBAAI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAX3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAiBI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAxDD;;GAAMD,O;UAIeH,W,EACDC,W;;;KALdE,O;AA0DN,eAAeA,OAAf","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\n\nimport Navbar from \"../../general/navbar/Navbar\";\nimport ReviewListItem from \"../../coder/reviews/ReviewListItem\";\nimport ReviewEditor from \"../../coder/reviews/ReviewEditor\";\n\nimport '../../../../styles/shared/main.css';\nimport '../../../../styles/main/coder/reviews/reviews.css';\n\nimport {} from \"../../../../slice/authSlice\";\nimport {getUploadsAsync, selectCreatedUploads,} from \"../../../../slice/reviewSlice\";\n\nimport {history} from \"../../../../helpers/history\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {Link} from \"react-router-dom\";\n\nconst Reviews = () => {\n\n    const [visibleReview, setVisibleReview] = useState(false);\n\n    const dispatch = useDispatch();\n    const uploads = useSelector(selectCreatedUploads)\n\n    //todo security checks\n\n    /**\n     * @function (01) load all documents which were uploaded by the coder + show loading spinner\n     *           (02) hide loading spinner once the load was finished\n     */\n    useEffect(() => {\n        //01\n        dispatch(getUploadsAsync())\n            .then((res) => {\n                //02\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }, [])\n\n    /**\n     * @function (01)\n     */\n    const showExtReview = (id) => {\n        alert(id)\n        //open an overview of the student proposals\n    }\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Student reviews</div>\n                </div>\n                <div className=\"main_center_content\">\n                        {\n                            uploads.length > 0 ? (\n                                <div className=\"review_list_container\">\n                                    <div className=\"review_list_item\">moin</div>\n                                    {uploads.map((upload, index) => <ReviewListItem data = {upload} index = {index} extView = {showExtReview}/>)}\n                                </div>\n                            ) : (\n                                <Link to={\"/coder/editor/\"} className=\"empty_review_msg\">Du hast noch nichts hochgeladen - Fange jetzt damit an</Link>\n                            )\n                        }\n                        { visibleReview && <ReviewEditor /> }\n                </div>\n                <div className=\"main_outer_content right_bound_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Reviews;\n"]},"metadata":{},"sourceType":"module"}