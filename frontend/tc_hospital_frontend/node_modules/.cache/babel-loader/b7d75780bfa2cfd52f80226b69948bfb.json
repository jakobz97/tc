{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/analytics/DetailedAnalytics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport '../../../styles/shared/editor/editor.css';\nimport '../../../styles/shared/fadein.css';\nimport { proposeCodeAsync } from \"../../../slice/reviewSlice\";\nimport { useDispatch } from \"react-redux\";\nimport AnalyticsCodeItem from \"../analytics/AnalyticsCodeItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailedAnalytics = _ref => {\n  _s();\n\n  let {\n    data,\n    close\n  } = _ref;\n  const [loadedTxt, setLoadedTxt] = useState(false);\n  const [studentCodeData, setStudentCodeData] = useState([]);\n  const [coderCodeData, setCoderCodeData] = useState([]);\n  const dispatch = useDispatch();\n  /**\n   * @function (01) get the dark background, the content wrapper and the inputs\n   *           (02) increase the dark background opacity\n   *           (03) fade up the content wrapper\n   *           =============\n   *           (04) ensure that the code display has the same length as the overflow text\n   *           (05) ensure that the empty codes text is centered\n   *           (06) process the provided codes to display them\n   */\n\n  useEffect(() => {\n    //01\n    let bg = document.querySelector('.menu_dark_bg'),\n        content = document.querySelector('.create_input_wrapper'); //02\n\n    bg.style.cssText = \"opacity: 100%\"; //03\n\n    content.style.marginTop = \"0\"; //04\n\n    document.getElementsByClassName('code_input')[0].innerHTML = data.review.txt; //05\n\n    setLoadedTxt(true); //04\n\n    document.getElementById('internal_left_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight + 'px';\n    document.getElementById('internal_right_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight + 'px';\n    document.getElementById('internal_code_separator').style.height = document.getElementsByClassName('code_input')[0].scrollHeight + 'px'; //05\n\n    document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight + 'px'; //06\n\n    displayCodes();\n  }, []);\n  /**\n   * @function (01) get the background and content\n   *           (02) return if user clicked on the content\n   *           (03) user clicked outside of content - hide\n   *           (04) after timeout set state again to hidden\n   */\n\n  const hideView = (e, forced) => {\n    //01\n    let bg = document.querySelector('.menu_dark_bg'),\n        content = document.querySelector('.create_input_wrapper'); //02\n\n    if (!forced && content.contains(e.target)) return; //03\n\n    bg.style.cssText = \"opacity: 0%\";\n    content.style.marginTop = \"150vh\"; //04\n\n    setTimeout(() => close(), 350);\n  };\n  /**\n   * @function (01) define the target by choosing the complementary of the scrolled div\n   *           (02) assign scroll toÃ¼ and scroll left to the target based on the event scrolled position\n   */\n\n\n  const syncScroll = (e, origin) => {\n    //01\n    const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]; //02\n\n    target.scrollTop = e.currentTarget.scrollTop;\n    target.scrollLeft = e.currentTarget.scrollLeft;\n  }; //====================================================================\n\n  /**\n   * @function (01) transform the data provided into state data and enrich with type\n   *           (02) highlight those codes which the student but not the coder has\n   *           (03) merge into state array\n   */\n\n\n  const displayCodes = () => {\n    //01\n    let studentCodes = data.studentAnswer.codes.map(code => ({ ...code,\n      type: 'student'\n    }));\n    let coderCodes = data.review.initialCodes.map(code => ({ ...code,\n      type: 'coder'\n    })); //02\n\n    studentCodes.forEach((code, i) => {\n      if (!data.coderCoverage.intersect.includes(code.icdCode)) studentCodes[i]['proposalEligible'] = true;\n    }); //03\n\n    setStudentCodeData(studentCodes);\n    setCoderCodeData(coderCodes);\n  };\n  /**\n   * @function (01) double check that this code is not included by the coder\n   *           (02) form object of all relevant ids\n   *           (03) dispatch the code to the backend\n   */\n\n\n  const proposeCode = code => {\n    //01\n    if (data.coderCoverage.intersect.includes(code.icdCode)) return alert('coder has already allocated this code'); //02\n\n    const codeProposal = {\n      reviewId: data.review._id,\n      codeProposal: code\n    }; //03\n\n    dispatch(proposeCodeAsync(codeProposal)).then(res => {\n      console.log(res.payload);\n      alert('proposed this to the coder');\n    }).catch(err => {\n      console.log('err', err);\n    });\n  }; //====================================================================\n\n  /**\n   * @function (01) get all selects and positions\n   *           (02) if only cursor change takes place only hide the tooltip\n   *           (03) reposition tooltip\n   *           (04) set selected text state\n   */\n\n\n  const selector = e => {\n    /*\n    //01\n    let select = window.getSelection(),\n        selectRange = select.getRangeAt(0),\n        selectPos = selectRange.getBoundingClientRect(),\n        codeInput = document.getElementsByClassName('code_input')[0],\n        codeInputPos = codeInput.getBoundingClientRect(),\n        tooltip = document.getElementById('tooltip_editor_wrapper');\n    //02\n    if (selectPos.width < 1) return tooltip.style.display = \"none\";\n    //03\n    tooltip.style.display = \"inline\";\n    tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n    tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n    //04\n    let xpath = fromRange(selectRange, codeInput)\n     setSelTxt({...selTxt,  ...{\n            val: selectRange.toString(),\n            start: xpath.startOffset,\n            end: xpath.endOffset,\n            top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5,\n            id: uuidv4()\n        },\n    })\n     */\n  };\n  /**\n   * @function (01)\n   *           (02)\n   * @param start\n   * @param end\n   */\n\n\n  function setSelectionRange(start, end) {\n    let el = document.getElementsByClassName('code_input')[0];\n    var range = document.createRange();\n    range.selectNodeContents(el);\n    var textNodes = getTextNodesIn(el);\n    var foundStart = false;\n    var charCount = 0,\n        endCharCount;\n\n    for (var i = 0, textNode; textNode = textNodes[i++];) {\n      endCharCount = charCount + textNode.length;\n\n      if (!foundStart && start >= charCount && (start < endCharCount || start == endCharCount && i <= textNodes.length)) {\n        range.setStart(textNode, start - charCount);\n        foundStart = true;\n      }\n\n      if (foundStart && end <= endCharCount) {\n        range.setEnd(textNode, end - charCount);\n        break;\n      }\n\n      charCount = endCharCount;\n    }\n\n    var sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range); //Helper functions\n\n    function getTextNodesIn(node) {\n      var textNodes = [];\n\n      if (node.nodeType === 3) {\n        textNodes.push(node);\n      } else {\n        var children = node.childNodes;\n\n        for (var i = 0, len = children.length; i < len; ++i) {\n          textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n        }\n      }\n\n      return textNodes;\n    }\n  } //====================================================================\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu_dark_bg\",\n    onClick: hideView,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_input_wrapper enlarged_create_input_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create_input_hide\",\n        onClick: e => {\n          hideView(e, true);\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code_input enlarged_code_input\",\n        onScroll: e => syncScroll(e, 'input'),\n        children: loadedTxt && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"tooltip_editor_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tooltip_btn\",\n            children: \"Add code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code_display enlarged_code_display split_code_display\",\n        onScroll: e => syncScroll(e, 'display'),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"internal_left_code_display\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"internal_code_desc\",\n            children: \"Coder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), coderCodeData.length > 0 ? coderCodeData.map((code, i) => /*#__PURE__*/_jsxDEV(AnalyticsCodeItem, {\n            code: code,\n            proposeCode: proposeCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 64\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty_editor\",\n            children: \"Codes werden geladen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"internal_code_separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"internal_right_code_display\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"internal_code_desc\",\n            children: \"You\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), studentCodeData.length > 0 ? studentCodeData.map((code, i) => /*#__PURE__*/_jsxDEV(AnalyticsCodeItem, {\n            code: code,\n            proposeCode: proposeCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 66\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty_editor\",\n            children: \"Codes werden geladen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetailedAnalytics, \"vSWgxR0e9BTBgDOs0KL7FiVhmOw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DetailedAnalytics;\nexport default DetailedAnalytics;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedAnalytics\");","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/analytics/DetailedAnalytics.js"],"names":["React","useEffect","useState","proposeCodeAsync","useDispatch","AnalyticsCodeItem","DetailedAnalytics","data","close","loadedTxt","setLoadedTxt","studentCodeData","setStudentCodeData","coderCodeData","setCoderCodeData","dispatch","bg","document","querySelector","content","style","cssText","marginTop","getElementsByClassName","innerHTML","review","txt","getElementById","height","scrollHeight","offsetHeight","displayCodes","hideView","e","forced","contains","target","setTimeout","syncScroll","origin","scrollTop","currentTarget","scrollLeft","studentCodes","studentAnswer","codes","map","code","type","coderCodes","initialCodes","forEach","i","coderCoverage","intersect","includes","icdCode","proposeCode","alert","codeProposal","reviewId","_id","then","res","console","log","payload","catch","err","selector","setSelectionRange","start","end","el","range","createRange","selectNodeContents","textNodes","getTextNodesIn","foundStart","charCount","endCharCount","textNode","length","setStart","setEnd","sel","window","getSelection","removeAllRanges","addRange","node","nodeType","push","children","childNodes","len","apply"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport '../../../styles/shared/editor/editor.css';\nimport '../../../styles/shared/fadein.css';\n\nimport {proposeCodeAsync} from \"../../../slice/reviewSlice\";\nimport {useDispatch} from \"react-redux\";\n\nimport AnalyticsCodeItem from \"../analytics/AnalyticsCodeItem\";\n\nconst DetailedAnalytics = ({ data, close }) => {\n\n    const [loadedTxt, setLoadedTxt] = useState(false);\n    const [studentCodeData, setStudentCodeData] = useState([]);\n    const [coderCodeData, setCoderCodeData] = useState([]);\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01) get the dark background, the content wrapper and the inputs\n     *           (02) increase the dark background opacity\n     *           (03) fade up the content wrapper\n     *           =============\n     *           (04) ensure that the code display has the same length as the overflow text\n     *           (05) ensure that the empty codes text is centered\n     *           (06) process the provided codes to display them\n     */\n    useEffect(() => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        bg.style.cssText = \"opacity: 100%\";\n        //03\n        content.style.marginTop = \"0\";\n        //04\n        document.getElementsByClassName('code_input')[0].innerHTML = data.review.txt;\n        //05\n        setLoadedTxt(true);\n        //04\n        document.getElementById('internal_left_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        document.getElementById('internal_right_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        document.getElementById('internal_code_separator').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        //05\n        document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight+'px'\n        //06\n        displayCodes();\n    }, [])\n\n    /**\n     * @function (01) get the background and content\n     *           (02) return if user clicked on the content\n     *           (03) user clicked outside of content - hide\n     *           (04) after timeout set state again to hidden\n     */\n    const hideView = (e, forced) => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        if (!forced && content.contains(e.target)) return;\n        //03\n        bg.style.cssText = \"opacity: 0%\";\n        content.style.marginTop = \"150vh\";\n        //04\n        setTimeout(() => close(), 350)\n    };\n\n    /**\n     * @function (01) define the target by choosing the complementary of the scrolled div\n     *           (02) assign scroll toÃ¼ and scroll left to the target based on the event scrolled position\n     */\n    const syncScroll = (e, origin) => {\n        //01\n        const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]\n        //02\n        target.scrollTop = e.currentTarget.scrollTop;\n        target.scrollLeft = e.currentTarget.scrollLeft;\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) transform the data provided into state data and enrich with type\n     *           (02) highlight those codes which the student but not the coder has\n     *           (03) merge into state array\n     */\n    const displayCodes = () => {\n        //01\n        let studentCodes = data.studentAnswer.codes.map(code => ({...code, type: 'student'}))\n        let coderCodes = data.review.initialCodes.map(code => ({...code, type: 'coder'}))\n        //02\n        studentCodes.forEach((code, i) => {\n            if (!data.coderCoverage.intersect.includes(code.icdCode)) studentCodes[i]['proposalEligible'] = true;\n        })\n        //03\n        setStudentCodeData(studentCodes)\n        setCoderCodeData(coderCodes)\n    }\n\n    /**\n     * @function (01) double check that this code is not included by the coder\n     *           (02) form object of all relevant ids\n     *           (03) dispatch the code to the backend\n     */\n    const proposeCode = (code) => {\n        //01\n        if (data.coderCoverage.intersect.includes(code.icdCode)) return alert('coder has already allocated this code')\n        //02\n        const codeProposal = {\n            reviewId: data.review._id,\n            codeProposal: code\n        }\n        //03\n        dispatch(proposeCodeAsync(codeProposal))\n            .then((res) => {\n                console.log(res.payload)\n                alert('proposed this to the coder')\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */\n    const selector = (e) => {\n        /*\n        //01\n        let select = window.getSelection(),\n            selectRange = select.getRangeAt(0),\n            selectPos = selectRange.getBoundingClientRect(),\n            codeInput = document.getElementsByClassName('code_input')[0],\n            codeInputPos = codeInput.getBoundingClientRect(),\n            tooltip = document.getElementById('tooltip_editor_wrapper');\n        //02\n        if (selectPos.width < 1) return tooltip.style.display = \"none\";\n        //03\n        tooltip.style.display = \"inline\";\n        tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n        tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n        //04\n        let xpath = fromRange(selectRange, codeInput)\n\n        setSelTxt({...selTxt,  ...{\n                val: selectRange.toString(),\n                start: xpath.startOffset,\n                end: xpath.endOffset,\n                top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5,\n                id: uuidv4()\n            },\n        })\n         */\n    }\n\n    /**\n     * @function (01)\n     *           (02)\n     * @param start\n     * @param end\n     */\n    function setSelectionRange(start, end) {\n\n        let el = document.getElementsByClassName('code_input')[0];\n\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var textNodes = getTextNodesIn(el);\n        var foundStart = false;\n        var charCount = 0, endCharCount;\n\n        for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n            endCharCount = charCount + textNode.length;\n            if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {\n                range.setStart(textNode, start - charCount);\n                foundStart = true;\n            }\n            if (foundStart && end <= endCharCount) {\n                range.setEnd(textNode, end - charCount);\n                break;\n            }\n            charCount = endCharCount;\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n        //Helper functions\n\n        function getTextNodesIn(node) {\n            var textNodes = [];\n            if (node.nodeType === 3) {\n                textNodes.push(node);\n            } else {\n                var children = node.childNodes;\n                for (var i = 0, len = children.length; i < len; ++i) {\n                    textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n                }\n            }\n            return textNodes;\n        }\n    }\n\n    //====================================================================\n\n    return (\n        <div className=\"menu_dark_bg\" onClick={hideView}>\n            <div className=\"create_input_wrapper enlarged_create_input_wrapper\">\n                <div className=\"create_input_hide\" onClick={(e) => {hideView(e, true)}}>X</div>\n                <div className=\"code_input enlarged_code_input\" onScroll={(e) => syncScroll(e, 'input')}>\n                    {loadedTxt &&\n                        <div id=\"tooltip_editor_wrapper\">\n                            <div className=\"tooltip_btn\">Add code</div>\n                        </div>\n                    }\n                </div>\n                <div className=\"code_display enlarged_code_display split_code_display\" onScroll={(e) => syncScroll(e, 'display')}>\n                    <div id=\"internal_left_code_display\">\n                        <div className=\"internal_code_desc\">Coder</div>\n                        {\n                            coderCodeData.length > 0 ? (\n                                coderCodeData.map((code, i) => <AnalyticsCodeItem code = {code} proposeCode = {proposeCode}/>)\n                            ) : (\n                                <div className=\"empty_editor\">Codes werden geladen</div>\n                            )\n                        }\n                    </div>\n                    <div id=\"internal_code_separator\"></div>\n                    <div id=\"internal_right_code_display\">\n                        <div className=\"internal_code_desc\">You</div>\n                        {\n                            studentCodeData.length > 0 ? (\n                                studentCodeData.map((code, i) => <AnalyticsCodeItem code = {code} proposeCode = {proposeCode}/>)\n                            ) : (\n                                <div className=\"empty_editor\">Codes werden geladen</div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DetailedAnalytics;\n"]},"metadata":{},"sourceType":"module"}