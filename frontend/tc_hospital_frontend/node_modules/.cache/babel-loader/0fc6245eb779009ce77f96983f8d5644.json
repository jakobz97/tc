{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/student/analytics/Analytics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { history } from \"../../../helpers/history\";\nimport { selectIsLoggedIn, selectUserType } from \"../../../slice/authSlice\";\nimport { selectUserData, getUserAsync } from \"../../../slice/userSlice\";\nimport { getReviewAnalyticsAsync } from \"../../../slice/reviewSlice\";\nimport '../../../styles/shared/main.css';\nimport '../../../styles/shared/analytics/analytics.css';\nimport Navbar from \"../../general/navbar/Navbar\";\nimport AnalyticsListItem from \"../../student/analytics/AnalyticsListItem\";\nimport DetailedAnalytics from \"../../student/analytics/DetailedAnalytics\";\nimport GeneralAnalytics from \"../../student/analytics/GeneralAnalytics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Analytics = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const loggedIn = useSelector(selectIsLoggedIn);\n  const userType = useSelector(selectUserType);\n  const userData = useSelector(selectUserData);\n\n  if (!loggedIn || userType !== 'student') {\n    history.push(\"/login\");\n    window.location.reload();\n  }\n\n  const [reviewDataList, setReviewDataList] = useState([]);\n  const [visibleDetailedAnalytics, setVisibleDetailedAnalytics] = useState(false);\n  /**\n   * @function (00) if user data has been loaded check if any reviews were already made - if true load the reviewed uploads\n   *           (01) load answered uploads for this user - if user has Â´made any reviews so far\n   *           (02) hide the loading sign once fulfilled\n   */\n\n  useEffect(() => {\n    //00\n    if (Object.keys(userData).length > 0) {\n      getAnalytics(userData.answeredUploads);\n      return;\n    } //01\n\n\n    dispatch(getUserAsync()).then(res => {\n      getAnalytics(res.payload.userData.answeredUploads);\n    }).catch(err => {\n      console.log('err', err);\n    });\n  }, []); // Helper functions ===========================\n\n  /**\n   * @function (01) check if user has made any revies so far\n   *           (02) load the reviews from the backend\n   * @param reviewIds array of reviews [0] reviewId [1] reviewAnswerId [2] reviewAnswerSubId\n   */\n\n  const getAnalytics = reviewIds => {\n    //01\n    if (!reviewIds || reviewIds.length === 0) console.log('No replies so far'); //02\n\n    dispatch(getReviewAnalyticsAsync(JSON.stringify(userData.answeredUploads))).then(res => {//setReviewDataList(res.payload.reviewAnalyticsData)\n    }).catch(err => {\n      console.log('error', err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center_container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_center_content_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_outer_content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main_outer_heading\",\n          children: \"Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_center_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analytics_review_wrapper\",\n          children: reviewDataList.length > 0 ? reviewDataList.map((elem, index) => /*#__PURE__*/_jsxDEV(AnalyticsListItem, {\n            data: elem,\n            index: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 73\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no_analytics_txt\",\n            children: \"Tackle reviews - No answers mean no analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GeneralAnalytics, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), visibleDetailedAnalytics && /*#__PURE__*/_jsxDEV(DetailedAnalytics, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_outer_content right_bound_outer_content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Analytics, \"xy80YnoxRMHnWQBSf7V2eQ0zxbk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Analytics;\nexport default Analytics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/student/analytics/Analytics.js"],"names":["React","useState","useRef","useEffect","useDispatch","useSelector","history","selectIsLoggedIn","selectUserType","selectUserData","getUserAsync","getReviewAnalyticsAsync","Navbar","AnalyticsListItem","DetailedAnalytics","GeneralAnalytics","Analytics","dispatch","loggedIn","userType","userData","push","window","location","reload","reviewDataList","setReviewDataList","visibleDetailedAnalytics","setVisibleDetailedAnalytics","Object","keys","length","getAnalytics","answeredUploads","then","res","payload","catch","err","console","log","reviewIds","JSON","stringify","map","elem","index"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nimport {selectIsLoggedIn, selectUserType} from \"../../../slice/authSlice\";\nimport {selectUserData, getUserAsync} from \"../../../slice/userSlice\";\nimport {getReviewAnalyticsAsync} from \"../../../slice/reviewSlice\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/shared/analytics/analytics.css';\n\nimport Navbar from \"../../general/navbar/Navbar\";\nimport AnalyticsListItem from \"../../student/analytics/AnalyticsListItem\";\nimport DetailedAnalytics from \"../../student/analytics/DetailedAnalytics\";\nimport GeneralAnalytics from \"../../student/analytics/GeneralAnalytics\";\n\nconst Analytics = () => {\n\n    const dispatch = useDispatch();\n\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userType = useSelector(selectUserType);\n    const userData = useSelector(selectUserData);\n\n    if (!loggedIn || userType !== 'student') {\n        history.push(\"/login\");\n        window.location.reload();\n    }\n\n    const [reviewDataList, setReviewDataList] = useState([])\n    const [visibleDetailedAnalytics, setVisibleDetailedAnalytics] = useState(false)\n\n    /**\n     * @function (00) if user data has been loaded check if any reviews were already made - if true load the reviewed uploads\n     *           (01) load answered uploads for this user - if user has Â´made any reviews so far\n     *           (02) hide the loading sign once fulfilled\n     */\n    useEffect(() => {\n        //00\n        if (Object.keys(userData).length > 0) {\n            getAnalytics(userData.answeredUploads);\n            return;\n        }\n        //01\n        dispatch(getUserAsync())\n            .then((res) => {\n                getAnalytics(res.payload.userData.answeredUploads)\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }, [])\n\n    // Helper functions ===========================\n\n    /**\n     * @function (01) check if user has made any revies so far\n     *           (02) load the reviews from the backend\n     * @param reviewIds array of reviews [0] reviewId [1] reviewAnswerId [2] reviewAnswerSubId\n     */\n    const getAnalytics = (reviewIds) => {\n        //01\n        if (!reviewIds || reviewIds.length === 0)  console.log('No replies so far')\n        //02\n        dispatch(getReviewAnalyticsAsync(JSON.stringify(userData.answeredUploads)))\n            .then((res) => {\n                //setReviewDataList(res.payload.reviewAnalyticsData)\n            })\n            .catch((err) => {\n                console.log('error', err)\n            })\n    }\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Analytics</div>\n                </div>\n\n                <div className=\"main_center_content\">\n                    <div className=\"analytics_review_wrapper\">\n                    {\n                        reviewDataList.length > 0 ? (\n                                    reviewDataList.map((elem, index) => <AnalyticsListItem data = {elem} index = {index}/>)\n                        ) : (\n                            <div className=\"no_analytics_txt\">Tackle reviews - No answers mean no analytics</div>\n                        )\n                    }\n                    </div>\n                    <GeneralAnalytics />\n                    { visibleDetailedAnalytics && <DetailedAnalytics /> }\n                </div>\n\n                <div className=\"main_outer_content right_bound_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Analytics;\n"]},"metadata":{},"sourceType":"module"}