{"ast":null,"code":"import axios from \"axios\";\nimport auth_header from \"./auth_header\";\nexport const codeCompletion = async data => {\n  return axios.post('http://localhost:3600/code/', data, {\n    headers: await auth_header()\n  }).then(response => {\n    return response.data;\n  });\n};\nexport const uploadCode = async data => {\n  return axios.post('http://localhost:3600/coder/upload/', data, {\n    headers: await auth_header()\n  }).then(response => {\n    return response.data;\n  });\n};\nexport const getCreatedUploads = async () => {\n  return axios.get('http://localhost:3600/coder/upload/', {\n    headers: await auth_header()\n  }).then(response => {\n    return response.data;\n  });\n};\nexport const getSuitableUploads = async searchOffset => {\n  return axios.post('http://localhost:3600/student/tasks/', searchOffset, {\n    headers: await auth_header()\n  }).then(response => {\n    return response.data;\n  });\n};\nexport const compareCodes = async studentCodeData => {\n  return console.log(studentCodeData);\n  return axios.post('http://localhost:3600/student/tasks/', studentCodeData, {\n    headers: await auth_header()\n  }).then(response => {\n    return response.data;\n  });\n};","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/services/review.service.js"],"names":["axios","auth_header","codeCompletion","data","post","headers","then","response","uploadCode","getCreatedUploads","get","getSuitableUploads","searchOffset","compareCodes","studentCodeData","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAOC,IAAP,IAAgB;AAC1C,SAAOH,KAAK,CACPI,IADE,CACG,6BADH,EACkCD,IADlC,EACwC;AAAEE,IAAAA,OAAO,EAAE,MAAMJ,WAAW;AAA5B,GADxC,EAEFK,IAFE,CAEIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACJ,IAAhB;AACH,GAJE,CAAP;AAKH,CANM;AAQP,OAAO,MAAMK,UAAU,GAAG,MAAOL,IAAP,IAAgB;AACtC,SAAOH,KAAK,CACPI,IADE,CACG,qCADH,EAC0CD,IAD1C,EACgD;AAAEE,IAAAA,OAAO,EAAE,MAAMJ,WAAW;AAA5B,GADhD,EAEFK,IAFE,CAEIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACJ,IAAhB;AACH,GAJE,CAAP;AAKH,CANM;AAQP,OAAO,MAAMM,iBAAiB,GAAG,YAAY;AACzC,SAAOT,KAAK,CACPU,GADE,CACE,qCADF,EACyC;AAAEL,IAAAA,OAAO,EAAE,MAAMJ,WAAW;AAA5B,GADzC,EAEFK,IAFE,CAEIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACJ,IAAhB;AACH,GAJE,CAAP;AAKH,CANM;AAQP,OAAO,MAAMQ,kBAAkB,GAAG,MAAOC,YAAP,IAAwB;AACtD,SAAOZ,KAAK,CACPI,IADE,CACG,sCADH,EAC2CQ,YAD3C,EACyD;AAAEP,IAAAA,OAAO,EAAE,MAAMJ,WAAW;AAA5B,GADzD,EAEFK,IAFE,CAEIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACJ,IAAhB;AACH,GAJE,CAAP;AAKH,CANM;AAQP,OAAO,MAAMU,YAAY,GAAG,MAAOC,eAAP,IAA2B;AACnD,SAAOC,OAAO,CAACC,GAAR,CAAYF,eAAZ,CAAP;AACA,SAAOd,KAAK,CACPI,IADE,CACG,sCADH,EAC2CU,eAD3C,EAC4D;AAAET,IAAAA,OAAO,EAAE,MAAMJ,WAAW;AAA5B,GAD5D,EAEFK,IAFE,CAEIC,QAAD,IAAc;AAChB,WAAOA,QAAQ,CAACJ,IAAhB;AACH,GAJE,CAAP;AAKH,CAPM","sourcesContent":["import axios from \"axios\";\nimport auth_header from \"./auth_header\";\n\nexport const codeCompletion = async (data) => {\n    return axios\n        .post('http://localhost:3600/code/', data, { headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n\nexport const uploadCode = async (data) => {\n    return axios\n        .post('http://localhost:3600/coder/upload/', data, { headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n\nexport const getCreatedUploads = async () => {\n    return axios\n        .get('http://localhost:3600/coder/upload/', { headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n\nexport const getSuitableUploads = async (searchOffset) => {\n    return axios\n        .post('http://localhost:3600/student/tasks/', searchOffset, { headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n\nexport const compareCodes = async (studentCodeData) => {\n    return console.log(studentCodeData)\n    return axios\n        .post('http://localhost:3600/student/tasks/', studentCodeData, { headers: await auth_header() })\n        .then((response) => {\n            return response.data;\n        });\n};\n"]},"metadata":{},"sourceType":"module"}