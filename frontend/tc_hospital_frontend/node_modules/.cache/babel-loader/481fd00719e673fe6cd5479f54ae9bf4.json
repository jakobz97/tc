{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createGenerateClassName;\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _hash = _interopRequireDefault(require(\"@emotion/hash\"));\n\nvar escapeRegex = /([[\\].#*$><+~=|^:(),\"'`\\s])/g;\n\nfunction safePrefix(classNamePrefix) {\n  var prefix = String(classNamePrefix);\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(prefix.length < 256, \"Material-UI: the class name prefix is too long: \".concat(prefix, \".\")) : void 0; // Sanitize the string as will be used to prefix the generated class name.\n\n  return prefix.replace(escapeRegex, '-');\n}\n\nvar themeHashCache = {}; // Returns a function which generates unique class names based on counters.\n// When new generator function is created, rule counter is reset.\n// We need to reset the rule counter for SSR for each request.\n//\n// It's inspired by\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\n\nfunction createGenerateClassName() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$dangerouslyU = options.dangerouslyUseGlobalCSS,\n      dangerouslyUseGlobalCSS = _options$dangerouslyU === void 0 ? false : _options$dangerouslyU,\n      _options$productionPr = options.productionPrefix,\n      productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,\n      _options$seed = options.seed,\n      seed = _options$seed === void 0 ? '' : _options$seed;\n  var ruleCounter = 0;\n  return function (rule, styleSheet) {\n    var isStatic = !styleSheet.options.link;\n\n    if (dangerouslyUseGlobalCSS && styleSheet && styleSheet.options.name && isStatic) {\n      return \"\".concat(safePrefix(styleSheet.options.name), \"-\").concat(rule.key);\n    }\n\n    var suffix; // It's a static rule.\n\n    if (isStatic) {\n      var themeHash = themeHashCache[styleSheet.options.theme];\n\n      if (!themeHash) {\n        themeHash = (0, _hash.default)(JSON.stringify(styleSheet.options.theme));\n        themeHashCache[styleSheet.theme] = themeHash;\n      }\n\n      var raw = styleSheet.rules.raw[rule.key];\n      suffix = (0, _hash.default)(\"\".concat(themeHash).concat(rule.key).concat(JSON.stringify(raw)));\n    }\n\n    if (!suffix) {\n      ruleCounter += 1;\n      process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(ruleCounter < 1e10, ['Material-UI: you might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join('')) : void 0;\n      suffix = ruleCounter;\n    }\n\n    if (process.env.NODE_ENV === 'production') {\n      return \"\".concat(productionPrefix).concat(seed).concat(suffix);\n    } // Help with debuggability.\n\n\n    if (styleSheet && styleSheet.options.classNamePrefix) {\n      return \"\".concat(safePrefix(styleSheet.options.classNamePrefix), \"-\").concat(rule.key, \"-\").concat(seed).concat(suffix);\n    }\n\n    return \"\".concat(rule.key, \"-\").concat(seed).concat(suffix);\n  };\n}","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/react-matrix-parallax/node_modules/@material-ui/styles/createGenerateClassName.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","createGenerateClassName","_warning","_hash","escapeRegex","safePrefix","classNamePrefix","prefix","String","process","env","NODE_ENV","length","concat","replace","themeHashCache","options","arguments","undefined","_options$dangerouslyU","dangerouslyUseGlobalCSS","_options$productionPr","productionPrefix","_options$seed","seed","ruleCounter","rule","styleSheet","isStatic","link","name","key","suffix","themeHash","theme","JSON","stringify","raw","rules","join"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createGenerateClassName;\n\nvar _warning = _interopRequireDefault(require(\"warning\"));\n\nvar _hash = _interopRequireDefault(require(\"@emotion/hash\"));\n\nvar escapeRegex = /([[\\].#*$><+~=|^:(),\"'`\\s])/g;\n\nfunction safePrefix(classNamePrefix) {\n  var prefix = String(classNamePrefix);\n  process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(prefix.length < 256, \"Material-UI: the class name prefix is too long: \".concat(prefix, \".\")) : void 0; // Sanitize the string as will be used to prefix the generated class name.\n\n  return prefix.replace(escapeRegex, '-');\n}\n\nvar themeHashCache = {}; // Returns a function which generates unique class names based on counters.\n// When new generator function is created, rule counter is reset.\n// We need to reset the rule counter for SSR for each request.\n//\n// It's inspired by\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\n\nfunction createGenerateClassName() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$dangerouslyU = options.dangerouslyUseGlobalCSS,\n      dangerouslyUseGlobalCSS = _options$dangerouslyU === void 0 ? false : _options$dangerouslyU,\n      _options$productionPr = options.productionPrefix,\n      productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,\n      _options$seed = options.seed,\n      seed = _options$seed === void 0 ? '' : _options$seed;\n  var ruleCounter = 0;\n  return function (rule, styleSheet) {\n    var isStatic = !styleSheet.options.link;\n\n    if (dangerouslyUseGlobalCSS && styleSheet && styleSheet.options.name && isStatic) {\n      return \"\".concat(safePrefix(styleSheet.options.name), \"-\").concat(rule.key);\n    }\n\n    var suffix; // It's a static rule.\n\n    if (isStatic) {\n      var themeHash = themeHashCache[styleSheet.options.theme];\n\n      if (!themeHash) {\n        themeHash = (0, _hash.default)(JSON.stringify(styleSheet.options.theme));\n        themeHashCache[styleSheet.theme] = themeHash;\n      }\n\n      var raw = styleSheet.rules.raw[rule.key];\n      suffix = (0, _hash.default)(\"\".concat(themeHash).concat(rule.key).concat(JSON.stringify(raw)));\n    }\n\n    if (!suffix) {\n      ruleCounter += 1;\n      process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(ruleCounter < 1e10, ['Material-UI: you might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join('')) : void 0;\n      suffix = ruleCounter;\n    }\n\n    if (process.env.NODE_ENV === 'production') {\n      return \"\".concat(productionPrefix).concat(seed).concat(suffix);\n    } // Help with debuggability.\n\n\n    if (styleSheet && styleSheet.options.classNamePrefix) {\n      return \"\".concat(safePrefix(styleSheet.options.classNamePrefix), \"-\").concat(rule.key, \"-\").concat(seed).concat(suffix);\n    }\n\n    return \"\".concat(rule.key, \"-\").concat(seed).concat(suffix);\n  };\n}"]},"metadata":{},"sourceType":"script"}