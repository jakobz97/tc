{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/student/analytics/DetailedAnalytics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; //import '../../../styles/shared/editor/editor.css';\n\nimport '../../../styles/shared/fadein.css'; //import {codeCompletionAsync, uploadStudentCodeAsync} from \"../../../slice/reviewSlice\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { history } from \"../../../helpers/history\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailedAnalytics = _ref => {\n  _s();\n\n  let {\n    data,\n    hide\n  } = _ref;\n  const [selTxt, setSelTxt] = useState({});\n  const [tempCodes, setTempCodes] = useState([]);\n  const dispatch = useDispatch();\n  /**\n   * @function (01) get the dark background, the content wrapper and the inputs\n   *           (02) increase the dark background opacity\n   *           (03) fade up the content wrapper\n   *           =============\n   *           (04) ensure that the code display has the same length as the overflow text\n   *           (05) ensure that the empty codes text is centered\n   */\n\n  useEffect(() => {\n    //01\n    let bg = document.querySelector('.menu_dark_bg'),\n        content = document.querySelector('.create_input_wrapper'); //02\n\n    bg.style.cssText = \"opacity: 100%\"; //03\n\n    content.style.marginTop = \"0\"; //04\n\n    document.getElementById('internal_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight + 'px'; //05\n\n    document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight + 'px';\n  }, []);\n  /**\n   * @function (01) get the background and content\n   *           (02) return if user clicked on the content\n   *           (03) user clicked outside of content - hide\n   *           (04) after timeout set state again to hidden\n   */\n\n  const hideCreateView = (e, forced) => {\n    //01\n    let bg = document.querySelector('.menu_dark_bg'),\n        content = document.querySelector('.create_input_wrapper'); //02\n\n    if (!forced && content.contains(e.target)) return; //03\n\n    bg.style.cssText = \"opacity: 0%\";\n    content.style.marginTop = \"150vh\"; //04\n\n    setTimeout(() => close(), 350);\n  };\n  /**\n   * @function (01) define the target by choosing the complementary of the scrolled div\n   *           (02) assign scroll toÃ¼ and scroll left to the target based on the event scrolled position\n   */\n\n\n  const syncScroll = (e, origin) => {\n    //01\n    const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]; //02\n\n    target.scrollTop = e.currentTarget.scrollTop;\n    target.scrollLeft = e.currentTarget.scrollLeft;\n  }; //====================================================================\n\n  /**\n   * @function (01) check that there is no overlapping regarding the codes\n   *           (02) highlight the code\n   *           (03) push into data structure (updates the code overview on the right side)\n   */\n\n\n  const addCode = () => {\n    //02\n    setSelectionRange(selTxt.start, selTxt.end); //highlight(\"yellow\");\n    //03\n\n    setTempCodes(currentCodes => [...currentCodes, selTxt]);\n  };\n  /**\n   * @function (01) get all selects and positions\n   *           (02) if only cursor change takes place only hide the tooltip\n   *           (03) reposition tooltip\n   *           (04) set selected text state\n   */\n\n\n  const selector = e => {\n    //01\n    let select = window.getSelection(),\n        selectRange = select.getRangeAt(0),\n        selectPos = selectRange.getBoundingClientRect(),\n        codeInput = document.getElementsByClassName('code_input')[0],\n        codeInputPos = codeInput.getBoundingClientRect(),\n        tooltip = document.getElementById('tooltip_editor_wrapper'); //02\n\n    if (selectPos.width < 1) return tooltip.style.display = \"none\"; //03\n\n    tooltip.style.display = \"inline\";\n    tooltip.style.top = selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop + 'px';\n    tooltip.style.left = selectPos.left - codeInputPos.left + selectPos.width / 2 - tooltip.offsetWidth / 2 + 'px'; //04\n\n    let xpath = fromRange(selectRange, codeInput);\n    setSelTxt({ ...selTxt,\n      ...{\n        val: selectRange.toString(),\n        start: xpath.startOffset,\n        end: xpath.endOffset,\n        top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5,\n        id: uuidv4()\n      }\n    });\n  };\n  /**\n   * @function (01)\n   *           (02)\n   * @param start\n   * @param end\n   */\n\n\n  function setSelectionRange(start, end) {\n    let el = document.getElementsByClassName('code_input')[0];\n    var range = document.createRange();\n    range.selectNodeContents(el);\n    var textNodes = getTextNodesIn(el);\n    var foundStart = false;\n    var charCount = 0,\n        endCharCount;\n\n    for (var i = 0, textNode; textNode = textNodes[i++];) {\n      endCharCount = charCount + textNode.length;\n\n      if (!foundStart && start >= charCount && (start < endCharCount || start == endCharCount && i <= textNodes.length)) {\n        range.setStart(textNode, start - charCount);\n        foundStart = true;\n      }\n\n      if (foundStart && end <= endCharCount) {\n        range.setEnd(textNode, end - charCount);\n        break;\n      }\n\n      charCount = endCharCount;\n    }\n\n    var sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range); //Helper functions\n\n    function getTextNodesIn(node) {\n      var textNodes = [];\n\n      if (node.nodeType === 3) {\n        textNodes.push(node);\n      } else {\n        var children = node.childNodes;\n\n        for (var i = 0, len = children.length; i < len; ++i) {\n          textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n        }\n      }\n\n      return textNodes;\n    }\n  } //====================================================================\n  //====================================================================\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu_dark_bg\",\n    onClick: hideCreateView,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_input_wrapper enlarged_create_input_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create_input_hide\",\n        onClick: e => {\n          hideCreateView(e, true);\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code_input enlarged_code_input\",\n        onMouseUp: selector,\n        onScroll: e => syncScroll(e, 'input'),\n        children: [taskData.txt, /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"tooltip_editor_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tooltip_btn\",\n            onClick: addCode,\n            children: \"Code hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code_display enlarged_code_display\",\n        onScroll: e => syncScroll(e, 'display'),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"internal_code_display\",\n          children: tempCodes.length > 0 ? tempCodes.map((code, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ind_code_display\",\n              id: code.id,\n              style: {\n                top: code.top + 'px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Code ID\",\n                className: \"small_code_section\",\n                onChange: e => editCode(e, i, 'id')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Code Desc\",\n                className: \"large_code_section\",\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"remove_code_btn\",\n                onClick: () => removeTxt(i),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 41\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 44\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty_editor\",\n            children: \"Vergebe Codes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), tempCodes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"student_compare_btn\",\n          onClick: () => uploadStudentCode(),\n          children: \"Codes hochladen und vergleichen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetailedAnalytics, \"wSJqQ/8yirSjdqF5RYHIWlUbHV8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DetailedAnalytics;\nexport default DetailedAnalytics;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedAnalytics\");","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/student/analytics/DetailedAnalytics.js"],"names":["React","useEffect","useState","useDispatch","useSelector","history","DetailedAnalytics","data","hide","selTxt","setSelTxt","tempCodes","setTempCodes","dispatch","bg","document","querySelector","content","style","cssText","marginTop","getElementById","height","getElementsByClassName","scrollHeight","offsetHeight","hideCreateView","e","forced","contains","target","setTimeout","close","syncScroll","origin","scrollTop","currentTarget","scrollLeft","addCode","setSelectionRange","start","end","currentCodes","selector","select","window","getSelection","selectRange","getRangeAt","selectPos","getBoundingClientRect","codeInput","codeInputPos","tooltip","width","display","top","left","offsetWidth","xpath","fromRange","val","toString","startOffset","endOffset","id","uuidv4","el","range","createRange","selectNodeContents","textNodes","getTextNodesIn","foundStart","charCount","endCharCount","i","textNode","length","setStart","setEnd","sel","removeAllRanges","addRange","node","nodeType","push","children","childNodes","len","apply","taskData","txt","map","code","editCode","removeTxt","uploadStudentCode"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\n//import '../../../styles/shared/editor/editor.css';\nimport '../../../styles/shared/fadein.css';\n\n//import {codeCompletionAsync, uploadStudentCodeAsync} from \"../../../slice/reviewSlice\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nconst DetailedAnalytics = ({ data, hide }) => {\n\n    const [selTxt, setSelTxt] = useState({})\n    const [tempCodes, setTempCodes] = useState([])\n\n    const dispatch = useDispatch();\n\n\n    /**\n     * @function (01) get the dark background, the content wrapper and the inputs\n     *           (02) increase the dark background opacity\n     *           (03) fade up the content wrapper\n     *           =============\n     *           (04) ensure that the code display has the same length as the overflow text\n     *           (05) ensure that the empty codes text is centered\n     */\n    useEffect(() => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        bg.style.cssText = \"opacity: 100%\";\n        //03\n        content.style.marginTop = \"0\";\n        //04\n        document.getElementById('internal_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        //05\n        document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight+'px'\n    }, [])\n\n    /**\n     * @function (01) get the background and content\n     *           (02) return if user clicked on the content\n     *           (03) user clicked outside of content - hide\n     *           (04) after timeout set state again to hidden\n     */\n    const hideCreateView = (e, forced) => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        if (!forced && content.contains(e.target)) return;\n        //03\n        bg.style.cssText = \"opacity: 0%\";\n        content.style.marginTop = \"150vh\";\n        //04\n        setTimeout(() => close(), 350)\n    };\n\n    /**\n     * @function (01) define the target by choosing the complementary of the scrolled div\n     *           (02) assign scroll toÃ¼ and scroll left to the target based on the event scrolled position\n     */\n    const syncScroll = (e, origin) => {\n        //01\n        const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]\n        //02\n        target.scrollTop = e.currentTarget.scrollTop;\n        target.scrollLeft = e.currentTarget.scrollLeft;\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) check that there is no overlapping regarding the codes\n     *           (02) highlight the code\n     *           (03) push into data structure (updates the code overview on the right side)\n     */\n    const addCode = () => {\n        //02\n        setSelectionRange(selTxt.start, selTxt.end)\n        //highlight(\"yellow\");\n        //03\n        setTempCodes(currentCodes => [...currentCodes, selTxt]);\n    }\n\n    /**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */\n    const selector = (e) => {\n        //01\n        let select = window.getSelection(),\n            selectRange = select.getRangeAt(0),\n            selectPos = selectRange.getBoundingClientRect(),\n            codeInput = document.getElementsByClassName('code_input')[0],\n            codeInputPos = codeInput.getBoundingClientRect(),\n            tooltip = document.getElementById('tooltip_editor_wrapper');\n        //02\n        if (selectPos.width < 1) return tooltip.style.display = \"none\";\n        //03\n        tooltip.style.display = \"inline\";\n        tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n        tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n        //04\n        let xpath = fromRange(selectRange, codeInput)\n\n        setSelTxt({...selTxt,  ...{\n                val: selectRange.toString(),\n                start: xpath.startOffset,\n                end: xpath.endOffset,\n                top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5,\n                id: uuidv4()\n            },\n        })\n    }\n\n    /**\n     * @function (01)\n     *           (02)\n     * @param start\n     * @param end\n     */\n    function setSelectionRange(start, end) {\n\n        let el = document.getElementsByClassName('code_input')[0];\n\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var textNodes = getTextNodesIn(el);\n        var foundStart = false;\n        var charCount = 0, endCharCount;\n\n        for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n            endCharCount = charCount + textNode.length;\n            if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {\n                range.setStart(textNode, start - charCount);\n                foundStart = true;\n            }\n            if (foundStart && end <= endCharCount) {\n                range.setEnd(textNode, end - charCount);\n                break;\n            }\n            charCount = endCharCount;\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n        //Helper functions\n\n        function getTextNodesIn(node) {\n            var textNodes = [];\n            if (node.nodeType === 3) {\n                textNodes.push(node);\n            } else {\n                var children = node.childNodes;\n                for (var i = 0, len = children.length; i < len; ++i) {\n                    textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n                }\n            }\n            return textNodes;\n        }\n    }\n\n    //====================================================================\n\n\n    \n    //====================================================================\n\n    return (\n        <div className=\"menu_dark_bg\" onClick={hideCreateView}>\n            <div className=\"create_input_wrapper enlarged_create_input_wrapper\">\n                <div className=\"create_input_hide\" onClick={(e) => {hideCreateView(e, true)}}>X</div>\n                <div className=\"code_input enlarged_code_input\" onMouseUp={selector} onScroll={(e) => syncScroll(e, 'input')}>\n                    {taskData.txt}\n                    <div id=\"tooltip_editor_wrapper\">\n                        <div className=\"tooltip_btn\" onClick={addCode}>Code hinzufÃ¼gen</div>\n                    </div>\n                </div>\n                <div className=\"code_display enlarged_code_display\" onScroll={(e) => syncScroll(e, 'display')}>\n                    <div id=\"internal_code_display\">\n                        {\n                            tempCodes.length > 0 ? (\n                                tempCodes.map((code, i) => {\n                                    return <div className=\"ind_code_display\" id={code.id} style={{top:code.top+'px'}} key={i}>\n                                        <input placeholder=\"Code ID\" className=\"small_code_section\" onChange={(e) => editCode(e, i, 'id')}/>\n                                        <input placeholder=\"Code Desc\" className=\"large_code_section\" readOnly/>\n                                        <div className=\"remove_code_btn\" onClick={() => removeTxt(i)}>X</div>\n                                    </div>;\n                                })\n                            ) : (\n                                <div className=\"empty_editor\">Vergebe Codes</div>\n                            )\n                        }\n                    </div>\n                    { tempCodes.length > 0 && <div className=\"student_compare_btn\" onClick={() => uploadStudentCode()}>Codes hochladen und vergleichen</div> }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DetailedAnalytics;\n"]},"metadata":{},"sourceType":"module"}