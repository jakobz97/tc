{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/student/analytics/Analytics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectIsLoggedIn, selectUserData } from \"../../../slice/authSlice\";\nimport { getSuitableUploadsAsync } from \"../../../slice/reviewSlice\";\nimport '../../../styles/shared/main.css'; //import '../../../styles/main/student/search/Search.css';\n\nimport Navbar from \"../../general/navbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const loggedIn = useSelector(selectIsLoggedIn);\n  const userData = useSelector(selectUserData);\n\n  if (!loggedIn || userData.userType !== 'student') {\n    history.push(\"/login\");\n    window.location.reload();\n  }\n  /**\n   * @function (01) load suitable tasks via dispatch\n   *           (02) hide the loading sign once fulfilled\n   */\n\n\n  useEffect(() => {\n    //01\n    return;\n    dispatch(getSuitableUploadsAsync(searchIndex)).then(res => {//02\n    }).catch(err => {\n      console.log('error', err);\n    });\n  }, []);\n  /**\n   * @function (01) update the paginatiopn index counter\n   *           (02) dispatch the updated suitable upload and update the redux state variable\n   */\n\n  const paginateResults = () => {};\n  /**\n   * @function (01) set the selected task data\n   *           (02) make the editor visible\n   * @param taskData object of the entire task\n   */\n\n\n  const selectTask = taskData => {\n    //01\n    setSelectedTask({ ...selectedTask,\n      ...taskData\n    }); //02\n\n    setVisibleEditor(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center_container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_center_content_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_outer_content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main_outer_heading\",\n          children: \"Suche\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_center_content\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          type: \"extReviews\",\n          title: \"Von anderen Universit채ten\",\n          select: selectTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n          type: \"intReviews\",\n          title: \"Meine Universit채t\",\n          select: selectTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), visibleEditor && /*#__PURE__*/_jsxDEV(Editor, {\n          taskData: selectedTask,\n          close: () => setVisibleEditor(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_outer_content right_bound_outer_content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"XnYyVC3YQU1AV7IB4/czAr6J9mo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/student/analytics/Analytics.js"],"names":["React","useState","useRef","useEffect","useDispatch","useSelector","selectIsLoggedIn","selectUserData","getSuitableUploadsAsync","Navbar","Search","dispatch","loggedIn","userData","userType","history","push","window","location","reload","searchIndex","then","res","catch","err","console","log","paginateResults","selectTask","taskData","setSelectedTask","selectedTask","setVisibleEditor","visibleEditor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,SAAQC,gBAAR,EAA0BC,cAA1B,QAA+C,0BAA/C;AACA,SAAQC,uBAAR,QAAsC,4BAAtC;AAEA,OAAO,iCAAP,C,CACA;;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,QAAQ,GAAGP,WAAW,CAACC,gBAAD,CAA5B;AACA,QAAMO,QAAQ,GAAGR,WAAW,CAACE,cAAD,CAA5B;;AAEA,MAAI,CAACK,QAAD,IAAaC,QAAQ,CAACC,QAAT,KAAsB,SAAvC,EAAkD;AAC9CC,IAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH;AAED;AACJ;AACA;AACA;;;AACIhB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACAQ,IAAAA,QAAQ,CAACH,uBAAuB,CAACY,WAAD,CAAxB,CAAR,CACKC,IADL,CACWC,GAAD,IAAS,CACX;AACH,KAHL,EAIKC,KAJL,CAIYC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACH,KANL;AAOH,GAVQ,EAUN,EAVM,CAAT;AAYA;AACJ;AACA;AACA;;AACI,QAAMG,eAAe,GAAG,MAAM,CAE7B,CAFD;AAIA;AACJ;AACA;AACA;AACA;;;AACI,QAAMC,UAAU,GAAIC,QAAD,IAAc;AAC7B;AACAC,IAAAA,eAAe,CAAC,EAAC,GAAGC,YAAJ;AAAkB,SAAGF;AAArB,KAAD,CAAf,CAF6B,CAG7B;;AACAG,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACI,QAAC,aAAD;AAAe,UAAA,IAAI,EAAI,YAAvB;AAAqC,UAAA,KAAK,EAAI,2BAA9C;AAA2E,UAAA,MAAM,EAAIJ;AAArF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,aAAD;AAAe,UAAA,IAAI,EAAI,YAAvB;AAAqC,UAAA,KAAK,EAAI,mBAA9C;AAAmE,UAAA,MAAM,EAAIA;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGMK,aAAa,iBAAI,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAIF,YAApB;AAAkC,UAAA,KAAK,EAAI,MAAMC,gBAAgB,CAAC,KAAD;AAAjE;AAAA;AAAA;AAAA;AAAA,gBAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAWI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAlED;;GAAMtB,M;UAEeN,W,EAEAC,W,EACAA,W;;;KALfK,M;AAoEN,eAAeA,MAAf","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport {selectIsLoggedIn, selectUserData} from \"../../../slice/authSlice\";\nimport {getSuitableUploadsAsync} from \"../../../slice/reviewSlice\";\n\nimport '../../../styles/shared/main.css';\n//import '../../../styles/main/student/search/Search.css';\n\nimport Navbar from \"../../general/navbar/Navbar\";\n\n\nconst Search = () => {\n\n    const dispatch = useDispatch();\n\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userData = useSelector(selectUserData);\n\n    if (!loggedIn || userData.userType !== 'student') {\n        history.push(\"/login\");\n        window.location.reload();\n    }\n\n    /**\n     * @function (01) load suitable tasks via dispatch\n     *           (02) hide the loading sign once fulfilled\n     */\n    useEffect(() => {\n        //01\n        return\n        dispatch(getSuitableUploadsAsync(searchIndex))\n            .then((res) => {\n                //02\n            })\n            .catch((err) => {\n                console.log('error', err)\n            })\n    }, [])\n\n    /**\n     * @function (01) update the paginatiopn index counter\n     *           (02) dispatch the updated suitable upload and update the redux state variable\n     */\n    const paginateResults = () => {\n\n    }\n\n    /**\n     * @function (01) set the selected task data\n     *           (02) make the editor visible\n     * @param taskData object of the entire task\n     */\n    const selectTask = (taskData) => {\n        //01\n        setSelectedTask({...selectedTask, ...taskData})\n        //02\n        setVisibleEditor(true);\n    }\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Suche</div>\n                </div>\n\n                <div className=\"main_center_content\">\n                    <SearchResults type = {\"extReviews\"} title = {\"Von anderen Universit채ten\"} select = {selectTask} />\n                    <SearchResults type = {\"intReviews\"} title = {\"Meine Universit채t\"} select = {selectTask} />\n                    { visibleEditor && <Editor taskData = {selectedTask} close = {() => setVisibleEditor(false)}/> }\n                </div>\n\n                <div className=\"main_outer_content right_bound_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}