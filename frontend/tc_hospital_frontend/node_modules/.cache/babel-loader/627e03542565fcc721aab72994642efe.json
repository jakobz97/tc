{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/main/general/routes/Routes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\"; //General routes\n\nimport LandingPage from \"../landing/LandingPage\";\nimport Login from \"../Login\";\nimport Verify from \"../verify/Verify\";\nimport Logout from \"../logout/Logout\"; //Admin only routes\n\nimport AdminAnalytics from \"../../admin/Analytics\";\nimport AdminInvite from \"../../admin/invite/InviteUser\"; //Student routes\n\nimport StudentEditor from \"../../student/editor/Editor\"; //Coder routes\n\nimport CoderEditor from \"../../coder/editor/Editor\";\nimport CoderReviews from \"../../coder/reviews/Reviews\";\nimport { history } from \"../../../../helpers/history\";\nimport { selectIsLoggedIn, selectUserType } from \"../../../../slice/authSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Routes() {\n  _s();\n\n  /**\n   * @desc (01) check from redux if the user is logged in\n   *       (02) if user is logged in redirect to the specific user type\n   */\n  const loggedIn = useSelector(selectIsLoggedIn);\n  const userType = useSelector(selectUserType);\n  /**\n   * @desc return the available routes based on the current user status - logged in or not logged in\n   */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loggedIn && userType === 'admin' ? /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: LandingPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/logout\",\n        component: Logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/admin/invite/\",\n        component: AdminInvite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/admin/analytics/\",\n        component: AdminAnalytics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : loggedIn && userType === 'coder' ? /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: LandingPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/logout\",\n        component: Logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/coder/editor/\",\n        component: CoderEditor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/coder/reviews/\",\n        component: CoderReviews\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : loggedIn && userType === 'student' ? /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: LandingPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/logout\",\n        component: Logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: LandingPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/verify/:hash\",\n        component: Verify\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Routes, \"D35w8o6pOvsJCarD5fVUimi6iqA=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Routes;\nexport default Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/main/general/routes/Routes.js"],"names":["React","useSelector","Switch","Route","LandingPage","Login","Verify","Logout","AdminAnalytics","AdminInvite","StudentEditor","CoderEditor","CoderReviews","history","selectIsLoggedIn","selectUserType","Routes","loggedIn","userType"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\n\n//General routes\nimport LandingPage from \"../landing/LandingPage\";\nimport Login from \"../Login\";\nimport Verify from \"../verify/Verify\";\nimport Logout from \"../logout/Logout\";\n\n//Admin only routes\nimport AdminAnalytics from \"../../admin/Analytics\";\nimport AdminInvite from \"../../admin/invite/InviteUser\";\n\n//Student routes\nimport StudentEditor from \"../../student/editor/Editor\";\n\n//Coder routes\nimport CoderEditor from \"../../coder/editor/Editor\";\nimport CoderReviews from \"../../coder/reviews/Reviews\";\n\n\nimport { history } from \"../../../../helpers/history\";\nimport {selectIsLoggedIn, selectUserType} from \"../../../../slice/authSlice\";\n\n\nfunction Routes() {\n    /**\n     * @desc (01) check from redux if the user is logged in\n     *       (02) if user is logged in redirect to the specific user type\n     */\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userType = useSelector(selectUserType);\n\n    /**\n     * @desc return the available routes based on the current user status - logged in or not logged in\n     */\n    return (\n        <>\n            {loggedIn && userType === 'admin' ? (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n\n                    <Route exact path=\"/admin/invite/\" component={AdminInvite} />\n                    <Route exact path=\"/admin/analytics/\" component={AdminAnalytics} />\n                </Switch>\n            ) : loggedIn && userType === 'coder' ? (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n\n                    <Route exact path=\"/coder/editor/\" component={CoderEditor} />\n                    <Route exact path=\"/coder/reviews/\" component={CoderReviews} />\n                </Switch>\n            ) : loggedIn && userType === 'student' ? (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                </Switch>\n            ) : (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/verify/:hash\" component={Verify} />\n                </Switch>\n            )}\n        </>\n    );\n}\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}