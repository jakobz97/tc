{"ast":null,"code":"import _objectDestructuringEmpty from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js\";import _objectSpread from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/regenerator/index.js\";import{createAsyncThunk,createSlice}from'@reduxjs/toolkit';import{activeLinks,getUsers,inviteUser,removeUser}from'../services/admin.service';var initialState={activeLinks:[],userList:[]};export var currentLinksAsync=createAsyncThunk('admin/fetchActiveLinks',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return activeLinks();case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);})));export var getUserAsync=createAsyncThunk('admin/getUserList',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getUsers();case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);})));export var removeUserAsync=createAsyncThunk('admin/removeUser',/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(userId){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return removeUser(userId);case 2:return _context3.abrupt(\"return\",_context3.sent);case 3:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x){return _ref3.apply(this,arguments);};}());export var inviteUserAsync=createAsyncThunk('admin/invite',/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(userData){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return inviteUser(userData);case 2:return _context4.abrupt(\"return\",_context4.sent);case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x2){return _ref4.apply(this,arguments);};}());export var adminSlice=createSlice({name:'admin',initialState:initialState,reducers:{},extraReducers:function extraReducers(builder){builder.addCase(currentLinksAsync.fulfilled,function(state,action){console.log('loaded current orders');state.currentOrders=action.payload;}).addCase(getUserAsync.fulfilled,function(state,action){var filteredUserList=action.payload.userList.filter(function(user){return user._id!==action.payload.userId;});return _objectSpread(_objectSpread({},state),{},{userList:filteredUserList});}).addCase(removeUserAsync.fulfilled,function(state,action){var updatedUserList=state.userList.filter(function(user){return user._id!==action.payload.userId;});return _objectSpread(_objectSpread({},state),{},{userList:updatedUserList});}).addCase(inviteUserAsync.fulfilled,function(state,action){console.log('loaded past orders');state.pastOrders=action.payload;});}});_objectDestructuringEmpty(adminSlice.actions);export{};export var selectActiveLinks=function selectActiveLinks(state){return state.admin.activeLinks;};export var selectUserList=function selectUserList(state){return state.admin.userList;};export default adminSlice.reducer;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/adminSlice.js"],"names":["createAsyncThunk","createSlice","activeLinks","getUsers","inviteUser","removeUser","initialState","userList","currentLinksAsync","getUserAsync","removeUserAsync","userId","inviteUserAsync","userData","adminSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","console","log","currentOrders","payload","filteredUserList","filter","user","_id","updatedUserList","pastOrders","actions","selectActiveLinks","admin","selectUserList","reducer"],"mappings":"4uBAAA,OAASA,gBAAT,CAA2BC,WAA3B,KAA8C,kBAA9C,CACA,OAAQC,WAAR,CAAqBC,QAArB,CAA+BC,UAA/B,CAA2CC,UAA3C,KAA4D,2BAA5D,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBJ,WAAW,CAAE,EADI,CAEjBK,QAAQ,CAAE,EAFO,CAArB,CAKA,MAAO,IAAMC,CAAAA,iBAAiB,CAAGR,gBAAgB,CAC7C,wBAD6C,sEAE7C,yJACiBE,CAAAA,WAAW,EAD5B,6GAF6C,GAA1C,CAOP,MAAO,IAAMO,CAAAA,YAAY,CAAGT,gBAAgB,CACxC,mBADwC,sEAExC,+JACiBG,CAAAA,QAAQ,EADzB,iHAFwC,GAArC,CAOP,MAAO,IAAMO,CAAAA,eAAe,CAAGV,gBAAgB,CAC3C,kBAD2C,2FAE3C,kBAAOW,MAAP,6IACiBN,CAAAA,UAAU,CAACM,MAAD,CAD3B,iHAF2C,gEAAxC,CAOP,MAAO,IAAMC,CAAAA,eAAe,CAAGZ,gBAAgB,CAC3C,cAD2C,2FAE3C,kBAAOa,QAAP,6IACiBT,CAAAA,UAAU,CAACS,QAAD,CAD3B,iHAF2C,iEAAxC,CAOP,MAAO,IAAMC,CAAAA,UAAU,CAAGb,WAAW,CAAC,CAClCc,IAAI,CAAE,OAD4B,CAElCT,YAAY,CAAZA,YAFkC,CAGlCU,QAAQ,CAAE,EAHwB,CAKlCC,aAAa,CAAE,uBAACC,OAAD,CAAa,CACxBA,OAAO,CACFC,OADL,CACaX,iBAAiB,CAACY,SAD/B,CAC0C,SAACC,KAAD,CAAQC,MAAR,CAAmB,CACrDC,OAAO,CAACC,GAAR,CAAY,uBAAZ,EACAH,KAAK,CAACI,aAAN,CAAsBH,MAAM,CAACI,OAA7B,CACH,CAJL,EAKKP,OALL,CAKaV,YAAY,CAACW,SAL1B,CAKqC,SAACC,KAAD,CAAQC,MAAR,CAAmB,CAChD,GAAIK,CAAAA,gBAAgB,CAAGL,MAAM,CAACI,OAAP,CAAenB,QAAf,CAAwBqB,MAAxB,CAA+B,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaR,MAAM,CAACI,OAAP,CAAef,MAAtC,EAA/B,CAAvB,CACA,sCAAWU,KAAX,MAAkBd,QAAQ,CAAEoB,gBAA5B,GACH,CARL,EASKR,OATL,CASaT,eAAe,CAACU,SAT7B,CASwC,SAACC,KAAD,CAAQC,MAAR,CAAmB,CACnD,GAAIS,CAAAA,eAAe,CAAGV,KAAK,CAACd,QAAN,CAAeqB,MAAf,CAAsB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,GAAL,GAAaR,MAAM,CAACI,OAAP,CAAef,MAAtC,EAAtB,CAAtB,CACA,sCAAYU,KAAZ,MAAmBd,QAAQ,CAAEwB,eAA7B,GACH,CAZL,EAaKZ,OAbL,CAaaP,eAAe,CAACQ,SAb7B,CAawC,SAACC,KAAD,CAAQC,MAAR,CAAmB,CACnDC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACAH,KAAK,CAACW,UAAN,CAAmBV,MAAM,CAACI,OAA1B,CACH,CAhBL,EAiBH,CAvBiC,CAAD,CAA9B,CA0BA,0BAAWZ,UAAU,CAACmB,OAAtB,E,SAEP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACb,KAAD,QAAWA,CAAAA,KAAK,CAACc,KAAN,CAAYjC,WAAvB,EAA1B,CACP,MAAO,IAAMkC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACf,KAAD,QAAWA,CAAAA,KAAK,CAACc,KAAN,CAAY5B,QAAvB,EAAvB,CAEP,cAAeO,CAAAA,UAAU,CAACuB,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {activeLinks, getUsers, inviteUser, removeUser} from '../services/admin.service';\n\nconst initialState = {\n    activeLinks: [],\n    userList: []\n};\n\nexport const currentLinksAsync = createAsyncThunk(\n    'admin/fetchActiveLinks',\n    async () => {\n        return await activeLinks();\n    }\n);\n\nexport const getUserAsync = createAsyncThunk(\n    'admin/getUserList',\n    async () => {\n        return await getUsers();\n    }\n);\n\nexport const removeUserAsync = createAsyncThunk(\n    'admin/removeUser',\n    async (userId) => {\n        return await removeUser(userId);\n    }\n);\n\nexport const inviteUserAsync = createAsyncThunk(\n    'admin/invite',\n    async (userData) => {\n        return await inviteUser(userData);\n    }\n);\n\nexport const adminSlice = createSlice({\n    name: 'admin',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(currentLinksAsync.fulfilled, (state, action) => {\n                console.log('loaded current orders')\n                state.currentOrders = action.payload;\n            })\n            .addCase(getUserAsync.fulfilled, (state, action) => {\n                let filteredUserList = action.payload.userList.filter((user) => user._id !== action.payload.userId);\n                return {...state, userList: filteredUserList}\n            })\n            .addCase(removeUserAsync.fulfilled, (state, action) => {\n                let updatedUserList = state.userList.filter((user) => user._id !== action.payload.userId);\n                return { ...state, userList: updatedUserList }\n            })\n            .addCase(inviteUserAsync.fulfilled, (state, action) => {\n                console.log('loaded past orders')\n                state.pastOrders = action.payload;\n            })\n    },\n});\n\nexport const {} = adminSlice.actions;\n\nexport const selectActiveLinks = (state) => state.admin.activeLinks;\nexport const selectUserList = (state) => state.admin.userList;\n\nexport default adminSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}