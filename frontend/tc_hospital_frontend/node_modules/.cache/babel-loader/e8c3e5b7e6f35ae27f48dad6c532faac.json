{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { codeCompletion, getCreatedUploads, uploadCode } from '../services/review.service';\nconst initialState = {\n  createdUploads: []\n};\nexport const codeCompletionAsync = createAsyncThunk('review/codeCompletion', async data => {\n  const response = await codeCompletion(data);\n  return response.data;\n});\nexport const uploadCodeAsync = createAsyncThunk('review/uploadCode', async data => {\n  const response = await uploadCode(data);\n  return response.data;\n});\nexport const getUploadsAsync = createAsyncThunk('review/getUploads', async () => {\n  const response = await getCreatedUploads();\n  return response;\n});\nexport const reviewSlice = createSlice({\n  name: 'review',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(codeCompletionAsync.fulfilled, (state, action) => {//todo add to redux\n    }).addCase(uploadCodeAsync.fulfilled, (state, action) => {//todo add to redux\n    }).addCase(getUploadsAsync.fulfilled, (state, action) => {\n      state.createdUploads.concat(action.payload.codes);\n    });\n  }\n});\nexport const {} = reviewSlice.actions;\nexport const selectCreatedUploads = state => state.review.createdUploads;\nexport default reviewSlice.reducer;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/slice/reviewSlice.js"],"names":["createAsyncThunk","createSlice","codeCompletion","getCreatedUploads","uploadCode","initialState","createdUploads","codeCompletionAsync","data","response","uploadCodeAsync","getUploadsAsync","reviewSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","concat","payload","codes","actions","selectCreatedUploads","review","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,EAA2CC,UAA3C,QAA4D,4BAA5D;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE;AADC,CAArB;AAIA,OAAO,MAAMC,mBAAmB,GAAGP,gBAAgB,CAC/C,uBAD+C,EAE/C,MAAOQ,IAAP,IAAgB;AACZ,QAAMC,QAAQ,GAAG,MAAMP,cAAc,CAACM,IAAD,CAArC;AACA,SAAOC,QAAQ,CAACD,IAAhB;AACH,CAL8C,CAA5C;AAQP,OAAO,MAAME,eAAe,GAAGV,gBAAgB,CAC3C,mBAD2C,EAE3C,MAAOQ,IAAP,IAAgB;AACZ,QAAMC,QAAQ,GAAG,MAAML,UAAU,CAACI,IAAD,CAAjC;AACA,SAAOC,QAAQ,CAACD,IAAhB;AACH,CAL0C,CAAxC;AAQP,OAAO,MAAMG,eAAe,GAAGX,gBAAgB,CAC3C,mBAD2C,EAE3C,YAAY;AACR,QAAMS,QAAQ,GAAG,MAAMN,iBAAiB,EAAxC;AACA,SAAOM,QAAP;AACH,CAL0C,CAAxC;AAQP,OAAO,MAAMG,WAAW,GAAGX,WAAW,CAAC;AACnCY,EAAAA,IAAI,EAAE,QAD6B;AAEnCR,EAAAA,YAFmC;AAGnCS,EAAAA,QAAQ,EAAE,EAHyB;AAKnCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CACFC,OADL,CACaV,mBAAmB,CAACW,SADjC,EAC4C,CAACC,KAAD,EAAQC,MAAR,KAAmB,CACvD;AACH,KAHL,EAIKH,OAJL,CAIaP,eAAe,CAACQ,SAJ7B,EAIwC,CAACC,KAAD,EAAQC,MAAR,KAAmB,CACnD;AACH,KANL,EAOKH,OAPL,CAOaN,eAAe,CAACO,SAP7B,EAOwC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnDD,MAAAA,KAAK,CAACb,cAAN,CAAqBe,MAArB,CAA4BD,MAAM,CAACE,OAAP,CAAeC,KAA3C;AACH,KATL;AAUH;AAhBkC,CAAD,CAA/B;AAmBP,OAAO,MAAM,KAAKX,WAAW,CAACY,OAAvB;AAEP,OAAO,MAAMC,oBAAoB,GAAIN,KAAD,IAAWA,KAAK,CAACO,MAAN,CAAapB,cAArD;AAEP,eAAeM,WAAW,CAACe,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {codeCompletion, getCreatedUploads, uploadCode} from '../services/review.service';\n\nconst initialState = {\n    createdUploads: []\n};\n\nexport const codeCompletionAsync = createAsyncThunk(\n    'review/codeCompletion',\n    async (data) => {\n        const response = await codeCompletion(data);\n        return response.data;\n    }\n);\n\nexport const uploadCodeAsync = createAsyncThunk(\n    'review/uploadCode',\n    async (data) => {\n        const response = await uploadCode(data);\n        return response.data;\n    }\n);\n\nexport const getUploadsAsync = createAsyncThunk(\n    'review/getUploads',\n    async () => {\n        const response = await getCreatedUploads();\n        return response;\n    }\n);\n\nexport const reviewSlice = createSlice({\n    name: 'review',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(codeCompletionAsync.fulfilled, (state, action) => {\n                //todo add to redux\n            })\n            .addCase(uploadCodeAsync.fulfilled, (state, action) => {\n                //todo add to redux\n            })\n            .addCase(getUploadsAsync.fulfilled, (state, action) => {\n                state.createdUploads.concat(action.payload.codes);\n            })\n    },\n});\n\nexport const {} = reviewSlice.actions;\n\nexport const selectCreatedUploads = (state) => state.review.createdUploads;\n\nexport default reviewSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}