{"ast":null,"code":"import _objectSpread from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useRef,useEffect}from\"react\";import{fromRange}from\"xpath-range\";import{v4 as uuidv4}from'uuid';import Navbar from\"../../general/navbar/Navbar\";import UploadFadeIn from\"./UploadFadeIn\";import'../../../styles/shared/main.css';import'../../../styles/shared/editor/editor.css';import\"../../../slice/authSlice\";import{codeCompletionAsync,uploadCodeAsync}from\"../../../slice/reviewSlice\";import{history}from\"../../../helpers/history\";import{useDispatch}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Editor=function Editor(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),insertTxtStage=_useState2[0],setInsertTxtStage=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),txt=_useState4[0],setTxt=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),selTxt=_useState6[0],setSelTxt=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),tempCodes=_useState8[0],setTempCodes=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),finalUploadStage=_useState10[0],setFinalUploadStage=_useState10[1];var dispatch=useDispatch();//todo security checks\n/**\n     * @function (01) ensure that the empty sign has the correct height\n     */useEffect(function(){//01\ndocument.getElementsByClassName('empty_editor')[0].style.height=document.getElementsByClassName('code_input')[0].offsetHeight+'px';},[]);/**\n     * @function (01) define the target by choosing the complementary of the scrolled div\n     *           (02) assign scroll toÃ¼ and scroll left to the target based on the event scrolled position\n     */var syncScroll=function syncScroll(e,origin){//01\nvar target=origin==='display'?document.getElementsByClassName('code_input')[0]:document.getElementsByClassName('code_display')[0];//02\ntarget.scrollTop=e.currentTarget.scrollTop;target.scrollLeft=e.currentTarget.scrollLeft;};//==================================================\n/**\n     * @function (01) check that there is no overlapping regarding the codes\n     *           (02) highlight the code\n     *           (03) push into data structure (updates the code overview on the right side)\n     */var addCode=function addCode(){//01\nvar startOverlapCheck=tempCodes.filter(function(code){return selTxt.start>code.start&&selTxt.start<code.end;});var endOverlapCheck=tempCodes.filter(function(code){return selTxt.end<code.end&&selTxt.end>code.start;});//todo check that this code has not been used yet\nif(startOverlapCheck.length>0||endOverlapCheck.length>0)return alert('No overlaps possbile');//02\nsetSelectionRange(selTxt.start,selTxt.end);//highlight(\"yellow\");\n//03\nsetTempCodes(function(currentCodes){return[].concat(_toConsumableArray(currentCodes),[selTxt]);});};/**\n     * @function (00) wait until typing ended and dispatch send to backend for code completion and wait\n     *           (01) duplicate the array\n     *           (02) find the array entry by index\n     *           (03) add code to this entry\n     * @param e is the event\n     * @param i is the index of the array element which is\n     * @param type either id or desc of the code - required for the autocompletion\n     */var typingTimerEdit;var editCode=function editCode(e,i,type){//00\nclearTimeout(typingTimerEdit);if(!e.target.value)return;typingTimerEdit=setTimeout(function(){dispatch(codeCompletionAsync({type:type,val:e.target.value})).then(function(res){if(res.payload.matches.length!==1){document.getElementsByClassName('ind_code_display')[i].style.border=\"1px solid red\";return document.getElementsByClassName('large_code_section')[i].value='Zu viele Ergebnisse - '+res.payload.matches.length;}//01\nvar newArr=_toConsumableArray(tempCodes);//02\nvar mergedObj=_objectSpread(_objectSpread({},newArr[i]),{},{icdCode:e.target.value,icdCodeDesc:res.payload.matches[0][2]});newArr[i]=mergedObj;//03\nsetTempCodes(newArr);//04\ndocument.getElementsByClassName('large_code_section')[i].value=res.payload.matches[0][2];//05\ndocument.getElementsByClassName('ind_code_display')[i].style.border=\"none\";}).catch(function(err){console.log(err);});},200);};/**\n     * @function (01) duplicate the array\n     *           (02) splice the array\n     *           (03) set the new temp codes\n     * @param i index of the highlight which is deleted\n     */var removeTxt=function removeTxt(i){var newArr=_toConsumableArray(tempCodes);//02\nnewArr.splice(i,1);//03\nsetTempCodes(newArr);};//==================================================\n//todo next section\n/**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */var selector=function selector(e){//01\nvar select=window.getSelection(),selectRange=select.getRangeAt(0),selectPos=selectRange.getBoundingClientRect(),codeInput=document.getElementsByClassName('code_input')[0],codeInputPos=codeInput.getBoundingClientRect(),tooltip=document.getElementById('tooltip_editor_wrapper');//02\nif(selectPos.width<1)return tooltip.style.display=\"none\";//03\ntooltip.style.display=\"inline\";tooltip.style.top=selectPos.top-codeInputPos.top-tooltip.offsetHeight-10+codeInput.scrollTop+'px';tooltip.style.left=selectPos.left-codeInputPos.left+selectPos.width/2-tooltip.offsetWidth/2+'px';//04\nvar xpath=fromRange(selectRange,codeInput);setSelTxt(_objectSpread(_objectSpread({},selTxt),{val:selectRange.toString(),start:xpath.startOffset,end:xpath.endOffset,id:uuidv4(),top:selectPos.top-codeInputPos.top+codeInput.scrollTop-5}));};/**\n     * @function (01)\n     *           (02)\n     * @param start\n     * @param end\n     */function setSelectionRange(start,end){var el=document.getElementsByClassName('code_input')[0];var range=document.createRange();range.selectNodeContents(el);var textNodes=getTextNodesIn(el);var foundStart=false;var charCount=0,endCharCount;for(var i=0,textNode;textNode=textNodes[i++];){endCharCount=charCount+textNode.length;if(!foundStart&&start>=charCount&&(start<endCharCount||start==endCharCount&&i<=textNodes.length)){range.setStart(textNode,start-charCount);foundStart=true;}if(foundStart&&end<=endCharCount){range.setEnd(textNode,end-charCount);break;}charCount=endCharCount;}var sel=window.getSelection();sel.removeAllRanges();sel.addRange(range);//Helper functions\nfunction getTextNodesIn(node){var textNodes=[];if(node.nodeType===3){textNodes.push(node);}else{var children=node.childNodes;for(var i=0,len=children.length;i<len;++i){textNodes.push.apply(textNodes,getTextNodesIn(children[i]));}}return textNodes;}}/**\n     * @function\n     * @param colour\n     */function highlight(colour){var range,sel;sel=window.getSelection();if(sel.rangeCount&&sel.getRangeAt){range=sel.getRangeAt(0);}document.designMode=\"on\";sel.removeAllRanges();sel.addRange(range);document.execCommand(\"BackColor\",false,colour);document.designMode=\"off\";}//==================================================\n/**\n     * @function (00) check if the div has any type of input\n     *           (01) update the state of the of the insertTxtStage\n     *           (02) adjust the heights\n     */var endEditMode=function endEditMode(){//00\nif(txt===\"\")return alert('we need some text');//01\nsetInsertTxtStage(false);//02\ndocument.getElementById('internal_code_display').style.height=document.getElementsByClassName('code_input')[0].scrollHeight+'px';};/**\n     * @function (01) update the current text\n     *           (02) if the text is empty\n     */var addTxt=function addTxt(e){//01\nsetTxt(e.currentTarget.innerHTML);//02\nif(e.currentTarget.innerHTML===\"\")e.currentTarget.innerHTML=\"copy & paste patient record and anonymize it\";};/**\n     * @function (01) prevent the default behavior\n     *           (02) select the clipboard\n     *           (03) insert the plain text\n     *           (04) update the txt variable\n     */var pasteTxt=function pasteTxt(e){//01\ne.preventDefault();var content;//02\nif(e.clipboardData){//03\ncontent=(e.originalEvent||e).clipboardData.getData('text/plain');document.execCommand('insertText',false,content);}else if(window.clipboardData){//03\ncontent=window.clipboardData.getData('Text');document.selection.createRange().pasteHTML(content);}//04\nsetTxt(content);};//==================================================\n/**\n     * @function (01) check if any codes were added - if not return + that every code has an icd code allocated\n     *           (02) fade in the final upload overview - where tags, difficulty, internal use and title are provided\n     */var proceedUpload=function proceedUpload(){//01\nif(tempCodes.length<1)return alert(\"please provide at least one code\");if(tempCodes.filter(function(code){return!code.hasOwnProperty('icdCode')||code.icdCode===\"\";}).length!==0)return alert(\"allocate icd code\");//02\nsetFinalUploadStage(true);};/**\n     * @function (01) prevent default\n     *           (02) create a merged object of text, codes\n     *           (03) upload via dispatch and wait for success\n     *           (04) on success clear the view and let user create a new - reset the inital state\n     */var uploadCodes=function uploadCodes(e){//01\ne.preventDefault();setFinalUploadStage(false);//02\nvar codeDataObj=_objectSpread({initialCodes:tempCodes,txt:txt},Object.fromEntries(new FormData(e.target)));//03\ndispatch(uploadCodeAsync(codeDataObj)).then(function(res){//04\nwindow.location.reload();}).catch(function(err){console.log('error',err);});};// ==========================\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"center_container\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"main_center_content_wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"main_outer_content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"main_outer_heading\",children:\"Code editor\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"main_center_content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"code_input\",onPaste:function onPaste(e){return pasteTxt(e);},placeholder:\"Copy & paste patient record and anonymize it in the editor...\",onKeyUp:insertTxtStage&&addTxt,contentEditable:insertTxtStage?\"true\":\"false\",onMouseUp:!insertTxtStage&&selector,onScroll:function onScroll(e){return syncScroll(e,'input');},children:!insertTxtStage&&/*#__PURE__*/_jsx(\"div\",{id:\"tooltip_editor_wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"tooltip_btn\",onClick:addCode,children:\"Code hinzuf\\xFCgen\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"code_display\",children:/*#__PURE__*/_jsx(\"div\",{id:\"internal_code_display\",onScroll:function onScroll(e){return syncScroll(e,'input');},children:tempCodes.length>0?tempCodes.map(function(code,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"ind_code_display\",id:code.id,style:{top:code.top+'px'},children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Code ID\",className:\"small_code_section\",onChange:function onChange(e){return editCode(e,i,'id');}}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Code Desc\",className:\"large_code_section\",readOnly:true}),/*#__PURE__*/_jsx(\"div\",{className:\"remove_code_btn\",onClick:function onClick(){return removeTxt(i);},children:\"X\"})]},i);}):/*#__PURE__*/_jsx(\"div\",{className:\"empty_editor\",children:!insertTxtStage?/*#__PURE__*/_jsx(\"span\",{children:\"Assign codes\"}):/*#__PURE__*/_jsx(\"span\",{children:\"Finalize editing the patient record\"})})})}),finalUploadStage&&/*#__PURE__*/_jsx(UploadFadeIn,{submit:uploadCodes,close:function close(){return setFinalUploadStage(false);}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"main_outer_content right_bound_outer_content\",children:!finalUploadStage&&/*#__PURE__*/_jsx(\"div\",{className:\"editor_submit_btn highlighted_editor_submit_btn\",onClick:function onClick(){return insertTxtStage?endEditMode():proceedUpload();},children:insertTxtStage?/*#__PURE__*/_jsx(\"span\",{children:\"Proceed\"}):/*#__PURE__*/_jsx(\"span\",{children:\"Upload\"})})})]})]});};export default Editor;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/coder/editor/Editor.js"],"names":["React","useState","useRef","useEffect","fromRange","v4","uuidv4","Navbar","UploadFadeIn","codeCompletionAsync","uploadCodeAsync","history","useDispatch","Editor","insertTxtStage","setInsertTxtStage","txt","setTxt","selTxt","setSelTxt","tempCodes","setTempCodes","finalUploadStage","setFinalUploadStage","dispatch","document","getElementsByClassName","style","height","offsetHeight","syncScroll","e","origin","target","scrollTop","currentTarget","scrollLeft","addCode","startOverlapCheck","filter","code","start","end","endOverlapCheck","length","alert","setSelectionRange","currentCodes","typingTimerEdit","editCode","i","type","clearTimeout","value","setTimeout","val","then","res","payload","matches","border","newArr","mergedObj","icdCode","icdCodeDesc","catch","err","console","log","removeTxt","splice","selector","select","window","getSelection","selectRange","getRangeAt","selectPos","getBoundingClientRect","codeInput","codeInputPos","tooltip","getElementById","width","display","top","left","offsetWidth","xpath","toString","startOffset","endOffset","id","el","range","createRange","selectNodeContents","textNodes","getTextNodesIn","foundStart","charCount","endCharCount","textNode","setStart","setEnd","sel","removeAllRanges","addRange","node","nodeType","push","children","childNodes","len","apply","highlight","colour","rangeCount","designMode","execCommand","endEditMode","scrollHeight","addTxt","innerHTML","pasteTxt","preventDefault","content","clipboardData","originalEvent","getData","selection","pasteHTML","proceedUpload","hasOwnProperty","uploadCodes","codeDataObj","initialCodes","Object","fromEntries","FormData","location","reload","map"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\nimport { fromRange } from \"xpath-range\"\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Navbar from \"../../general/navbar/Navbar\";\nimport UploadFadeIn from \"./UploadFadeIn\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/shared/editor/editor.css';\n\nimport {} from \"../../../slice/authSlice\";\nimport {codeCompletionAsync, uploadCodeAsync} from \"../../../slice/reviewSlice\";\nimport {history} from \"../../../helpers/history\";\n\n\nimport {useDispatch} from \"react-redux\";\n\nconst Editor = () => {\n\n    const [insertTxtStage, setInsertTxtStage] = useState(true);\n    const [txt, setTxt] = useState(\"\");\n    const [selTxt, setSelTxt] = useState({})\n    const [tempCodes, setTempCodes] = useState([])\n    const [finalUploadStage, setFinalUploadStage] = useState(false)\n\n    const dispatch = useDispatch();\n\n    //todo security checks\n\n    /**\n     * @function (01) ensure that the empty sign has the correct height\n     */\n    useEffect(() => {\n        //01\n        document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight+'px'\n    }, [])\n\n    /**\n     * @function (01) define the target by choosing the complementary of the scrolled div\n     *           (02) assign scroll toÃ¼ and scroll left to the target based on the event scrolled position\n     */\n    const syncScroll = (e, origin) => {\n        //01\n        const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]\n        //02\n        target.scrollTop = e.currentTarget.scrollTop;\n        target.scrollLeft = e.currentTarget.scrollLeft;\n    }\n\n    //==================================================\n\n    /**\n     * @function (01) check that there is no overlapping regarding the codes\n     *           (02) highlight the code\n     *           (03) push into data structure (updates the code overview on the right side)\n     */\n    const addCode = () => {\n        //01\n        let startOverlapCheck = tempCodes.filter(code => selTxt.start > code.start && selTxt.start < code.end)\n        let endOverlapCheck = tempCodes.filter(code => selTxt.end < code.end && selTxt.end > code.start)\n        //todo check that this code has not been used yet\n        if (startOverlapCheck.length > 0 || endOverlapCheck.length > 0) return alert('No overlaps possbile')\n        //02\n        setSelectionRange(selTxt.start, selTxt.end)\n        //highlight(\"yellow\");\n        //03\n        setTempCodes(currentCodes => [...currentCodes, selTxt]);\n    }\n\n    /**\n     * @function (00) wait until typing ended and dispatch send to backend for code completion and wait\n     *           (01) duplicate the array\n     *           (02) find the array entry by index\n     *           (03) add code to this entry\n     * @param e is the event\n     * @param i is the index of the array element which is\n     * @param type either id or desc of the code - required for the autocompletion\n     */\n    let typingTimerEdit;\n    const editCode = (e, i, type) => {\n        //00\n        clearTimeout(typingTimerEdit);\n        if (!e.target.value) return;\n        typingTimerEdit = setTimeout(() => {\n            dispatch(codeCompletionAsync({type: type, val: e.target.value}))\n                .then((res) => {\n                    if (res.payload.matches.length !== 1) {\n                        document.getElementsByClassName('ind_code_display')[i].style.border = \"1px solid red\";\n                        return document.getElementsByClassName('large_code_section')[i].value = 'Zu viele Ergebnisse - '+res.payload.matches.length\n                    }\n                    //01\n                    let newArr = [...tempCodes];\n                    //02\n                    let mergedObj = {...newArr[i], icdCode: e.target.value, icdCodeDesc: res.payload.matches[0][2]}\n                    newArr[i] = mergedObj;\n                    //03\n                    setTempCodes(newArr);\n                    //04\n                    document.getElementsByClassName('large_code_section')[i].value = res.payload.matches[0][2]\n                    //05\n                    document.getElementsByClassName('ind_code_display')[i].style.border = \"none\";\n                })\n                .catch((err) => {\n                    console.log(err)\n                });\n        }, 200);\n    }\n\n    /**\n     * @function (01) duplicate the array\n     *           (02) splice the array\n     *           (03) set the new temp codes\n     * @param i index of the highlight which is deleted\n     */\n    const removeTxt = (i) => {\n        let newArr = [...tempCodes];\n        //02\n        newArr.splice(i, 1);\n        //03\n        setTempCodes(newArr);\n    }\n\n    //==================================================\n\n    //todo next section\n\n    /**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */\n    const selector = (e) => {\n        //01\n        let select = window.getSelection(),\n            selectRange = select.getRangeAt(0),\n            selectPos = selectRange.getBoundingClientRect(),\n            codeInput = document.getElementsByClassName('code_input')[0],\n            codeInputPos = codeInput.getBoundingClientRect(),\n            tooltip = document.getElementById('tooltip_editor_wrapper');\n        //02\n        if (selectPos.width < 1) return tooltip.style.display = \"none\";\n        //03\n        tooltip.style.display = \"inline\";\n        tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n        tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n        //04\n        let xpath = fromRange(selectRange, codeInput)\n\n        setSelTxt({...selTxt,  ...{\n                val: selectRange.toString(),\n                start: xpath.startOffset,\n                end: xpath.endOffset,\n                id: uuidv4(),\n                top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5\n            },\n        })\n    }\n\n    /**\n     * @function (01)\n     *           (02)\n     * @param start\n     * @param end\n     */\n    function setSelectionRange(start, end) {\n\n        let el = document.getElementsByClassName('code_input')[0];\n\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var textNodes = getTextNodesIn(el);\n        var foundStart = false;\n        var charCount = 0, endCharCount;\n\n        for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n            endCharCount = charCount + textNode.length;\n            if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {\n                range.setStart(textNode, start - charCount);\n                foundStart = true;\n            }\n            if (foundStart && end <= endCharCount) {\n                range.setEnd(textNode, end - charCount);\n                break;\n            }\n            charCount = endCharCount;\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n        //Helper functions\n\n        function getTextNodesIn(node) {\n            var textNodes = [];\n            if (node.nodeType === 3) {\n                textNodes.push(node);\n            } else {\n                var children = node.childNodes;\n                for (var i = 0, len = children.length; i < len; ++i) {\n                    textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n                }\n            }\n            return textNodes;\n        }\n    }\n\n    /**\n     * @function\n     * @param colour\n     */\n    function highlight(colour) {\n\n        let range, sel;\n\n        sel = window.getSelection();\n        if (sel.rangeCount && sel.getRangeAt) {\n            range = sel.getRangeAt(0);\n        }\n        document.designMode = \"on\";\n        sel.removeAllRanges();\n        sel.addRange(range);\n        document.execCommand(\"BackColor\", false, colour);\n        document.designMode = \"off\";\n    }\n\n    //==================================================\n\n    /**\n     * @function (00) check if the div has any type of input\n     *           (01) update the state of the of the insertTxtStage\n     *           (02) adjust the heights\n     */\n    const endEditMode = () => {\n        //00\n        if (txt === \"\") return alert('we need some text')\n        //01\n        setInsertTxtStage(false);\n        //02\n        document.getElementById('internal_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n    }\n\n    /**\n     * @function (01) update the current text\n     *           (02) if the text is empty\n     */\n    const addTxt = (e) => {\n        //01\n        setTxt(e.currentTarget.innerHTML)\n        //02\n        if (e.currentTarget.innerHTML   === \"\") e.currentTarget.innerHTML = \"copy & paste patient record and anonymize it\"\n    }\n\n    /**\n     * @function (01) prevent the default behavior\n     *           (02) select the clipboard\n     *           (03) insert the plain text\n     *           (04) update the txt variable\n     */\n    const pasteTxt = (e) => {\n        //01\n        e.preventDefault();\n        let content;\n        //02\n        if (e.clipboardData) {\n            //03\n            content = (e.originalEvent || e).clipboardData.getData('text/plain');\n            document.execCommand('insertText', false, content);\n        } else if (window.clipboardData) {\n            //03\n            content = window.clipboardData.getData('Text');\n            document.selection.createRange().pasteHTML(content);\n        }\n        //04\n        setTxt(content)\n    }\n\n    //==================================================\n\n    /**\n     * @function (01) check if any codes were added - if not return + that every code has an icd code allocated\n     *           (02) fade in the final upload overview - where tags, difficulty, internal use and title are provided\n     */\n    const proceedUpload = () => {\n        //01\n        if (tempCodes.length < 1) return alert(\"please provide at least one code\");\n        if (tempCodes.filter(code => !code.hasOwnProperty('icdCode') || code.icdCode === \"\").length !== 0) return alert(\"allocate icd code\");\n        //02\n        setFinalUploadStage(true);\n    }\n\n    /**\n     * @function (01) prevent default\n     *           (02) create a merged object of text, codes\n     *           (03) upload via dispatch and wait for success\n     *           (04) on success clear the view and let user create a new - reset the inital state\n     */\n    const uploadCodes = (e) => {\n        //01\n        e.preventDefault();\n        setFinalUploadStage(false);\n        //02\n        let codeDataObj = {initialCodes: tempCodes, txt: txt, ...Object.fromEntries(new FormData(e.target))}\n        //03\n        dispatch(uploadCodeAsync(codeDataObj))\n            .then((res) => {\n                //04\n                window.location.reload();\n            })\n            .catch((err) => {\n                console.log('error', err)\n            })\n    }\n\n    // ==========================\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Code editor</div>\n                </div>\n\n                <div className=\"main_center_content\">\n                    <div className=\"code_input\" onPaste={(e) => pasteTxt(e)} placeholder=\"Copy & paste patient record and anonymize it in the editor...\" onKeyUp={insertTxtStage && addTxt} contentEditable={insertTxtStage ? \"true\" : \"false\"} onMouseUp={!insertTxtStage && selector} onScroll={(e) => syncScroll(e, 'input')}>\n                        {!insertTxtStage &&\n                            <div id=\"tooltip_editor_wrapper\">\n                                <div className=\"tooltip_btn\" onClick={addCode}>Code hinzufÃ¼gen</div>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"code_display\">\n                        <div id=\"internal_code_display\" onScroll={(e) => syncScroll(e, 'input')}>\n                        {\n                            tempCodes.length > 0 ? (\n                                tempCodes.map((code, i) => {\n                                    return <div className=\"ind_code_display\" id={code.id} style={{top:code.top+'px'}} key={i}>\n                                        <input placeholder=\"Code ID\" className=\"small_code_section\" onChange={(e) => editCode(e, i, 'id')}/>\n                                        <input placeholder=\"Code Desc\" className=\"large_code_section\" readOnly/>\n                                        <div className=\"remove_code_btn\" onClick={() => removeTxt(i)}>X</div>\n                                    </div>;\n                                })\n                            ) : (\n                                <div className=\"empty_editor\">{!insertTxtStage ? (<span>Assign codes</span>) : (<span>Finalize editing the patient record</span>)}</div>\n                            )\n                        }\n                        </div>\n                    </div>\n                    {finalUploadStage && <UploadFadeIn submit = {uploadCodes} close = {() => setFinalUploadStage(false)}/>}\n                </div>\n\n                <div className=\"main_outer_content right_bound_outer_content\">\n                    {!finalUploadStage && <div className=\"editor_submit_btn highlighted_editor_submit_btn\" onClick={() => insertTxtStage ? endEditMode() : proceedUpload()}>{insertTxtStage ? <span>Proceed</span> : <span>Upload</span>}</div>}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Editor;\n"]},"metadata":{},"sourceType":"module"}