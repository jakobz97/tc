{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/student/analytics/DetailedAnalytics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport '../../../styles/shared/editor/editor.css';\nimport '../../../styles/shared/fadein.css';\nimport pin from \"../../../assets/general/share.svg\";\nimport { proposeCodeAsync } from \"../../../slice/reviewSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailedAnalytics = _ref => {\n  _s();\n\n  let {\n    data,\n    close\n  } = _ref;\n  const [codeData, setCodeData] = useState([]);\n  const dispatch = useDispatch();\n  /**\n   * @function (01) get the dark background, the content wrapper and the inputs\n   *           (02) increase the dark background opacity\n   *           (03) fade up the content wrapper\n   *           =============\n   *           (04) ensure that the code display has the same length as the overflow text\n   *           (05) ensure that the empty codes text is centered\n   *           (06) process the provided codes to display them\n   */\n\n  useEffect(() => {\n    //01\n    let bg = document.querySelector('.menu_dark_bg'),\n        content = document.querySelector('.create_input_wrapper'); //02\n\n    bg.style.cssText = \"opacity: 100%\"; //03\n\n    content.style.marginTop = \"0\"; //04\n\n    document.getElementById('internal_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight + 'px'; //05\n\n    document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight + 'px'; //06\n\n    displayCodes();\n  }, []);\n  /**\n   * @function (01) get the background and content\n   *           (02) return if user clicked on the content\n   *           (03) user clicked outside of content - hide\n   *           (04) after timeout set state again to hidden\n   */\n\n  const hideView = (e, forced) => {\n    //01\n    let bg = document.querySelector('.menu_dark_bg'),\n        content = document.querySelector('.create_input_wrapper'); //02\n\n    if (!forced && content.contains(e.target)) return; //03\n\n    bg.style.cssText = \"opacity: 0%\";\n    content.style.marginTop = \"150vh\"; //04\n\n    setTimeout(() => close(), 350);\n  };\n  /**\n   * @function (01) define the target by choosing the complementary of the scrolled div\n   *           (02) assign scroll toÃ¼ and scroll left to the target based on the event scrolled position\n   */\n\n\n  const syncScroll = (e, origin) => {\n    //01\n    const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]; //02\n\n    target.scrollTop = e.currentTarget.scrollTop;\n    target.scrollLeft = e.currentTarget.scrollLeft;\n  }; //====================================================================\n\n  /**\n   * @function (01) transform the data provided into state data and enrich with type\n   *           (02) merge into state array\n   */\n\n\n  const displayCodes = () => {\n    //01\n    let studentCodes = data.studentAnswer.codes.map(code => ({ ...code,\n      type: 'student'\n    }));\n    let coderCodes = data.review.initialCodes.map(code => ({ ...code,\n      type: 'coder'\n    })); //02\n\n    setCodeData([...studentCodes, ...coderCodes]);\n  };\n  /**\n   * @function (01) double check that this code is not included by the coder\n   *           (02) form object of all relevant ids\n   *           (03) dispatch the code to the backend\n   */\n\n\n  const proposeCode = code => {\n    //01\n    console.log(data.review.initialCodes);\n    if (data.review.initialCodes.includes(code.icdCode)) return alert('Code was also used by the coder'); //02\n    //03\n\n    dispatch(proposeCodeAsync()).then(res => {\n      console.log(res.payload);\n    }).catch(err => {\n      console.log('err', err);\n    });\n  }; //====================================================================\n\n  /**\n   * @function (01) get all selects and positions\n   *           (02) if only cursor change takes place only hide the tooltip\n   *           (03) reposition tooltip\n   *           (04) set selected text state\n   */\n\n\n  const selector = e => {\n    /*\n    //01\n    let select = window.getSelection(),\n        selectRange = select.getRangeAt(0),\n        selectPos = selectRange.getBoundingClientRect(),\n        codeInput = document.getElementsByClassName('code_input')[0],\n        codeInputPos = codeInput.getBoundingClientRect(),\n        tooltip = document.getElementById('tooltip_editor_wrapper');\n    //02\n    if (selectPos.width < 1) return tooltip.style.display = \"none\";\n    //03\n    tooltip.style.display = \"inline\";\n    tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n    tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n    //04\n    let xpath = fromRange(selectRange, codeInput)\n     setSelTxt({...selTxt,  ...{\n            val: selectRange.toString(),\n            start: xpath.startOffset,\n            end: xpath.endOffset,\n            top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5,\n            id: uuidv4()\n        },\n    })\n     */\n  };\n  /**\n   * @function (01)\n   *           (02)\n   * @param start\n   * @param end\n   */\n\n\n  function setSelectionRange(start, end) {\n    let el = document.getElementsByClassName('code_input')[0];\n    var range = document.createRange();\n    range.selectNodeContents(el);\n    var textNodes = getTextNodesIn(el);\n    var foundStart = false;\n    var charCount = 0,\n        endCharCount;\n\n    for (var i = 0, textNode; textNode = textNodes[i++];) {\n      endCharCount = charCount + textNode.length;\n\n      if (!foundStart && start >= charCount && (start < endCharCount || start == endCharCount && i <= textNodes.length)) {\n        range.setStart(textNode, start - charCount);\n        foundStart = true;\n      }\n\n      if (foundStart && end <= endCharCount) {\n        range.setEnd(textNode, end - charCount);\n        break;\n      }\n\n      charCount = endCharCount;\n    }\n\n    var sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range); //Helper functions\n\n    function getTextNodesIn(node) {\n      var textNodes = [];\n\n      if (node.nodeType === 3) {\n        textNodes.push(node);\n      } else {\n        var children = node.childNodes;\n\n        for (var i = 0, len = children.length; i < len; ++i) {\n          textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n        }\n      }\n\n      return textNodes;\n    }\n  } //====================================================================\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu_dark_bg\",\n    onClick: hideView,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create_input_wrapper enlarged_create_input_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create_input_hide\",\n        onClick: e => {\n          hideView(e, true);\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code_input enlarged_code_input\",\n        onScroll: e => syncScroll(e, 'input'),\n        children: [data.review.txt, /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"tooltip_editor_wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tooltip_btn\",\n            children: \"Code hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code_display enlarged_code_display\",\n        onScroll: e => syncScroll(e, 'display'),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"internal_code_display\",\n          children: codeData.length > 0 ? codeData.map((code, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: code.type === 'student' ? \"ind_code_display personal_ind_code_display\" : \"ind_code_display\",\n              id: code.id,\n              style: {\n                top: code.top + 'px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Code ID\",\n                value: code.icdCode,\n                className: \"small_code_section\",\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Code Desc\",\n                value: code.icdCodeDesc,\n                className: \"large_code_section\",\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this), code.type === 'student' ? /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"remove_code_btn\",\n                onClick: () => proposeCode(code),\n                src: pin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 68\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"remove_code_btn\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 150\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 44\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty_editor\",\n            children: \"Codes werden geladen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetailedAnalytics, \"O0MmYpkHR4CgPUNUmm/1nGCbaWQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DetailedAnalytics;\nexport default DetailedAnalytics;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailedAnalytics\");","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/student/analytics/DetailedAnalytics.js"],"names":["React","useEffect","useState","proposeCodeAsync","useDispatch","useSelector","DetailedAnalytics","data","close","codeData","setCodeData","dispatch","bg","document","querySelector","content","style","cssText","marginTop","getElementById","height","getElementsByClassName","scrollHeight","offsetHeight","displayCodes","hideView","e","forced","contains","target","setTimeout","syncScroll","origin","scrollTop","currentTarget","scrollLeft","studentCodes","studentAnswer","codes","map","code","type","coderCodes","review","initialCodes","proposeCode","console","log","includes","icdCode","alert","then","res","payload","catch","err","selector","setSelectionRange","start","end","el","range","createRange","selectNodeContents","textNodes","getTextNodesIn","foundStart","charCount","endCharCount","i","textNode","length","setStart","setEnd","sel","window","getSelection","removeAllRanges","addRange","node","nodeType","push","children","childNodes","len","apply","txt","id","top","icdCodeDesc","pin"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nimport '../../../styles/shared/editor/editor.css';\nimport '../../../styles/shared/fadein.css';\nimport pin from '../../../assets/general/share.svg';\n\nimport {proposeCodeAsync} from \"../../../slice/reviewSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst DetailedAnalytics = ({ data, close }) => {\n\n    const [codeData, setCodeData] = useState([]);\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01) get the dark background, the content wrapper and the inputs\n     *           (02) increase the dark background opacity\n     *           (03) fade up the content wrapper\n     *           =============\n     *           (04) ensure that the code display has the same length as the overflow text\n     *           (05) ensure that the empty codes text is centered\n     *           (06) process the provided codes to display them\n     */\n    useEffect(() => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        bg.style.cssText = \"opacity: 100%\";\n        //03\n        content.style.marginTop = \"0\";\n        //04\n        document.getElementById('internal_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        //05\n        document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight+'px'\n        //06\n        displayCodes();\n    }, [])\n\n    /**\n     * @function (01) get the background and content\n     *           (02) return if user clicked on the content\n     *           (03) user clicked outside of content - hide\n     *           (04) after timeout set state again to hidden\n     */\n    const hideView = (e, forced) => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        if (!forced && content.contains(e.target)) return;\n        //03\n        bg.style.cssText = \"opacity: 0%\";\n        content.style.marginTop = \"150vh\";\n        //04\n        setTimeout(() => close(), 350)\n    };\n\n    /**\n     * @function (01) define the target by choosing the complementary of the scrolled div\n     *           (02) assign scroll toÃ¼ and scroll left to the target based on the event scrolled position\n     */\n    const syncScroll = (e, origin) => {\n        //01\n        const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]\n        //02\n        target.scrollTop = e.currentTarget.scrollTop;\n        target.scrollLeft = e.currentTarget.scrollLeft;\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) transform the data provided into state data and enrich with type\n     *           (02) merge into state array\n     */\n    const displayCodes = () => {\n        //01\n        let studentCodes = data.studentAnswer.codes.map(code => ({...code, type: 'student'}))\n        let coderCodes = data.review.initialCodes.map(code => ({...code, type: 'coder'}))\n        //02\n        setCodeData([...studentCodes, ...coderCodes])\n    }\n\n    /**\n     * @function (01) double check that this code is not included by the coder\n     *           (02) form object of all relevant ids\n     *           (03) dispatch the code to the backend\n     */\n    const proposeCode = (code) => {\n        //01\n        console.log(data.review.initialCodes)\n        if (data.review.initialCodes.includes(code.icdCode)) return alert('Code was also used by the coder')\n\n        //02\n\n        //03\n        dispatch(proposeCodeAsync())\n            .then((res) => {\n                console.log(res.payload)\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */\n    const selector = (e) => {\n        /*\n        //01\n        let select = window.getSelection(),\n            selectRange = select.getRangeAt(0),\n            selectPos = selectRange.getBoundingClientRect(),\n            codeInput = document.getElementsByClassName('code_input')[0],\n            codeInputPos = codeInput.getBoundingClientRect(),\n            tooltip = document.getElementById('tooltip_editor_wrapper');\n        //02\n        if (selectPos.width < 1) return tooltip.style.display = \"none\";\n        //03\n        tooltip.style.display = \"inline\";\n        tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n        tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n        //04\n        let xpath = fromRange(selectRange, codeInput)\n\n        setSelTxt({...selTxt,  ...{\n                val: selectRange.toString(),\n                start: xpath.startOffset,\n                end: xpath.endOffset,\n                top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5,\n                id: uuidv4()\n            },\n        })\n         */\n    }\n\n    /**\n     * @function (01)\n     *           (02)\n     * @param start\n     * @param end\n     */\n    function setSelectionRange(start, end) {\n\n        let el = document.getElementsByClassName('code_input')[0];\n\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var textNodes = getTextNodesIn(el);\n        var foundStart = false;\n        var charCount = 0, endCharCount;\n\n        for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n            endCharCount = charCount + textNode.length;\n            if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {\n                range.setStart(textNode, start - charCount);\n                foundStart = true;\n            }\n            if (foundStart && end <= endCharCount) {\n                range.setEnd(textNode, end - charCount);\n                break;\n            }\n            charCount = endCharCount;\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n        //Helper functions\n\n        function getTextNodesIn(node) {\n            var textNodes = [];\n            if (node.nodeType === 3) {\n                textNodes.push(node);\n            } else {\n                var children = node.childNodes;\n                for (var i = 0, len = children.length; i < len; ++i) {\n                    textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n                }\n            }\n            return textNodes;\n        }\n    }\n\n    //====================================================================\n\n    return (\n        <div className=\"menu_dark_bg\" onClick={hideView}>\n            <div className=\"create_input_wrapper enlarged_create_input_wrapper\">\n                <div className=\"create_input_hide\" onClick={(e) => {hideView(e, true)}}>X</div>\n                <div className=\"code_input enlarged_code_input\" onScroll={(e) => syncScroll(e, 'input')}>\n                    {data.review.txt}\n                    <div id=\"tooltip_editor_wrapper\">\n                        <div className=\"tooltip_btn\">Code hinzufÃ¼gen</div>\n                    </div>\n                </div>\n                <div className=\"code_display enlarged_code_display\" onScroll={(e) => syncScroll(e, 'display')}>\n                    <div id=\"internal_code_display\">\n                        {\n                            codeData.length > 0 ? (\n                                codeData.map((code, i) => {\n                                    return <div className={code.type === 'student' ? \"ind_code_display personal_ind_code_display\" : \"ind_code_display\"} id={code.id} style={{top:code.top+'px'}} key={i}>\n                                        <input placeholder=\"Code ID\" value={code.icdCode} className=\"small_code_section\" readOnly/>\n                                        <input placeholder=\"Code Desc\" value={code.icdCodeDesc} className=\"large_code_section\" readOnly/>\n                                        {code.type === 'student' ? <img className=\"remove_code_btn\" onClick={() => proposeCode(code)} src={pin} /> : <div className=\"remove_code_btn\"></div>}\n                                    </div>;\n                                })\n                            ) : (\n                                <div className=\"empty_editor\">Codes werden geladen</div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DetailedAnalytics;\n"]},"metadata":{},"sourceType":"module"}