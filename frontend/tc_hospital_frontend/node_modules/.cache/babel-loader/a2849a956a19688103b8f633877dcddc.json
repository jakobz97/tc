{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { selectIsLoggedIn, selectMessage, selectUserType, loginAsync } from \"../../slice/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { history } from \"../../helpers/history\";\nimport '../../styles/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const message = useSelector(selectMessage);\n  const dispatch = useDispatch(); //Change handlers\n\n  const changeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const changePassword = e => {\n    setPassword(e.target.value);\n  };\n  /**\n   * @function (01)\n   */\n\n\n  const performLogin = e => {\n    e.preventDefault();\n    setLoading(true); //history.push(`/${userType}`);\n    //window.location.reload();\n\n    /*\n    dispatch(loginAsync({email: email, password: password}))\n        .then(() => {\n            props.history.push(\"/profile\");\n            window.location.reload();\n        })\n        .catch(() => {\n            setLoading(false);\n        });\n     */\n  }; //if (isLoggedIn) return <Redirect to=\"/profile\" />;\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login_section\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: performLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          className: \"\",\n          placeholder: \"E-Mail\",\n          type: \"email\",\n          required: true,\n          onChange: changeEmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          className: \"\",\n          placeholder: \"Password\",\n          type: \"password\",\n          required: true,\n          onChange: changePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Processing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        role: \"alert\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"6zvJsy26DvoXRTG16nhDLu3C70o=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Login.js"],"names":["React","useState","Redirect","selectIsLoggedIn","selectMessage","selectUserType","loginAsync","useDispatch","useSelector","history","Login","email","setEmail","password","setPassword","loading","setLoading","isLoggedIn","message","dispatch","changeEmail","e","target","value","changePassword","performLogin","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAAQC,gBAAR,EAA0BC,aAA1B,EAAyCC,cAAzC,EAAyDC,UAAzD,QAA0E,uBAA1E;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,OAAO,wBAAP;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMgB,UAAU,GAAGT,WAAW,CAACL,gBAAD,CAA9B;AACA,QAAMe,OAAO,GAAGV,WAAW,CAACJ,aAAD,CAA3B;AAEA,QAAMe,QAAQ,GAAGZ,WAAW,EAA5B,CAVgB,CAYhB;;AACA,QAAMa,WAAW,GAAIC,CAAD,IAAO;AACvBT,IAAAA,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAGA,QAAMC,cAAc,GAAIH,CAAD,IAAO;AAC1BP,IAAAA,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;AAIA;AACJ;AACA;;;AACI,QAAME,YAAY,GAAIJ,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACK,cAAF;AAEAV,IAAAA,UAAU,CAAC,IAAD,CAAV,CAHwB,CAKxB;AACA;;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACK,GAlBD,CAvBgB,CA2ChB;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BAEI;AAAM,QAAA,QAAQ,EAAES,YAAhB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,SAAS,EAAC,EAA9B;AAAiC,UAAA,WAAW,EAAC,QAA7C;AAAsD,UAAA,IAAI,EAAC,OAA3D;AAAmE,UAAA,QAAQ,MAA3E;AAA4E,UAAA,QAAQ,EAAEL;AAAtF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,SAAS,EAAC,EAAjC;AAAoC,UAAA,WAAW,EAAC,UAAhD;AAA2D,UAAA,IAAI,EAAC,UAAhE;AAA2E,UAAA,QAAQ,MAAnF;AAAoF,UAAA,QAAQ,EAAEI;AAA9F;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA,qBACKT,OAAO,iBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADjB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAWKG,OAAO,iBACJ;AAAK,QAAA,SAAS,EAAC,EAAf;AAAkB,QAAA,IAAI,EAAC,OAAvB;AAAA,kBACKA;AADL;AAAA;AAAA;AAAA;AAAA,cAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAvED;;GAAMR,K;UAOiBF,W,EACHA,W,EAECD,W;;;KAVfG,K;AAyEN,eAAeA,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport {selectIsLoggedIn, selectMessage, selectUserType, loginAsync} from \"../../slice/authSlice\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { history } from \"../../helpers/history\";\n\nimport '../../styles/Login.css';\n\nconst Login = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [loading, setLoading] = useState(false);\n\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    const message = useSelector(selectMessage);\n\n    const dispatch = useDispatch();\n\n    //Change handlers\n    const changeEmail = (e) => {\n        setEmail(e.target.value);\n    };\n    const changePassword = (e) => {\n        setPassword(e.target.value);\n    };\n\n    /**\n     * @function (01)\n     */\n    const performLogin = (e) => {\n        e.preventDefault();\n\n        setLoading(true);\n\n        //history.push(`/${userType}`);\n        //window.location.reload();\n\n        /*\n        dispatch(loginAsync({email: email, password: password}))\n            .then(() => {\n                props.history.push(\"/profile\");\n                window.location.reload();\n            })\n            .catch(() => {\n                setLoading(false);\n            });\n         */\n    };\n\n    //if (isLoggedIn) return <Redirect to=\"/profile\" />;\n\n    return (\n        <div className=\"login_wrapper\">\n            <div className=\"login_section\">\n\n                <form onSubmit={performLogin}>\n                    <input name=\"email\" className=\"\" placeholder=\"E-Mail\" type=\"email\" required onChange={changeEmail}/>\n                    <input name=\"password\" className=\"\" placeholder=\"Password\" type=\"password\" required onChange={changePassword}/>\n                    <button type=\"submit\">\n                        {loading && (<span>Processing</span>)}\n                        <span>Login</span>\n                    </button>\n                </form>\n\n                {message && (\n                    <div className=\"\" role=\"alert\">\n                        {message}\n                    </div>\n                )}\n\n            </div>\n\n\n\n\n        </div>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}