{"ast":null,"code":"import _objectSpread from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{history}from\"../../../helpers/history\";import{selectIsLoggedIn,selectUserType}from\"../../../slice/authSlice\";import{selectUserData,getUserAsync}from\"../../../slice/userSlice\";import{getSuitableUploadsAsync}from\"../../../slice/reviewSlice\";import'../../../styles/shared/main.css';import'../../../styles/main/student/search/Search.css';import Navbar from\"../../general/navbar/Navbar\";import SearchResults from\"./Results\";import Editor from\"../editor/Editor\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Search=function Search(){var dispatch=useDispatch();var loggedIn=useSelector(selectIsLoggedIn);var userType=useSelector(selectUserType);var userData=useSelector(selectUserData);var _useState=useState({internalIndex:0,externalIndex:0}),_useState2=_slicedToArray(_useState,2),searchIndex=_useState2[0],setSearchIndex=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),visibleEditor=_useState4[0],setVisibleEditor=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),selectedTask=_useState6[0],setSelectedTask=_useState6[1];if(!loggedIn||userType!=='student'){history.push(\"/login\");window.location.reload();}/**\n     * @function (00) check if user data exists in redux - if not load the data\n     *           (01) load suitable tasks via dispatch\n     *           (02) hide the loading sign once fulfilled\n     */useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://00\nif(Object.keys(userData).length===0)dispatch(getUserAsync());//01\ndispatch(getSuitableUploadsAsync(searchIndex)).then(function(res){//02\n}).catch(function(err){console.log('error',err);});case 2:case\"end\":return _context.stop();}}},_callee);})),[]);/**\n     * @function (01) update the paginatiopn index counter\n     *           (02) dispatch the updated suitable upload and update the redux state variable\n     */var paginateResults=function paginateResults(){};/**\n     * @function (00) check if user has already answered this task\n     *           (01) set the selected task data\n     *           (02) make the editor visible\n     * @param taskData object of the entire task\n     */var selectTask=function selectTask(taskData){//00\nif(userData.answeredUploads&&userData.answeredUploads.filter(function(review){return review[0]===taskData._id.toString();}).length>0)return alert('already answered');//01\nsetSelectedTask(_objectSpread(_objectSpread({},selectedTask),taskData));//02\nsetVisibleEditor(true);};return/*#__PURE__*/_jsxs(\"div\",{className:\"center_container\",children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"main_center_content_wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"main_outer_content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"main_outer_heading\",children:\"Suche\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"main_center_content\",children:[/*#__PURE__*/_jsx(SearchResults,{type:\"extReviews\",title:\"Von anderen Universitäten\",select:selectTask}),/*#__PURE__*/_jsx(SearchResults,{type:\"intReviews\",title:\"Meine Universität\",select:selectTask}),visibleEditor&&/*#__PURE__*/_jsx(Editor,{taskData:selectedTask,close:function close(){return setVisibleEditor(false);}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"main_outer_content right_bound_outer_content\"})]})]});};export default Search;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/search/Search.js"],"names":["React","useState","useEffect","useDispatch","useSelector","history","selectIsLoggedIn","selectUserType","selectUserData","getUserAsync","getSuitableUploadsAsync","Navbar","SearchResults","Editor","Search","dispatch","loggedIn","userType","userData","internalIndex","externalIndex","searchIndex","setSearchIndex","visibleEditor","setVisibleEditor","selectedTask","setSelectedTask","push","window","location","reload","Object","keys","length","then","res","catch","err","console","log","paginateResults","selectTask","taskData","answeredUploads","filter","review","_id","toString","alert"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nimport {selectIsLoggedIn, selectUserType} from \"../../../slice/authSlice\";\nimport {selectUserData, getUserAsync} from \"../../../slice/userSlice\";\nimport {getSuitableUploadsAsync} from \"../../../slice/reviewSlice\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/main/student/search/Search.css';\n\nimport Navbar from \"../../general/navbar/Navbar\";\n\nimport SearchResults from \"./Results\";\nimport Editor from \"../editor/Editor\";\n\n\nconst Search = () => {\n\n    const dispatch = useDispatch();\n\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userType = useSelector(selectUserType);\n    const userData = useSelector(selectUserData);\n\n    const [searchIndex, setSearchIndex] = useState({\n        internalIndex: 0,\n        externalIndex: 0\n    })\n    const [visibleEditor, setVisibleEditor] = useState(false)\n    const [selectedTask, setSelectedTask] = useState({})\n\n    if (!loggedIn || userType !== 'student') {\n        history.push(\"/login\");\n        window.location.reload();\n    }\n\n    /**\n     * @function (00) check if user data exists in redux - if not load the data\n     *           (01) load suitable tasks via dispatch\n     *           (02) hide the loading sign once fulfilled\n     */\n    useEffect(async () => {\n        //00\n        if (Object.keys(userData).length === 0) dispatch(getUserAsync());\n        //01\n        dispatch(getSuitableUploadsAsync(searchIndex))\n            .then((res) => {\n                //02\n            })\n            .catch((err) => {\n                console.log('error', err)\n            })\n    }, [])\n\n    /**\n     * @function (01) update the paginatiopn index counter\n     *           (02) dispatch the updated suitable upload and update the redux state variable\n     */\n    const paginateResults = () => {\n\n    }\n\n    /**\n     * @function (00) check if user has already answered this task\n     *           (01) set the selected task data\n     *           (02) make the editor visible\n     * @param taskData object of the entire task\n     */\n    const selectTask = (taskData) => {\n        //00\n        if (userData.answeredUploads && userData.answeredUploads.filter(review => review[0] === taskData._id.toString()).length > 0) return alert('already answered')\n        //01\n        setSelectedTask({...selectedTask, ...taskData})\n        //02\n        setVisibleEditor(true);\n    }\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Suche</div>\n                </div>\n\n                <div className=\"main_center_content\">\n                    <SearchResults type = {\"extReviews\"} title = {\"Von anderen Universitäten\"} select = {selectTask} />\n                    <SearchResults type = {\"intReviews\"} title = {\"Meine Universität\"} select = {selectTask} />\n                    { visibleEditor && <Editor taskData = {selectedTask} close = {() => setVisibleEditor(false)}/> }\n                </div>\n\n                <div className=\"main_outer_content right_bound_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}