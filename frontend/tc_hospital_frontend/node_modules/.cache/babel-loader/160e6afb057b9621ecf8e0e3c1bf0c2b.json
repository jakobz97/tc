{"ast":null,"code":"import _slicedToArray from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import\"../../../styles/shared/navbar/Tooltip.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Tooltip=function Tooltip(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),active=_useState2[0],setActive=_useState2[1];var showTip=function showTip(){setActive(true);};var hideTip=function hideTip(){setActive(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"Tooltip-Wrapper\"// When to show the tooltip\n,onMouseEnter:showTip,onMouseLeave:hideTip,children:[props.children,active&&/*#__PURE__*/_jsx(\"div\",{className:\"Tooltip-Tip \".concat(props.direction||\"top\"),children:props.content})]});};export default Tooltip;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/navbar/Tooltip.js"],"names":["React","useState","Tooltip","props","active","setActive","showTip","hideTip","children","direction","content"],"mappings":"qLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,2CAAP,C,wFAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CAEvB,cAA4BF,QAAQ,CAAC,KAAD,CAApC,wCAAOG,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClBD,SAAS,CAAC,IAAD,CAAT,CACH,CAFD,CAIA,GAAME,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClBF,SAAS,CAAC,KAAD,CAAT,CACH,CAFD,CAIA,mBACI,aACI,SAAS,CAAC,iBACV;AAFJ,CAGI,YAAY,CAAEC,OAHlB,CAII,YAAY,CAAEC,OAJlB,WAOKJ,KAAK,CAACK,QAPX,CAQKJ,MAAM,eACH,YAAK,SAAS,uBAAiBD,KAAK,CAACM,SAAN,EAAmB,KAApC,CAAd,UAEKN,KAAK,CAACO,OAFX,EATR,GADJ,CAiBH,CA7BD,CA+BA,cAAeR,CAAAA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"../../../styles/shared/navbar/Tooltip.css\";\n\nconst Tooltip = (props) => {\n\n    const [active, setActive] = useState(false);\n\n    const showTip = () => {\n        setActive(true);\n    };\n\n    const hideTip = () => {\n        setActive(false);\n    };\n\n    return (\n        <div\n            className=\"Tooltip-Wrapper\"\n            // When to show the tooltip\n            onMouseEnter={showTip}\n            onMouseLeave={hideTip}\n        >\n            {/* Wrapping */}\n            {props.children}\n            {active && (\n                <div className={`Tooltip-Tip ${props.direction || \"top\"}`}>\n                    {/* Content */}\n                    {props.content}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}