{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { currentOrders, pastOrders } from '../services/user.service';\nconst initialState = {\n  currentOrders: [],\n  pastOrders: []\n};\nexport const currentOrderAsync = createAsyncThunk('customer/fetchCurrentOrders', async () => {\n  const response = await currentOrders();\n  return response.data;\n});\nexport const pastOrderAsync = createAsyncThunk('customer/fetchPastOrders', async () => {\n  const response = await pastOrders();\n  return response.data;\n});\nexport const adminSlice = createSlice({\n  name: 'admin',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(currentOrderAsync.pending, state => {\n      console.log('loading current orders');\n    }).addCase(currentOrderAsync.fulfilled, (state, action) => {\n      console.log('loaded current orders');\n      state.currentOrders = action.payload;\n    }).addCase(pastOrderAsync.pending, state => {\n      console.log('loading past orders');\n    }).addCase(pastOrderAsync.fulfilled, (state, action) => {\n      console.log('loaded past orders');\n      state.pastOrders = action.payload;\n    });\n  }\n});\nexport const {} = adminSlice.actions;\nexport const selectCurrentOrders = state => state.admin.currentOrders;\nexport const selectPastOrders = state => state.admin.pastOrders;\nexport default adminSlice.reducer;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/slice/adminSlice.js"],"names":["createAsyncThunk","createSlice","currentOrders","pastOrders","initialState","currentOrderAsync","response","data","pastOrderAsync","adminSlice","name","reducers","extraReducers","builder","addCase","pending","state","console","log","fulfilled","action","payload","actions","selectCurrentOrders","admin","selectPastOrders","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,0BAA1C;AAEA,MAAMC,YAAY,GAAG;AACjBF,EAAAA,aAAa,EAAE,EADE;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAArB;AAKA,OAAO,MAAME,iBAAiB,GAAGL,gBAAgB,CAC7C,6BAD6C,EAE7C,YAAY;AACR,QAAMM,QAAQ,GAAG,MAAMJ,aAAa,EAApC;AACA,SAAOI,QAAQ,CAACC,IAAhB;AACH,CAL4C,CAA1C;AAQP,OAAO,MAAMC,cAAc,GAAGR,gBAAgB,CAC1C,0BAD0C,EAE1C,YAAY;AACR,QAAMM,QAAQ,GAAG,MAAMH,UAAU,EAAjC;AACA,SAAOG,QAAQ,CAACC,IAAhB;AACH,CALyC,CAAvC;AAQP,OAAO,MAAME,UAAU,GAAGR,WAAW,CAAC;AAClCS,EAAAA,IAAI,EAAE,OAD4B;AAElCN,EAAAA,YAFkC;AAGlCO,EAAAA,QAAQ,EAAE,EAHwB;AAKlCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CACFC,OADL,CACaT,iBAAiB,CAACU,OAD/B,EACyCC,KAAD,IAAW;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,KAHL,EAIKJ,OAJL,CAIaT,iBAAiB,CAACc,SAJ/B,EAI0C,CAACH,KAAD,EAAQI,MAAR,KAAmB;AACrDH,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAF,MAAAA,KAAK,CAACd,aAAN,GAAsBkB,MAAM,CAACC,OAA7B;AACH,KAPL,EAQKP,OARL,CAQaN,cAAc,CAACO,OAR5B,EAQsCC,KAAD,IAAW;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,KAVL,EAWKJ,OAXL,CAWaN,cAAc,CAACW,SAX5B,EAWuC,CAACH,KAAD,EAAQI,MAAR,KAAmB;AAClDH,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAF,MAAAA,KAAK,CAACb,UAAN,GAAmBiB,MAAM,CAACC,OAA1B;AACH,KAdL;AAeH;AArBiC,CAAD,CAA9B;AAwBP,OAAO,MAAM,KAAKZ,UAAU,CAACa,OAAtB;AAEP,OAAO,MAAMC,mBAAmB,GAAIP,KAAD,IAAWA,KAAK,CAACQ,KAAN,CAAYtB,aAAnD;AACP,OAAO,MAAMuB,gBAAgB,GAAIT,KAAD,IAAWA,KAAK,CAACQ,KAAN,CAAYrB,UAAhD;AAIP,eAAeM,UAAU,CAACiB,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { currentOrders, pastOrders } from '../services/user.service';\n\nconst initialState = {\n    currentOrders: [],\n    pastOrders: []\n};\n\nexport const currentOrderAsync = createAsyncThunk(\n    'customer/fetchCurrentOrders',\n    async () => {\n        const response = await currentOrders();\n        return response.data;\n    }\n);\n\nexport const pastOrderAsync = createAsyncThunk(\n    'customer/fetchPastOrders',\n    async () => {\n        const response = await pastOrders();\n        return response.data;\n    }\n);\n\nexport const adminSlice = createSlice({\n    name: 'admin',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(currentOrderAsync.pending, (state) => {\n                console.log('loading current orders')\n            })\n            .addCase(currentOrderAsync.fulfilled, (state, action) => {\n                console.log('loaded current orders')\n                state.currentOrders = action.payload;\n            })\n            .addCase(pastOrderAsync.pending, (state) => {\n                console.log('loading past orders')\n            })\n            .addCase(pastOrderAsync.fulfilled, (state, action) => {\n                console.log('loaded past orders')\n                state.pastOrders = action.payload;\n            })\n    },\n});\n\nexport const {} = adminSlice.actions;\n\nexport const selectCurrentOrders = (state) => state.admin.currentOrders;\nexport const selectPastOrders = (state) => state.admin.pastOrders;\n\n\n\nexport default adminSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}