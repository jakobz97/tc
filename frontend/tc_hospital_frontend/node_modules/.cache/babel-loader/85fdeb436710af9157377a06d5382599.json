{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/main/student/search/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoggedIn, selectUserType } from \"../../../../slice/authSlice\";\nimport \"../../../../slice/reviewSlice\";\nimport '../../../../styles/shared/main.css';\nimport '../../../../styles/main/student/search/Search.css';\nimport Navbar from \"../../general/navbar/Navbar\";\nimport SearchResults from \"../../student/search/Results\";\nimport Editor from \"../../student/editor/Editor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const loggedIn = useSelector(selectIsLoggedIn);\n  const userType = useSelector(selectUserType);\n  const suitableTasks = useSelector(selectIsLoggedIn);\n  const [visibleEditor, setVisibleEditor] = useState(false);\n  const [selectedTask, setSelectedTask] = useState({}); //todo check if user is logged in\n\n  /**\n   * @function (01)\n   */\n\n  useEffect(() => {}, []);\n  /**\n   * @function (01) set the selected task data\n   *           (02) make the editor visible\n   * @param taskData object of the entire task\n   */\n\n  const selectTask = taskData => {\n    //01\n    setSelectedTask({ ...selectedTask,\n      ...taskData\n    }); //02\n\n    setVisibleEditor(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center_container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main_center_content_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_outer_content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main_outer_heading\",\n          children: \"Suche\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_center_content\",\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          data: suitableTasks,\n          title: \"Von anderen Universit채ten\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n          data: suitableTasks,\n          title: \"Meine Universit채t\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), visibleEditor && /*#__PURE__*/_jsxDEV(Editor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main_outer_content right_bound_outer_content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"wB/6wW3/TCF41j+Tp8SlcfJl1rc=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/components/main/student/search/Search.js"],"names":["React","useState","useRef","useEffect","useSelector","selectIsLoggedIn","selectUserType","Navbar","SearchResults","Editor","Search","loggedIn","userType","suitableTasks","visibleEditor","setVisibleEditor","selectedTask","setSelectedTask","selectTask","taskData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AAEA,SAAQC,WAAR,QAA0B,aAA1B;AAEA,SAAQC,gBAAR,EAA0BC,cAA1B,QAA+C,6BAA/C;AACA,OAAe,+BAAf;AAEA,OAAO,oCAAP;AACA,OAAO,mDAAP;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;;AAGA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAMC,QAAQ,GAAGP,WAAW,CAACC,gBAAD,CAA5B;AACA,QAAMO,QAAQ,GAAGR,WAAW,CAACE,cAAD,CAA5B;AACA,QAAMO,aAAa,GAAGT,WAAW,CAACC,gBAAD,CAAjC;AAEA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD,CAPiB,CASjB;;AAEA;AACJ;AACA;;AACIE,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAIA;AACJ;AACA;AACA;AACA;;AACI,QAAMe,UAAU,GAAIC,QAAD,IAAc;AAC7B;AACAF,IAAAA,eAAe,CAAC,EAAC,GAAGD,YAAJ;AAAkB,SAAGG;AAArB,KAAD,CAAf,CAF6B,CAG7B;;AACAJ,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACI,QAAC,aAAD;AAAe,UAAA,IAAI,EAAIF,aAAvB;AAAsC,UAAA,KAAK,EAAI;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,aAAD;AAAe,UAAA,IAAI,EAAIA,aAAvB;AAAsC,UAAA,KAAK,EAAI;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGMC,aAAa,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAHvB;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAWI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAhDD;;GAAMJ,M;UAEeN,W,EACAA,W,EACKA,W;;;KAJpBM,M;AAkDN,eAAeA,MAAf","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\";\n\nimport {useSelector} from \"react-redux\";\n\nimport {selectIsLoggedIn, selectUserType} from \"../../../../slice/authSlice\";\nimport {} from \"../../../../slice/reviewSlice\";\n\nimport '../../../../styles/shared/main.css';\nimport '../../../../styles/main/student/search/Search.css';\n\nimport Navbar from \"../../general/navbar/Navbar\";\n\nimport SearchResults from \"../../student/search/Results\";\nimport Editor from \"../../student/editor/Editor\";\n\n\nconst Search = () => {\n\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userType = useSelector(selectUserType);\n    const suitableTasks = useSelector(selectIsLoggedIn);\n\n    const [visibleEditor, setVisibleEditor] = useState(false)\n    const [selectedTask, setSelectedTask] = useState({})\n\n    //todo check if user is logged in\n\n    /**\n     * @function (01)\n     */\n    useEffect(() => {\n\n    }, [])\n\n    /**\n     * @function (01) set the selected task data\n     *           (02) make the editor visible\n     * @param taskData object of the entire task\n     */\n    const selectTask = (taskData) => {\n        //01\n        setSelectedTask({...selectedTask, ...taskData})\n        //02\n        setVisibleEditor(true)\n    }\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Suche</div>\n                </div>\n\n                <div className=\"main_center_content\">\n                    <SearchResults data = {suitableTasks} title = {\"Von anderen Universit채ten\"}/>\n                    <SearchResults data = {suitableTasks} title = {\"Meine Universit채t\"} />\n                    { visibleEditor && <Editor /> }\n                </div>\n\n                <div className=\"main_outer_content right_bound_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}