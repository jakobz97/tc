{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/menu/MenuCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { selectMenu, setMenu, selectCurrentCategory } from \"../../../slice/menuSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport '../../../styles/sub/menu/MenuCreate.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MenuCreate = _ref => {\n  _s();\n\n  let {\n    hide\n  } = _ref;\n  const menuList = useSelector(selectMenu);\n  const categorySelected = useSelector(selectCurrentCategory);\n  const [ingredientList, addIngredient] = useState([]);\n  const [allergenList, addAllergen] = useState([]);\n  const [extraList, addExtra] = useState([]);\n  const dispatch = useDispatch();\n  /**\n   *\n   */\n\n  useEffect(() => {\n    let bg = document.querySelector('.menu_dark_bg'),\n        content = document.querySelector('.menu_input_wrapper');\n    bg.style.cssText = \"opacity: 100%\";\n    content.style.marginTop = \"0\";\n  }, []);\n  /**\n   * @function (01) obtain value of input and check that not empty\n   *           (02) use selector to check if category already exists\n   *           (03) dispatch to menu reducer and add to data structure\n   *           (04) hide the add category view again\n   */\n\n  const addMenu = e => {\n    //01\n    e.preventDefault();\n    /**\n     *\n     *\n     <input placeholder=\"Zutaten\"/> aus dem usestate extrahieren\n     <input placeholder=\"Allergene\"/>\n     * aus dem use state extrahieren\n     *\n     */\n    //const val = document.querySelector('.category_input').value;\n    //if (!val) return alert('provide value');\n    //02\n    //if (menuList.filter(category => category.name.toLowerCase() === val.toLowerCase()).length !== 0) return alert('already exists');\n    //03 todo set dish to a given category\n    //dispatch(setMenu({name: val, rank: 1, dishes:[]}));\n    //04\n\n    hideMenuAddView(null, true);\n  };\n  /**\n   * @function (01) get the background and content\n   *           (02) return if user clicked on the content\n   *           (03) user clicked outside of content - hide\n   *           (04) after timeout set state again to hidden\n   */\n\n\n  const hideMenuAddView = (e, forced) => {\n    //01\n    let bg = document.querySelector('.menu_dark_bg'),\n        content = document.querySelector('.menu_input_wrapper'); //02\n\n    if (!forced && content.contains(e.target)) return; //03\n\n    bg.style.cssText = \"opacity: 0%\";\n    content.style.marginTop = \"150vh\"; //04\n\n    setTimeout(() => hide(), 350);\n  };\n  /**\n   * @function (01) use the type to get the respective input and its value\n   *           (02) check that the value is not empty\n   *           (03) perform check if this value already exists in the list\n   *           (04) add to the list based on type\n   * @param type can either be ingredient or allergen\n   */\n\n\n  const addIngredientData = type => {\n    //01\n    const val = document.getElementById(type).value; //02\n\n    if (!val) return alert('provide value'); //03 + 04\n\n    if (type === 'allergen_input') {\n      if (allergenList.includes(val)) return alert('ist schon drin');\n      addAllergen([...allergenList, val]);\n    } else {\n      if (ingredientList.includes(val)) return alert('ist schon drin');\n      addIngredient([...ingredientList, val]);\n    }\n  }; //todo autocomplete ingredients, allergen - if new value occurs add to the list and make it accessible to other people -> im Backend dann schauen ob es das ding schon gibt wenn nicht erstellen und verlinken\n\n  /**\n   *\n   * @param type\n   * @param val\n   */\n\n\n  const addExtraOffer = (desc, price) => {};\n  /**\n   * @function (01)\n   * @param e\n   */\n\n\n  const onChangeMenuImg = e => {\n    document.getElementById('menu_img_placeholder').setAttribute('src', URL.createObjectURL(e.target.files[0]));\n  };\n  /**\n   * @function (01)\n   */\n\n\n  const deleteMenuImg = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu_dark_bg\",\n    onClick: hideMenuAddView,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu_input_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu_input_hide\",\n        onClick: e => {\n          hideMenuAddView(e, true);\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"menu_create_form\",\n        onSubmit: addMenu,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"menu_img_placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"menu_img_create\",\n            className: \"\",\n            type: \"file\",\n            name: \"menu_img\",\n            onChange: onChangeMenuImg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"menu_img_create\",\n            children: \"Bild hochladen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"menu_name\",\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"menu_desc\",\n          placeholder: \"Beschreibung\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu_sub_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"ingredient_input\",\n            type: \"text\",\n            placeholder: \"Zutaten hinzuf\\xFCgen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => addIngredientData('ingredient_input'),\n            children: \"add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), ingredientList.map((elem, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: elem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 36\n            }, this);\n          }), \";\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu_sub_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"allergen_input\",\n            type: \"text\",\n            placeholder: \"Allergene\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => addIngredientData('allergen_input'),\n            children: \"add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), allergenList.map((elem, i) => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: elem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 36\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"menu_desc\",\n          placeholder: \"Vegan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"menu_desc\",\n          placeholder: \"Fleisch -> \\xF6ffnet dann gar grad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"menu_desc\",\n          placeholder: \"Sch\\xE4rfegrad bestimmen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu_sub_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Extras Liste mit Preis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Beschreibung\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\u20AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"ct.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: addExtraOffer()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), extraList.map((elem, i) => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"elem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 36\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Angebot inkl Zeitraum und Preis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\u20AC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"ct.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"category_submit\",\n          children: \"Hinzuf\\xFCgen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MenuCreate, \"vLDeY5aX1yYXJIoeQnA+1O18Yj4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = MenuCreate;\nexport default MenuCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuCreate\");","map":{"version":3,"sources":["/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/menu/MenuCreate.js"],"names":["React","useState","useEffect","selectMenu","setMenu","selectCurrentCategory","useDispatch","useSelector","MenuCreate","hide","menuList","categorySelected","ingredientList","addIngredient","allergenList","addAllergen","extraList","addExtra","dispatch","bg","document","querySelector","content","style","cssText","marginTop","addMenu","e","preventDefault","hideMenuAddView","forced","contains","target","setTimeout","addIngredientData","type","val","getElementById","value","alert","includes","addExtraOffer","desc","price","onChangeMenuImg","setAttribute","URL","createObjectURL","files","deleteMenuImg","map","elem","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport {selectMenu, setMenu, selectCurrentCategory} from \"../../../slice/menuSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport '../../../styles/sub/menu/MenuCreate.css';\n\nconst MenuCreate = ({ hide }) => {\n    const menuList = useSelector(selectMenu)\n    const categorySelected = useSelector(selectCurrentCategory)\n\n    const [ingredientList, addIngredient] = useState([]);\n    const [allergenList, addAllergen] = useState([]);\n    const [extraList, addExtra] = useState([]);\n\n    const dispatch = useDispatch();\n\n    /**\n     *\n     */\n    useEffect(() => {\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.menu_input_wrapper');\n        bg.style.cssText = \"opacity: 100%\";\n        content.style.marginTop = \"0\";\n    }, [])\n\n\n    /**\n     * @function (01) obtain value of input and check that not empty\n     *           (02) use selector to check if category already exists\n     *           (03) dispatch to menu reducer and add to data structure\n     *           (04) hide the add category view again\n     */\n    const addMenu = (e) => {\n        //01\n        e.preventDefault();\n\n\n        /**\n         *\n         *\n         <input placeholder=\"Zutaten\"/> aus dem usestate extrahieren\n         <input placeholder=\"Allergene\"/>\n         * aus dem use state extrahieren\n         *\n         */\n\n        //const val = document.querySelector('.category_input').value;\n        //if (!val) return alert('provide value');\n        //02\n        //if (menuList.filter(category => category.name.toLowerCase() === val.toLowerCase()).length !== 0) return alert('already exists');\n        //03 todo set dish to a given category\n        //dispatch(setMenu({name: val, rank: 1, dishes:[]}));\n        //04\n        hideMenuAddView(null, true)\n    };\n\n    /**\n     * @function (01) get the background and content\n     *           (02) return if user clicked on the content\n     *           (03) user clicked outside of content - hide\n     *           (04) after timeout set state again to hidden\n     */\n    const hideMenuAddView = (e, forced) => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.menu_input_wrapper');\n        //02\n        if (!forced && content.contains(e.target)) return;\n        //03\n        bg.style.cssText = \"opacity: 0%\";\n        content.style.marginTop = \"150vh\";\n        //04\n        setTimeout(() => hide(), 350)\n    };\n\n    /**\n     * @function (01) use the type to get the respective input and its value\n     *           (02) check that the value is not empty\n     *           (03) perform check if this value already exists in the list\n     *           (04) add to the list based on type\n     * @param type can either be ingredient or allergen\n     */\n    const addIngredientData = (type) => {\n        //01\n        const val = document.getElementById(type).value\n        //02\n        if (!val) return alert('provide value')\n        //03 + 04\n        if (type === 'allergen_input') {\n            if (allergenList.includes(val)) return alert('ist schon drin')\n            addAllergen([...allergenList, val])\n        } else {\n            if (ingredientList.includes(val)) return alert('ist schon drin')\n            addIngredient([...ingredientList, val])\n        }\n    }\n\n\n    //todo autocomplete ingredients, allergen - if new value occurs add to the list and make it accessible to other people -> im Backend dann schauen ob es das ding schon gibt wenn nicht erstellen und verlinken\n\n    /**\n     *\n     * @param type\n     * @param val\n     */\n    const addExtraOffer = (desc, price) => {\n\n    }\n\n    /**\n     * @function (01)\n     * @param e\n     */\n    const onChangeMenuImg = (e) => {\n        document.getElementById('menu_img_placeholder').setAttribute('src', URL.createObjectURL(e.target.files[0]));\n    };\n    /**\n     * @function (01)\n     */\n    const deleteMenuImg = () => {\n\n    }\n\n    return (\n        <div className=\"menu_dark_bg\" onClick={hideMenuAddView}>\n            <div className=\"menu_input_wrapper\">\n                <div className=\"menu_input_hide\" onClick={(e) => {hideMenuAddView(e, true)}}>X</div>\n                <form className=\"menu_create_form\" onSubmit={addMenu}>\n                    <div className=\"\">\n                        <img id=\"menu_img_placeholder\" />\n                        <input id=\"menu_img_create\" className=\"\" type=\"file\" name=\"menu_img\" onChange={onChangeMenuImg}/>\n                        <label for=\"menu_img_create\">Bild hochladen</label>\n                    </div>\n                    <input type=\"text\" name=\"menu_name\" placeholder=\"Name\"/>\n                    <input type=\"text\" name=\"menu_desc\" placeholder=\"Beschreibung\"/>\n                    {/*todo liste mit zutaten die nachher dem form hinzugefügt werden*/}\n                    <div className=\"menu_sub_container\">\n                        <input id=\"ingredient_input\" type=\"text\" placeholder=\"Zutaten hinzufügen\" />\n                        <div onClick={() => addIngredientData('ingredient_input')}>add</div>\n                        {ingredientList.map((elem, i) => {\n                            return <div>\n                                <span>{elem}</span>\n                            </div>\n                        })};\n                    </div>\n                    <div className=\"menu_sub_container\">\n                        <input id=\"allergen_input\" type=\"text\" placeholder=\"Allergene\" />\n                        <div onClick={() => addIngredientData('allergen_input')}>add</div>\n                        {allergenList.map((elem, i) => {\n                            return <span>{elem}</span>\n                        })}\n                    </div>\n\n\n                    <input type=\"text\" name=\"menu_desc\" placeholder=\"Vegan\"/>\n                    <input type=\"text\" name=\"menu_desc\" placeholder=\"Fleisch -> öffnet dann gar grad\"/>\n                    <input type=\"text\" name=\"menu_desc\" placeholder=\"Schärfegrad bestimmen\"/>\n\n\n                    <div className=\"menu_sub_container\">\n                        <input placeholder=\"Extras Liste mit Preis\"/>\n                        <input type=\"text\" placeholder=\"Beschreibung\" />\n                        <input type=\"text\" placeholder=\"€\" />\n                        <input type=\"text\" placeholder=\"ct.\" />\n                        <div onClick={addExtraOffer()}></div>\n                        {extraList.map((elem, i) => {\n                            return <span>elem</span>\n                        })}\n                    </div>\n\n                    <input placeholder=\"Angebot inkl Zeitraum und Preis\"/>\n                    <input placeholder=\"€\"/>\n                    <input placeholder=\"ct.\"/>\n\n                    <button className=\"category_submit\">Hinzufügen</button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default MenuCreate;\n"]},"metadata":{},"sourceType":"module"}