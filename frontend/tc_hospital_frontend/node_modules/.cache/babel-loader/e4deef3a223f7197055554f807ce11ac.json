{"ast":null,"code":"var _jsxFileName = \"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/menu/CategoryItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { selectMenu, setMenu } from \"../../../slice/menuSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport '../../../styles/sub/menu/CategoryItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CategoryItems = () => {\n  _s();\n\n  const menuList = useSelector(selectMenu);\n  const dispatch = useDispatch();\n  /**\n   * @function (01)\n   */\n\n  const removeCategory = (e, forced) => {//todo have double check in place where name has to be repeated\n  }; //todo drag and drop and change order - https://codepen.io/retrofuturistic/pen/tlbHE\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: menuList.length > 0 ? menuList.map((item, key) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 32\n      }, this);\n    }) //menuList.map(category => <li key={category.name} >category.name</li>)\n    : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n\n_s(CategoryItems, \"wKjznJYyq4ZFOKAXQ2Gj2A53gBs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CategoryItems;\nexport default CategoryItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryItems\");","map":{"version":3,"sources":["/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/menu/CategoryItems.js"],"names":["React","useState","useEffect","selectMenu","setMenu","useDispatch","useSelector","CategoryItems","menuList","dispatch","removeCategory","e","forced","length","map","item","key","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAAQC,UAAR,EAAoBC,OAApB,QAAkC,0BAAlC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,OAAO,2CAAP;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAMC,QAAQ,GAAGF,WAAW,CAACH,UAAD,CAA5B;AACA,QAAMM,QAAQ,GAAGJ,WAAW,EAA5B;AAEA;AACJ;AACA;;AACI,QAAMK,cAAc,GAAG,CAACC,CAAD,EAAIC,MAAJ,KAAe,CAClC;AACH,GAFD,CARwB,CAYxB;;;AAEA,sBACI;AAAA,cACKJ,QAAQ,CAACK,MAAT,GAAkB,CAAlB,GAGOL,QAAQ,CAACM,GAAT,CAAc,CAACC,IAAD,EAAMC,GAAN,KAAa;AACvB,0BAAO;AAAA,+BACH;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA;AADG,SAASD,GAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AAGH,KAJD,CAHP,CAWG;AAXH,mBAaG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdR,mBADJ;AAmBH,CAjCD;;GAAMT,a;UAEeD,W,EACAD,W;;;KAHfE,a;AAmCN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport {selectMenu, setMenu} from \"../../../slice/menuSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport '../../../styles/sub/menu/CategoryItem.css';\n\nconst CategoryItems = () => {\n\n    const menuList = useSelector(selectMenu)\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01)\n     */\n    const removeCategory = (e, forced) => {\n        //todo have double check in place where name has to be repeated\n    };\n\n    //todo drag and drop and change order - https://codepen.io/retrofuturistic/pen/tlbHE\n\n    return (\n        <>\n            {menuList.length > 0 ? (\n\n\n                    menuList.map( (item,key)=> {\n                        return <tr key={key}>\n                            <td>{item.name}</td>\n                        </tr>\n                    })\n\n\n\n                //menuList.map(category => <li key={category.name} >category.name</li>)\n            ) : (\n                <span>Empty</span>\n            )}\n        </>\n    );\n};\n\nexport default CategoryItems;\n"]},"metadata":{},"sourceType":"module"}