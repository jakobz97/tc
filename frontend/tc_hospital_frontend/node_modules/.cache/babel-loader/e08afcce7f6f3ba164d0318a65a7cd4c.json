{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { codeCompletion } from '../services/editor.service';\nconst initialState = {};\nexport const codeCompletionAsync = createAsyncThunk('editor/codeCompletion', async data => {\n  const response = await codeCompletion(data);\n  return response.data;\n});\nexport const editorSlice = createSlice({\n  name: 'editor',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(codeCompletionAsync.fulfilled, (state, action) => {//todo add to redux \n    });\n  }\n});\nexport const {} = editorSlice.actions;\nexport default editorSlice.reducer;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/slice/editorSlice.js"],"names":["createAsyncThunk","createSlice","codeCompletion","initialState","codeCompletionAsync","data","response","editorSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","actions","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,cAAT,QAA+B,4BAA/B;AAEA,MAAMC,YAAY,GAAG,EAArB;AAIA,OAAO,MAAMC,mBAAmB,GAAGJ,gBAAgB,CAC/C,uBAD+C,EAE/C,MAAOK,IAAP,IAAgB;AACZ,QAAMC,QAAQ,GAAG,MAAMJ,cAAc,CAACG,IAAD,CAArC;AACA,SAAOC,QAAQ,CAACD,IAAhB;AACH,CAL8C,CAA5C;AAQP,OAAO,MAAME,WAAW,GAAGN,WAAW,CAAC;AACnCO,EAAAA,IAAI,EAAE,QAD6B;AAEnCL,EAAAA,YAFmC;AAGnCM,EAAAA,QAAQ,EAAE,EAHyB;AAKnCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CACFC,OADL,CACaR,mBAAmB,CAACS,SADjC,EAC4C,CAACC,KAAD,EAAQC,MAAR,KAAmB,CACvD;AACH,KAHL;AAIH;AAVkC,CAAD,CAA/B;AAaP,OAAO,MAAM,KAAKR,WAAW,CAACS,OAAvB;AAEP,eAAeT,WAAW,CAACU,OAA3B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { codeCompletion } from '../services/editor.service';\n\nconst initialState = {\n\n};\n\nexport const codeCompletionAsync = createAsyncThunk(\n    'editor/codeCompletion',\n    async (data) => {\n        const response = await codeCompletion(data);\n        return response.data;\n    }\n);\n\nexport const editorSlice = createSlice({\n    name: 'editor',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(codeCompletionAsync.fulfilled, (state, action) => {\n                //todo add to redux \n            })\n    },\n});\n\nexport const {} = editorSlice.actions;\n\nexport default editorSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}