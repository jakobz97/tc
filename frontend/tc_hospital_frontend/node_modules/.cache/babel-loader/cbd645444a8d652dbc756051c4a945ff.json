{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { activeLinks, getUsers, inviteUser, removeUser } from '../services/admin.service';\nconst initialState = {\n  activeLinks: [],\n  userList: []\n};\nexport const currentLinksAsync = createAsyncThunk('admin/fetchActiveLinks', async () => {\n  return await activeLinks();\n});\nexport const getUserAsync = createAsyncThunk('admin/getUserList', async () => {\n  return await getUsers();\n});\nexport const removeUserAsync = createAsyncThunk('admin/removeUser', async () => {\n  return await removeUser();\n});\nexport const inviteUserAsync = createAsyncThunk('admin/invite', async userData => {\n  return await inviteUser(userData);\n});\nexport const adminSlice = createSlice({\n  name: 'admin',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(currentLinksAsync.fulfilled, (state, action) => {\n      console.log('loaded current orders');\n      state.currentOrders = action.payload;\n    }).addCase(getUserAsync.fulfilled, (state, action) => {\n      return { ...state,\n        userList: action.payload.userList\n      };\n    }).addCase(removeUserAsync.fulfilled, (state, action) => {//return {...state, userList: action.payload.userList}\n    }).addCase(inviteUserAsync.fulfilled, (state, action) => {\n      console.log('loaded past orders');\n      state.pastOrders = action.payload;\n    });\n  }\n});\nexport const {} = adminSlice.actions;\nexport const selectActiveLinks = state => state.admin.activeLinks;\nexport const selectUserList = state => state.admin.userList;\nexport default adminSlice.reducer;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/adminSlice.js"],"names":["createAsyncThunk","createSlice","activeLinks","getUsers","inviteUser","removeUser","initialState","userList","currentLinksAsync","getUserAsync","removeUserAsync","inviteUserAsync","userData","adminSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","console","log","currentOrders","payload","pastOrders","actions","selectActiveLinks","admin","selectUserList","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAAQC,WAAR,EAAqBC,QAArB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA4D,2BAA5D;AAEA,MAAMC,YAAY,GAAG;AACjBJ,EAAAA,WAAW,EAAE,EADI;AAEjBK,EAAAA,QAAQ,EAAE;AAFO,CAArB;AAKA,OAAO,MAAMC,iBAAiB,GAAGR,gBAAgB,CAC7C,wBAD6C,EAE7C,YAAY;AACR,SAAO,MAAME,WAAW,EAAxB;AACH,CAJ4C,CAA1C;AAOP,OAAO,MAAMO,YAAY,GAAGT,gBAAgB,CACxC,mBADwC,EAExC,YAAY;AACR,SAAO,MAAMG,QAAQ,EAArB;AACH,CAJuC,CAArC;AAOP,OAAO,MAAMO,eAAe,GAAGV,gBAAgB,CAC3C,kBAD2C,EAE3C,YAAY;AACR,SAAO,MAAMK,UAAU,EAAvB;AACH,CAJ0C,CAAxC;AAOP,OAAO,MAAMM,eAAe,GAAGX,gBAAgB,CAC3C,cAD2C,EAE3C,MAAOY,QAAP,IAAoB;AAChB,SAAO,MAAMR,UAAU,CAACQ,QAAD,CAAvB;AACH,CAJ0C,CAAxC;AAOP,OAAO,MAAMC,UAAU,GAAGZ,WAAW,CAAC;AAClCa,EAAAA,IAAI,EAAE,OAD4B;AAElCR,EAAAA,YAFkC;AAGlCS,EAAAA,QAAQ,EAAE,EAHwB;AAKlCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CACFC,OADL,CACaV,iBAAiB,CAACW,SAD/B,EAC0C,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrDC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAH,MAAAA,KAAK,CAACI,aAAN,GAAsBH,MAAM,CAACI,OAA7B;AACH,KAJL,EAKKP,OALL,CAKaT,YAAY,CAACU,SAL1B,EAKqC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChD,aAAO,EAAC,GAAGD,KAAJ;AAAWb,QAAAA,QAAQ,EAAEc,MAAM,CAACI,OAAP,CAAelB;AAApC,OAAP;AACH,KAPL,EAQKW,OARL,CAQaR,eAAe,CAACS,SAR7B,EAQwC,CAACC,KAAD,EAAQC,MAAR,KAAmB,CACnD;AACH,KAVL,EAWKH,OAXL,CAWaP,eAAe,CAACQ,SAX7B,EAWwC,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnDC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAH,MAAAA,KAAK,CAACM,UAAN,GAAmBL,MAAM,CAACI,OAA1B;AACH,KAdL;AAeH;AArBiC,CAAD,CAA9B;AAwBP,OAAO,MAAM,KAAKZ,UAAU,CAACc,OAAtB;AAEP,OAAO,MAAMC,iBAAiB,GAAIR,KAAD,IAAWA,KAAK,CAACS,KAAN,CAAY3B,WAAjD;AACP,OAAO,MAAM4B,cAAc,GAAIV,KAAD,IAAWA,KAAK,CAACS,KAAN,CAAYtB,QAA9C;AAEP,eAAeM,UAAU,CAACkB,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {activeLinks, getUsers, inviteUser, removeUser} from '../services/admin.service';\n\nconst initialState = {\n    activeLinks: [],\n    userList: []\n};\n\nexport const currentLinksAsync = createAsyncThunk(\n    'admin/fetchActiveLinks',\n    async () => {\n        return await activeLinks();\n    }\n);\n\nexport const getUserAsync = createAsyncThunk(\n    'admin/getUserList',\n    async () => {\n        return await getUsers();\n    }\n);\n\nexport const removeUserAsync = createAsyncThunk(\n    'admin/removeUser',\n    async () => {\n        return await removeUser();\n    }\n);\n\nexport const inviteUserAsync = createAsyncThunk(\n    'admin/invite',\n    async (userData) => {\n        return await inviteUser(userData);\n    }\n);\n\nexport const adminSlice = createSlice({\n    name: 'admin',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(currentLinksAsync.fulfilled, (state, action) => {\n                console.log('loaded current orders')\n                state.currentOrders = action.payload;\n            })\n            .addCase(getUserAsync.fulfilled, (state, action) => {\n                return {...state, userList: action.payload.userList}\n            })\n            .addCase(removeUserAsync.fulfilled, (state, action) => {\n                //return {...state, userList: action.payload.userList}\n            })\n            .addCase(inviteUserAsync.fulfilled, (state, action) => {\n                console.log('loaded past orders')\n                state.pastOrders = action.payload;\n            })\n    },\n});\n\nexport const {} = adminSlice.actions;\n\nexport const selectActiveLinks = (state) => state.admin.activeLinks;\nexport const selectUserList = (state) => state.admin.userList;\n\nexport default adminSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}