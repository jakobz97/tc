{"ast":null,"code":"import _objectSpread from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState,CSSProperties}from\"react\";import{Redirect}from'react-router-dom';import Select from'react-select';import{signUpAsync}from\"../../../slice/authSlice\";import{useDispatch,useSelector}from\"react-redux\";import{history}from\"../../../helpers/history\";import\"../../../styles/main/general/landing/Signup.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Signup=function Signup(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selectedOption=_useState4[0],setSelectedOption=_useState4[1];var dispatch=useDispatch();/**\n     * @function (01) prevent the default and update to loading state\n     *           (02) check if hospital option was selected - if not return\n     *           (03) merge with the form object\n     *           (02) dispatch to the signup reducer and wait until fulfilled\n     */var performSignup=function performSignup(e){//01\ne.preventDefault();setLoading(true);//02\nif(!selectedOption)return alert('please select a hospital');//03\nvar signupData=_objectSpread(_objectSpread({},Object.fromEntries(new FormData(e.target))),{hospitalCode:selectedOption.value,hospitalName:selectedOption.label});//02\ndispatch(signUpAsync(signupData)).then(function(res){history.push(\"/admin/invite/\");window.location.reload();}).catch(function(err){console.log(err);setLoading(false);});};// =================================\nvar options=[{value:'00001',label:'DONAUISAR Klinikum Deggendorf-Dingolfing-Landau'},{value:'00002',label:'Klinikum Bremen Mitte'},{value:'00003',label:'Klinikum Bremen links der Weser'}];var customStyles={option:function option(provided,state){return _objectSpread(_objectSpread({},provided),{},{borderBottom:'2px dotted green',color:state.isSelected?'yellow':'black',backgroundColor:state.isSelected?'green':'white',width:'100%',height:\"200%\"});},control:function control(provided){return _objectSpread(_objectSpread({},provided),{},{margin:\"4% 0 4% 0\",width:\"34vw\",borderRadius:\"8px\",height:\"8vh\",backgroundColor:\"white\",padding:\"0 2.5% 0 2.5%\",fontSize:\"1em\",color:'#505DF7',textAlign:'center',border:'none'});},placeholder:function placeholder(defaultStyles){return _objectSpread(_objectSpread({},defaultStyles),{},{fontSize:'1em',color:'#505DF7',textAlign:'center'});}};// =================================\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"main_section right_main_section\",children:/*#__PURE__*/_jsx(\"div\",{id:\"cta_wrapper\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"su_section\",onSubmit:performSignup,children:[/*#__PURE__*/_jsx(\"input\",{className:\"signup_input short_input\",name:\"firstName\",placeholder:\"First name\",type:\"text\",required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"signup_input short_input\",name:\"lastName\",placeholder:\"Last name\",type:\"text\",required:true}),/*#__PURE__*/_jsx(Select,{placeholder:\"Choose hospital ...\",styles:customStyles,options:options,onChange:setSelectedOption}),/*#__PURE__*/_jsx(\"input\",{className:\"signup_input short_input\",name:\"email\",placeholder:\"E-Mail\",type:\"email\",required:true}),/*#__PURE__*/_jsx(\"input\",{className:\"signup_input short_input\",name:\"password\",placeholder:\"Password\",type:\"password\",required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"signup_input signup_btn\",children:loading?\"Processing ...\":\"Signup\"})]})})});};export default Signup;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/landing/Signup.js"],"names":["React","useEffect","useState","CSSProperties","Redirect","Select","signUpAsync","useDispatch","useSelector","history","Signup","loading","setLoading","selectedOption","setSelectedOption","dispatch","performSignup","e","preventDefault","alert","signupData","Object","fromEntries","FormData","target","hospitalCode","value","hospitalName","label","then","res","push","window","location","reload","catch","err","console","log","options","customStyles","option","provided","state","borderBottom","color","isSelected","backgroundColor","width","height","control","margin","borderRadius","padding","fontSize","textAlign","border","placeholder","defaultStyles"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, CSSProperties} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\n\nimport {signUpAsync} from \"../../../slice/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { history } from \"../../../helpers/history\";\n\nimport \"../../../styles/main/general/landing/Signup.css\";\n\nconst Signup = () => {\n\n    const [loading, setLoading] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n\n    const dispatch = useDispatch();\n\n\n    /**\n     * @function (01) prevent the default and update to loading state\n     *           (02) check if hospital option was selected - if not return\n     *           (03) merge with the form object\n     *           (02) dispatch to the signup reducer and wait until fulfilled\n     */\n    const performSignup = (e) => {\n        //01\n        e.preventDefault();\n        setLoading(true);\n        //02\n        if (!selectedOption) return alert('please select a hospital')\n        //03\n        let signupData = {...Object.fromEntries(new FormData(e.target)), ...{hospitalCode: selectedOption.value, hospitalName: selectedOption.label}}\n        //02\n        dispatch(signUpAsync(signupData))\n            .then((res) => {\n                history.push(\"/admin/invite/\");\n                window.location.reload();\n            })\n            .catch((err) => {\n                console.log(err)\n                setLoading(false);\n            });\n    };\n\n    // =================================\n\n    const options = [\n        { value: '00001', label: 'DONAUISAR Klinikum Deggendorf-Dingolfing-Landau' },\n        { value: '00002', label: 'Klinikum Bremen Mitte' },\n        { value: '00003', label: 'Klinikum Bremen links der Weser' }\n    ];\n\n    const customStyles = {\n        option: (provided, state) => ({\n            ...provided,\n            borderBottom: '2px dotted green',\n            color: state.isSelected ? 'yellow' : 'black',\n            backgroundColor: state.isSelected ? 'green' : 'white',\n            width: '100%',\n            height: \"200%\"\n        }),\n        control: (provided) => ({\n            ...provided,\n            margin: \"4% 0 4% 0\",\n            width: \"34vw\",\n            borderRadius: \"8px\",\n            height: \"8vh\",\n            backgroundColor: \"white\",\n            padding: \"0 2.5% 0 2.5%\",\n            fontSize: \"1em\",\n            color: '#505DF7',\n            textAlign: 'center',\n            border: 'none'\n        }),\n        placeholder: (defaultStyles) => ({\n            ...defaultStyles,\n            fontSize: '1em',\n            color: '#505DF7',\n            textAlign: 'center'\n        })\n    }\n\n    // =================================\n\n    return (\n        <div className=\"main_section right_main_section\">\n            <div id=\"cta_wrapper\">\n                <form className=\"su_section\" onSubmit={performSignup}>\n                    <input className=\"signup_input short_input\" name=\"firstName\" placeholder=\"First name\" type=\"text\" required />\n                    <input className=\"signup_input short_input\" name=\"lastName\" placeholder=\"Last name\" type=\"text\" required />\n                    <Select\n                        placeholder=\"Choose hospital ...\"\n                        styles = { customStyles }\n                        options = { options }\n                        onChange = { setSelectedOption }\n                    />\n                    <input className=\"signup_input short_input\" name=\"email\" placeholder=\"E-Mail\" type=\"email\" required />\n                    <input className=\"signup_input short_input\" name=\"password\" placeholder=\"Password\" type=\"password\" required/>\n                    <button type=\"submit\" className=\"signup_input signup_btn\">\n                        {loading ? (\"Processing ...\") : (\"Signup\")}\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}