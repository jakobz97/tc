{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userData } from '../services/user.service';\nconst initialState = {\n  userData: {}\n};\nexport const getUserAsync = createAsyncThunk('user/data', async credentials => {\n  return await userData(credentials);\n}); //todo edit user and so on\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUserData: (state, action) => {\n      state.userData = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getUserAsync.fulfilled, (state, action) => {\n      console.log(action.payload.userData);\n      return {\n        userData: action.payload.userData\n      };\n    });\n  }\n});\nexport const {\n  setUserData\n} = userSlice.actions;\nexport const selectUserData = state => state.user.userData;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/code/frontend/tc_hospital_frontend/src/slice/userSlice.js"],"names":["createAsyncThunk","createSlice","userData","initialState","getUserAsync","credentials","userSlice","name","reducers","setUserData","state","action","payload","extraReducers","builder","addCase","fulfilled","console","log","actions","selectUserData","user","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBD,EAAAA,QAAQ,EAAE;AADO,CAArB;AAIA,OAAO,MAAME,YAAY,GAAGJ,gBAAgB,CACxC,WADwC,EAExC,MAAOK,WAAP,IAAuB;AACnB,SAAO,MAAMH,QAAQ,CAACG,WAAD,CAArB;AACH,CAJuC,CAArC,C,CAOP;;AAEA,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;AACjCM,EAAAA,IAAI,EAAE,MAD2B;AAEjCJ,EAAAA,YAFiC;AAGjCK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5BD,MAAAA,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAAxB;AACH;AAHK,GAHuB;AAQjCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CACFC,OADL,CACaX,YAAY,CAACY,SAD1B,EACqC,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAChDM,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACC,OAAP,CAAeV,QAA3B;AACA,aAAO;AACHA,QAAAA,QAAQ,EAAES,MAAM,CAACC,OAAP,CAAeV;AADtB,OAAP;AAGH,KANL;AAOH;AAhBgC,CAAD,CAA7B;AAmBP,OAAO,MAAM;AAAEO,EAAAA;AAAF,IAAkBH,SAAS,CAACa,OAAlC;AAEP,OAAO,MAAMC,cAAc,GAAIV,KAAD,IAAWA,KAAK,CAACW,IAAN,CAAWnB,QAA7C;AAEP,eAAeI,SAAS,CAACgB,OAAzB","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userData } from '../services/user.service';\n\nconst initialState = {\n    userData: {}\n};\n\nexport const getUserAsync = createAsyncThunk(\n    'user/data',\n    async (credentials) => {\n        return await userData(credentials);\n    }\n);\n\n//todo edit user and so on\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        setUserData: (state, action) => {\n            state.userData = action.payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(getUserAsync.fulfilled, (state, action) => {\n                console.log(action.payload.userData)\n                return {\n                    userData: action.payload.userData\n                }\n            })\n    },\n});\n\nexport const { setUserData } = userSlice.actions;\n\nexport const selectUserData = (state) => state.user.userData;\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}