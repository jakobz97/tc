[{"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/index.js":"1","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/App.js":"2","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/serviceWorker.js":"3","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/app/store.js":"4","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/helpers/history.js":"5","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/slice/authSlice.js":"6","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/services/auth.service.js":"7","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/services/auth_header.js":"8","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/LandingPage.js":"9","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Login.js":"10","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Customer.js":"11","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Order.js":"12","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/services/user.service.js":"13","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Signup.js":"14","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/general/Routes.js":"15","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/Navbar.js":"16","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/ind/Tooltip.js":"17","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Menu.js":"18","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/menu/CategoryCreate.js":"19","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/menu/MenuCreate.js":"20","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/slice/employeeSlice.js":"21","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/slice/menuSlice.js":"22","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/services/menu.service.js":"23","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/menu/CategoryItems.js":"24","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/index.js":"25","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/serviceWorker.js":"26","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/App.js":"27","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/app/store.js":"28","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/adminSlice.js":"29","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/userSlice.js":"30","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/reviewSlice.js":"31","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/verifySlice.js":"32","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/authSlice.js":"33","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/routes/Routes.js":"34","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/services/review.service.js":"35","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/services/verify.service.js":"36","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/services/auth.service.js":"37","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/services/user.service.js":"38","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/services/admin.service.js":"39","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/verify/Verify.js":"40","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/helpers/history.js":"41","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/landing/LandingPage.js":"42","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/logout/Logout.js":"43","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/admin/invite/InviteUser.js":"44","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/search/Search.js":"45","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/editor/Editor.js":"46","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/coder/reviews/Reviews.js":"47","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/analytics/Analytics.js":"48","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/coder/editor/Editor.js":"49","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/services/auth_header.js":"50","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/landing/Signup.js":"51","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/search/Results.js":"52","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/coder/reviews/ReviewListItem.js":"53","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/analytics/AnalyticsListItem.js":"54","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/analytics/GeneralAnalytics.js":"55","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/analytics/DetailedAnalytics.js":"56","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/coder/editor/UploadFadeIn.js":"57","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/coder/reviews/ReviewEditor.js":"58","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/navbar/Navbar.js":"59","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/analytics/AnalyticsCodeItem.js":"60","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/navbar/Tooltip.js":"61","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/admin/manage/ManageUser.js":"62","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/admin/manage/UserListItem.js":"63","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/login/Login.js":"64"},{"size":449,"mtime":1639203869733,"results":"65","hashOfConfig":"66"},{"size":285,"mtime":1638631035694,"results":"67","hashOfConfig":"66"},{"size":5014,"mtime":1638482928585,"results":"68","hashOfConfig":"66"},{"size":334,"mtime":1639170832637,"results":"69","hashOfConfig":"66"},{"size":96,"mtime":1638364649485,"results":"70","hashOfConfig":"66"},{"size":2346,"mtime":1638996368143,"results":"71","hashOfConfig":"66"},{"size":940,"mtime":1638996751640,"results":"72","hashOfConfig":"66"},{"size":783,"mtime":1638372790303,"results":"73","hashOfConfig":"66"},{"size":1429,"mtime":1639089510452,"results":"74","hashOfConfig":"66"},{"size":3620,"mtime":1639089510476,"results":"75","hashOfConfig":"66"},{"size":675,"mtime":1638486695237,"results":"76","hashOfConfig":"66"},{"size":1145,"mtime":1639142071622,"results":"77","hashOfConfig":"66"},{"size":445,"mtime":1638382467443,"results":"78","hashOfConfig":"66"},{"size":4807,"mtime":1639089510470,"results":"79","hashOfConfig":"66"},{"size":1798,"mtime":1639142501375,"results":"80","hashOfConfig":"66"},{"size":4912,"mtime":1639142995528,"results":"81","hashOfConfig":"66"},{"size":789,"mtime":1639088733705,"results":"82","hashOfConfig":"66"},{"size":2621,"mtime":1639312791162,"results":"83","hashOfConfig":"66"},{"size":2648,"mtime":1639483262822,"results":"84","hashOfConfig":"66"},{"size":15416,"mtime":1639604872731,"results":"85","hashOfConfig":"66"},{"size":1609,"mtime":1639170832633,"results":"86","hashOfConfig":"66"},{"size":1632,"mtime":1639482913070,"results":"87","hashOfConfig":"66"},{"size":378,"mtime":1639170687889,"results":"88","hashOfConfig":"66"},{"size":2993,"mtime":1639483389645,"results":"89","hashOfConfig":"66"},{"size":456,"mtime":1641489736924,"results":"90","hashOfConfig":"91"},{"size":5014,"mtime":1638482928585,"results":"92","hashOfConfig":"91"},{"size":299,"mtime":1641940469819,"results":"93","hashOfConfig":"91"},{"size":476,"mtime":1641997501216,"results":"94","hashOfConfig":"91"},{"size":2055,"mtime":1642946445718,"results":"95","hashOfConfig":"91"},{"size":883,"mtime":1642005875388,"results":"96","hashOfConfig":"91"},{"size":3320,"mtime":1642899315751,"results":"97","hashOfConfig":"91"},{"size":968,"mtime":1642885158666,"results":"98","hashOfConfig":"91"},{"size":1362,"mtime":1642969048683,"results":"99","hashOfConfig":"91"},{"size":3511,"mtime":1642961636437,"results":"100","hashOfConfig":"91"},{"size":2312,"mtime":1642899560105,"results":"101","hashOfConfig":"91"},{"size":880,"mtime":1642885226823,"results":"102","hashOfConfig":"91"},{"size":1485,"mtime":1642927910660,"results":"103","hashOfConfig":"91"},{"size":287,"mtime":1642413947641,"results":"104","hashOfConfig":"91"},{"size":1001,"mtime":1642946194524,"results":"105","hashOfConfig":"91"},{"size":3352,"mtime":1642946551881,"results":"106","hashOfConfig":"91"},{"size":96,"mtime":1638364649485,"results":"107","hashOfConfig":"91"},{"size":1579,"mtime":1643134337679,"results":"108","hashOfConfig":"91"},{"size":917,"mtime":1642097977777,"results":"109","hashOfConfig":"91"},{"size":2696,"mtime":1643027223474,"results":"110","hashOfConfig":"91"},{"size":3356,"mtime":1643134011093,"results":"111","hashOfConfig":"91"},{"size":12159,"mtime":1643027116192,"results":"112","hashOfConfig":"91"},{"size":3533,"mtime":1643027314388,"results":"113","hashOfConfig":"91"},{"size":4439,"mtime":1643027130235,"results":"114","hashOfConfig":"91"},{"size":13986,"mtime":1642940203784,"results":"115","hashOfConfig":"91"},{"size":791,"mtime":1640166980655,"results":"116","hashOfConfig":"91"},{"size":3880,"mtime":1643130780048,"results":"117","hashOfConfig":"91"},{"size":1306,"mtime":1643133998888,"results":"118","hashOfConfig":"91"},{"size":1524,"mtime":1643027280058,"results":"119","hashOfConfig":"91"},{"size":2553,"mtime":1643027137309,"results":"120","hashOfConfig":"91"},{"size":1181,"mtime":1643027152451,"results":"121","hashOfConfig":"91"},{"size":10013,"mtime":1643027143193,"results":"122","hashOfConfig":"91"},{"size":3307,"mtime":1643128236687,"results":"123","hashOfConfig":"91"},{"size":9947,"mtime":1643028179781,"results":"124","hashOfConfig":"91"},{"size":5157,"mtime":1642872019336,"results":"125","hashOfConfig":"91"},{"size":790,"mtime":1642118366857,"results":"126","hashOfConfig":"91"},{"size":802,"mtime":1641940469786,"results":"127","hashOfConfig":"91"},{"size":3040,"mtime":1642881148807,"results":"128","hashOfConfig":"91"},{"size":760,"mtime":1642946697746,"results":"129","hashOfConfig":"91"},{"size":3771,"mtime":1642963026300,"results":"130","hashOfConfig":"91"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},"195w5bx",{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"133"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"133"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"133"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":3,"source":"163","usedDeprecatedRules":"133"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"133"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"133"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"133"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"133"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"133"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"133"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"h3hwqg",{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"192"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"192"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"192"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"192"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"192"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"192"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"192"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"192"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"192"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"192"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"192"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"192"},"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/index.js",[],["291","292"],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/App.js",[],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/serviceWorker.js",[],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/app/store.js",[],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/helpers/history.js",[],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/slice/authSlice.js",[],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/services/auth.service.js",[],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/services/auth_header.js",[],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/LandingPage.js",["293","294","295","296","297"],"import React, { useState } from \"react\";\nimport {Link} from 'react-router-dom';\nimport {selectIsLoggedIn} from \"../../slice/authSlice\";\n\nimport SignUp from '../main/Signup';\n\nimport \"../../styles/main/LandingPage.css\";\n\nconst LandingPage = () => {\n\n    return (\n        <div className=\"landing_wrapper\">\n            <div id=\"navbar\">\n                <div id=\"logo_wrapper\">\n                </div>\n                <div id=\"right_navbar\">\n                    <a class=\"navbar_link\">Deine Vorteile</a>\n                    <a class=\"navbar_link\">Über uns</a>\n                    <a class=\"navbar_link\">Kontakt</a>\n                    <Link to={\"/login\"} id=\"login\" class=\"navbar_link active_link\">Log in</Link>\n                </div>\n            </div>\n\n            <div id=\"main\">\n                <div className=\"main_section\">\n                    <p id=\"main_txt\">Digitalisieren Sie noch heute Ihr Restaurant</p>\n                    <p id=\"main_sub_text\">Verstehen Sie ihre Kunden besser und sparen Sie Kosten durch einen digitalen Bestellprozess</p>\n                </div>\n                <SignUp />\n            </div>\n\n\n\n                {/*<div id=\"solution\">\n                    here comes customer slider\n                    trusted by more than x companies\n                    used by more than x users\n                    Customer logos here\n                </div>*/}\n\n        </div>\n\n    );\n};\n\nexport default LandingPage;\n","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Login.js",["298","299","300","301"],"import React, { useState } from \"react\";\nimport {Link, Redirect} from 'react-router-dom';\nimport {selectIsLoggedIn, selectMessage, selectUserType, loginAsync} from \"../../slice/authSlice\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { history } from \"../../helpers/history\";\n\nimport '../../styles/main/Login.css';\n\nconst Login = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [forgotPsw, setForgotPsw] = useState(false);\n\n    const [loading, setLoading] = useState(false);\n\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    const dispatch = useDispatch();\n\n    //Change handlers\n    const changeEmail = (e) => {\n        setEmail(e.target.value);\n    };\n    const changePassword = (e) => {\n        setPassword(e.target.value);\n    };\n\n    /**\n     * @function (01)\n     */\n    const performLogin = (e) => {\n        e.preventDefault();\n\n        setLoading(true);\n\n        dispatch(loginAsync({email: email, password: password}))\n            .then(() => {\n                history.push(\"/order\");\n                window.location.reload();\n            })\n            .catch(() => {\n                setLoading(false);\n            });\n    };\n\n    /**\n     * @function (01)\n     */\n    const performForgotPsw = (e) => {\n\n    }\n\n    //if (isLoggedIn) return <Redirect to=\"/profile\" />;\n\n    return (\n        <div className=\"login_wrapper\">\n            <div className=\"login_section\">\n                <div className=\"outer_login_wrapper\">\n                    {/*Willkommen*/}\n                </div>\n                {!forgotPsw ? (\n                    <form className=\"login_field_wrapper\" onSubmit={performLogin}>\n                        <input name=\"email\" className=\"login_input\" placeholder=\"E-Mail\" type=\"email\" required onChange={changeEmail}/>\n                        <input name=\"password\" className=\"login_input\" placeholder=\"Password\" type=\"password\" required onChange={changePassword}/>\n                        <button className=\"login_btn\" type=\"submit\">\n                            {loading ? (<span>Processing</span>) : (<span>Login</span>)}\n                        </button>\n                        <div className=\"login_btn forgot_btn\" onClick={() => {setForgotPsw(true)}}>Passwort vergessen</div>\n                        <div className=\"signup_txt_btn\">Noch keinen Account - <Link className=\"signup_txt_link\" to={\"/\"}>erstellen Sie noch heute einen</Link></div>\n                    </form>\n                ) : (\n                    <form className=\"login_field_wrapper\" onSubmit={performForgotPsw}>\n                        <input name=\"email\" className=\"login_input\" placeholder=\"E-Mail\" type=\"email\" required onChange={changeEmail}/>\n                        <button className=\"login_btn\" type=\"submit\">\n                            {loading ? (<span>Processing</span>) : (<span>Passwort wiederherstellen</span>)}\n                        </button>\n                        <div className=\"login_btn forgot_btn\" onClick={() => {setForgotPsw(false)}}>Zurück</div>\n                    </form>\n                )}\n                <div className=\"outer_login_wrapper\">\n                    <div className=\"login_legal\"><Link className=\"signup_txt_link\" to={\"/\"}>Impressum</Link>  |  <Link className=\"signup_txt_link\" to={\"/\"}>Datenschutz</Link>  |  <Link className=\"signup_txt_link\" to={\"/\"}>AGB</Link>  |  <Link className=\"signup_txt_link\" to={\"/\"}>Kontakt</Link></div>\n                </div>\n            </div>\n            <div className=\"login_section\">\n\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Customer.js",["302"],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Order.js",["303","304","305","306","307"],"import React, {useState, useRef, useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {selectIsLoggedIn} from \"../../slice/authSlice\";\n\nimport Navbar from '../sub/Navbar';\n//import ActiveOrderList from '../sub/ActiveOrderList';\n//import PastOrderList from '../sub/PastOrderList';\n\nimport '../../styles/main/Order.css';\n\nconst Orders = () => {\n\n    const loggedIn = useSelector(selectIsLoggedIn);\n    if (!loggedIn) console.log('redirect to login'); //return <Redirect to=\"/login\" />;\n\n    //Toggle between active and past orders\n    const [viewActiveOrders, setViewActiveOrders] = useState(true);\n\n    //Check if restaurant is currently open\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_content\">\n                <div className=\"main_outer_content\"></div>\n                <div className=\"main_center_content\">\n                    {/*viewActiveOrders ? (ActiveOrderList) : (PastOrderList)*/}\n                </div>\n                <div className=\"main_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Orders;\n","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/services/user.service.js",[],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Signup.js",["308","309","310","311","312","313","314","315","316","317"],"import React, {useEffect, useState} from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nimport {signUpAsync} from \"../../slice/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { history } from \"../../helpers/history\";\n\nimport \"../../styles/main/Signup.css\";\n\nconst Signup = () => {\n\n    const [employeeData, setEmployeeData] = useState({});\n\n    const [loading, setLoading] = useState(false);\n    const [pswVisible, setPswVisibility] = useState(false);\n    const [pswBtnVisible, setPswBtnVisibility] = useState(true);\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01)\n     */\n    const firstStageSignup = (e) => {\n        e.preventDefault();\n        setEmployeeData({...employeeData,  ...Object.fromEntries(new FormData(e.target))})\n\n        let suViews = document.getElementsByClassName('su_section');\n\n        suViews[0].style.marginLeft = '-40vw';\n        suViews[1].style.display = 'flex';\n        setTimeout(() => {\n            suViews[0].style.display = 'none';\n            suViews[1].style.marginLeft = '0vw';\n        }, 300)\n    }\n\n    /**\n     * @function (01)\n     */\n    const prevStageSignup = () => {\n        let suViews = document.getElementsByClassName('su_section');\n        suViews[1].style.marginLeft = '60vw';\n        setTimeout(() => {\n            suViews[1].style.display = 'none';\n            suViews[0].style.display = 'flex';\n        }, 300)\n        setTimeout(() => {\n            suViews[0].style.marginLeft = '0vw';\n        }, 310)\n    }\n\n    /**\n     * @function (01) prevent the default and update to loading state\n     *           (02) dispatch to the signup reducer and wait until fulfilled\n     */\n    const performSignup = (e) => {\n        //01\n        e.preventDefault();\n        setLoading(true);\n        //02\n        dispatch(signUpAsync({employee: employeeData, restaurant: Object.fromEntries(new FormData(e.target))}))\n            .then((res) => {\n                //history.push(\"/order\");\n                //window.location.reload();\n            })\n            .catch((err) => {\n                setLoading(false);\n            });\n    };\n\n    /**\n     * @function (01) create a toggle button\n     */\n    const togglePswVisibility = (e) => {\n        let toggleBtn = document.getElementById('pswVisibility');\n        toggleBtn.style.cssText = `top:${e.target.offsetTop}px; left:${e.target.offsetLeft}px;`\n\n\n        toggleBtn.onclick = () => {\n            setPswVisibility(!pswVisible)\n        }\n\n    }\n\n    return (\n        <div className=\"main_section right_main_section\">\n            <div id=\"cta_wrapper\">\n                <form className=\"su_section\" onSubmit={firstStageSignup}>\n                    <input className=\"signup_input short_input\" name=\"firstName\" placeholder=\"Vorname\" type=\"text\" required />\n                    <input className=\"signup_input short_input\" name=\"lastName\" placeholder=\"Nachname\" type=\"text\" required />\n                    <input className=\"signup_input\" name=\"email\" placeholder=\"E-Mail\" type=\"email\" required />\n                    <input className=\"signup_input\" name=\"password\" placeholder=\"Passwort\" type={!pswVisible ? (\"password\") : (\"text\")} required/>\n                    <button className=\"signup_input signup_btn\" type=\"submit\">Weiter</button>\n                    {/*pswBtnVisible && <div id=\"pswVisibility\">hide</div>*/}\n                </form>\n                <form className=\"su_section\" onSubmit={performSignup}>\n                    <input name=\"restaurantAddress\" className=\"signup_input\" placeholder=\"Restaurant Adresse\" type=\"text\" required />\n                    <input name=\"restaurantHouseNo\" className=\"signup_input short_input\" placeholder=\"Hausnummer\" type=\"text\" required />\n                    <input name=\"restaurantZIP\" className=\"signup_input short_input\" placeholder=\"Plz\" type=\"text\" required />\n                    <input name=\"restaurantName\" className=\"signup_input\" placeholder=\"Restaurant Name\" type=\"text\" required />\n                    <div className=\"signup_back_btn short_input\" onClick={prevStageSignup}>Zurück</div>\n                    <button type=\"submit\" className=\"signup_input signup_btn short_input\">\n                        {loading ? (\"In Arbeit ...\") : (\"Anmelden\")}\n                    </button>\n                    <div id=\"signup_legal\">By clicking Register, you agree to our <a className=\"signup_link\" href='https://werder.de' target='_blank'>Terms</a>. Learn how we collect, use and share your data in our <a className=\"signup_link\" href='https://werder.de' target='_blank'>Data Policy</a> and how we use cookies and similar technology in our <a className=\"signup_link\" href='https://werder.de' target='_blank'>Cookies Policy</a></div>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Signup;\n","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/general/Routes.js",["318"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { BrowserRouter, Switch, Route} from \"react-router-dom\";\n\nimport LandingPage from \"../main/LandingPage\";\nimport Login from \"../main/Login\";\nimport Signup from \"../main/Signup\";\nimport Order from \"../main/Order\";\nimport Menu from \"../main/Menu\";\n\nimport { history } from \"../../helpers/history\";\nimport {selectIsLoggedIn, selectUserType} from \"../../slice/authSlice\";\n\n\nfunction Routes() {\n    /**\n     * @desc (01) check from redux if the user is logged in\n     *       (02) if user is logged in redirect to the specific user type\n     */\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userType = useSelector(selectUserType);\n    if (loggedIn) history.push(`/${userType}`);\n\n    /**\n     * @desc return the available routes based on the current user status - logged in or not logged in\n     */\n    return (\n        <>\n            {loggedIn ? (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/signup\" component={Signup} />\n                    <Route exact path=\"/order\" component={Order} />\n                    <Route exact path=\"/menu\" component={Menu} />\n                </Switch>\n            ) : (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/signup\" component={Signup} />\n                    <Route exact path=\"/order\" component={Order} />\n                    <Route exact path=\"/menu\" component={Menu} />\n                </Switch>\n            )}\n        </>\n    );\n}\n\nexport default Routes;\n","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/Navbar.js",["319","320","321","322","323","324","325","326","327","328","329","330","331","332"],"import React, {useState, useRef, useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport Tooltip from \"../../components/ind/Tooltip\";\n\nimport '../../styles/sub/Navbar.css';\n\n//import logo from'../../assets/logo.svg';\nimport order from'../../assets/nav/order.svg';\nimport income from'../../assets/nav/income.svg';\nimport settings from'../../assets/nav/settings.svg';\nimport rating from'../../assets/nav/rating.svg';\nimport logout from'../../assets/nav/logout.svg';\nimport promotions from'../../assets/nav/promotions.svg';\nimport menu from'../../assets/nav/menu.svg';\nimport analytics from'../../assets/nav/analytics.svg';\n\nconst Navbar = () => {\n\n    /**\n     * @function (01) on render of the component get the current path depending on the path add the active UI class\n     */\n    useEffect(() => {\n        //01\n        document.getElementById(`${window.location.pathname.substring(1)}_nav_item`).classList.add('active_nav_item');\n    }, []);\n\n    /**\n     * @function (01) get the currently highlighted nav button and remove the highlight\n     *           (02) add the highlight to the clicked button\n     * @param id of the element where the class is added to\n     */\n    const changeHighlight = (id) => {\n        //01\n        document.getElementsByClassName('active_nav_item')[0].classList.remove('active_nav_item')\n        //02\n        document.getElementById(id).classList.add('active_nav_item');\n    }\n\n    /**\n     * @function todo\n     */\n    const showExtView = () => {\n        console.log('todo')\n    }\n\n    /**\n     * @function todo\n     */\n    const hideExtView = () => {\n        console.log('todo')\n    }\n\n    return (\n            <div className=\"nav_bar\">\n                <div className=\"outer_nav_bar\">\n                    <div className=\"nav_item\">\n                        {/*<img src={logo} className=\"nav_icon large_nav_icon\" />*/}\n                    </div>\n                </div>\n                <div className=\"center_nav_bar\">\n                    <Link to={\"/order\"} id=\"order_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('orders_nav_item')}>\n                        <Tooltip content=\"Current orders\" direction=\"right\">\n                            <img src={order} className=\"nav_icon\" />\n                        </Tooltip>\n                    </Link>\n                    <Link to={\"/income\"} id=\"income_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('income_nav_item')}>\n                        <Tooltip content=\"Revenue\" direction=\"right\">\n                            <img src={income} className=\"nav_icon\" />\n                        </Tooltip>\n                    </Link>\n                    <Link to={\"/promotions\"} id=\"promotions_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('promotions_nav_item')}>\n                        <Tooltip content=\"Promotions\" direction=\"right\">\n                            <img src={promotions} className=\"nav_icon\" />\n                        </Tooltip>\n                    </Link>\n                    <Link to={\"/ratings\"} id=\"ratings_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('ratings_nav_item')}>\n                        <Tooltip content=\"Ratings\" direction=\"right\">\n                            <img src={rating} className=\"nav_icon\" />\n                        </Tooltip>\n                    </Link>\n                    <Link to={\"/analytics\"} id=\"analytics_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('analytics_nav_item')}>\n                        <Tooltip content=\"Analytics\" direction=\"right\">\n                            <img src={analytics} className=\"nav_icon\" />\n                        </Tooltip>\n                    </Link>\n                    <Link to={\"/menu\"} id=\"menu_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('menu_nav_item')}>\n                        <Tooltip content=\"Menu\" direction=\"right\">\n                            <img src={menu} className=\"nav_icon\" />\n                        </Tooltip>\n                    </Link>\n                    <Link to={\"/settings\"} id=\"settings_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('settings_nav_item')}>\n                        <Tooltip content=\"Settings\" direction=\"right\">\n                            <img src={settings} className=\"nav_icon\" />\n                        </Tooltip>\n                    </Link>\n                </div>\n                <div className=\"outer_nav_bar\">\n                    <Link to={\"/logout\"} id=\"logout_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('logout_nav_item')}>\n                        <Tooltip content=\"Logout\" direction=\"right\">\n                            <img src={logout} className=\"nav_icon\" />\n                        </Tooltip>\n                    </Link>\n                </div>\n            </div>\n    );\n};\n\nexport default Navbar;\n","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/ind/Tooltip.js",[],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/main/Menu.js",["333","334"],"import React, { useState, useEffect } from \"react\";\n\nimport Navbar from '../sub/Navbar';\n\nimport CategoryCreate from '../sub/menu/CategoryCreate';\nimport MenuCreate from '../sub/menu/MenuCreate';\nimport CategoryItems from '../sub/menu/CategoryItems';\n//import MenuItems from '../sub/menu/MenuItems';\n\nimport { loadMenuAsync } from \"../../slice/menuSlice\";\nimport { useDispatch } from \"react-redux\";\n\nimport '../../styles/main/Menu.css';\n\nconst Menu = () => {\n\n    const [visibleCreate, setVisibleCreate] = useState({\n        visible: false,\n        type: null\n    });\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01) fetch the current menu on the initial load\n     */\n    useEffect(() => {\n        //dispatch(loadMenuAsync);\n    }, [])\n\n    /**\n     * @function (01)\n     */\n    const showCategory = () => {\n        setVisibleCreate({...visibleCreate, type: 'category', visible: true})\n    }\n    /**\n     * @function (01)\n     */\n    const showMenu = () => {\n        setVisibleCreate({...visibleCreate, type: 'menu', visible: true})\n    }\n    /**\n     * @function (01) pass this function to the child component and update the state\n     */\n    let hideCreateView = () => {\n        setVisibleCreate({...visibleCreate, visible: false})\n    }\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_content\">\n                <div className=\"main_outer_content\"></div>\n                <div className=\"main_center_content\">\n                    <div className=\"main_sub_content upper_sub_content\">\n                        <div className=\"sub_heading\">\n                            <span>Kategorien</span>\n                            <div className=\"add_button\" onClick={showCategory}>Neue Kategorie</div>\n                        </div>\n                        <CategoryItems />\n                    </div>\n                    <div className=\"main_sub_content\">\n                        <div className=\"sub_heading\">\n                            <span>Gerichte</span>\n                            <div className=\"add_button\" onClick={showMenu}>Neues Gericht</div>\n                        </div>\n                        {/*<MenuItems />*/}\n                    </div>\n                    {visibleCreate.visible && visibleCreate.type === 'category' && <CategoryCreate hide={hideCreateView} /> }\n                    {visibleCreate.visible && visibleCreate.type === 'menu' && <MenuCreate hide={hideCreateView} /> }\n                </div>\n                <div className=\"main_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Menu;\n","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/menu/CategoryCreate.js",["335","336"],"import React, { useState, useEffect } from \"react\";\n\nimport {selectMenu, setMenuCategory, loadMenuAsync} from \"../../../slice/menuSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport '../../../styles/sub/menu/CategoryCreate.css';\n\nconst CategoryCreate = ({ hide }) => {\n    const menuList = useSelector(selectMenu)\n    const dispatch = useDispatch();\n\n    /**\n     *\n     */\n    useEffect(() => {\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.category_input_wrapper'),\n            input = document.querySelector('.category_input');\n        bg.style.cssText = \"opacity: 100%\";\n        content.style.marginTop = \"0\";\n        setTimeout(() => {input.focus()}, 350)\n    }, [])\n\n\n    /**\n     * @function (01) obtain value of input and check that not empty\n     *           (02) use selector to check if category already exists\n     *           (03) dispatch to menu reducer and add to data structure\n     *           (04) hide the add category view again\n     */\n    const addCategory = (e) => {\n        //01\n        const val = document.querySelector('.category_input').value;\n        if (!val) return alert('provide value');\n        //02\n        if (menuList.filter(category => category.name.toLowerCase() === val.toLowerCase()).length !== 0) return alert('already exists');\n        //03\n        dispatch(setMenuCategory({name: val, dishes:[]}));\n        //04\n        hideCategoryAddView(null, true)\n    };\n\n    /**\n     * @function (01) get the background and content\n     *           (02) return if user clicked on the content\n     *           (03) user clicked outside of content - hide\n     *           (04) after timeout set state again to hidden\n     */\n    const hideCategoryAddView = (e, forced) => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.category_input_wrapper');\n        //02\n        if (!forced && content.contains(e.target)) return;\n        //03\n        bg.style.cssText = \"opacity: 0%\";\n        content.style.marginTop = \"150vh\";\n        //04\n        setTimeout(() => hide(), 350)\n    };\n\n    return (\n        <div className=\"menu_dark_bg\" onClick={hideCategoryAddView}>\n            <div className=\"category_input_wrapper\">\n                <div className=\"category_input_hide\" onClick={(e) => {hideCategoryAddView(e, true)}}>X</div>\n                <input className=\"category_input\" placeholder=\"Kategorie\" />\n                <button className=\"category_submit\" onClick={addCategory}>Erstellen</button>\n            </div>\n        </div>\n    );\n};\n\nexport default CategoryCreate;\n","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/menu/MenuCreate.js",["337","338","339","340","341","342","343","344","345","346","347","348"],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/slice/employeeSlice.js",["349"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { currentOrders, pastOrders } from '../services/user.service';\n\nconst initialState = {\n    currentOrders: [],\n    pastOrders: []\n};\n\nexport const currentOrderAsync = createAsyncThunk(\n    'customer/fetchCurrentOrders',\n    async () => {\n        const response = await currentOrders();\n        return response.data;\n    }\n);\n\nexport const pastOrderAsync = createAsyncThunk(\n    'customer/fetchPastOrders',\n    async () => {\n        const response = await pastOrders();\n        return response.data;\n    }\n);\n\nexport const employeeSlice = createSlice({\n    name: 'employee',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(currentOrderAsync.pending, (state) => {\n                console.log('loading current orders')\n            })\n            .addCase(currentOrderAsync.fulfilled, (state, action) => {\n                console.log('loaded current orders')\n                state.currentOrders = action.payload;\n            })\n            .addCase(pastOrderAsync.pending, (state) => {\n                console.log('loading past orders')\n            })\n            .addCase(pastOrderAsync.fulfilled, (state, action) => {\n                console.log('loaded past orders')\n                state.pastOrders = action.payload;\n            })\n    },\n});\n\nexport const {} = employeeSlice.actions;\n\nexport const selectCurrentOrders = (state) => state.customer.currentOrders;\nexport const selectPastOrders = (state) => state.customer.pastOrders;\n\n\n\nexport default employeeSlice.reducer;\n","/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/slice/menuSlice.js",[],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/services/menu.service.js",[],"/Users/Jakob/Documents/Start-up/restaurant/frontend/restaurant_spa/src/components/sub/menu/CategoryItems.js",["350","351"],"import React, { useState, useEffect } from \"react\";\n\nimport {selectMenu, setSelectedCategory, updateMenuCategory} from \"../../../slice/menuSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport '../../../styles/sub/menu/CategoryItem.css';\n\nconst CategoryItems = () => {\n\n    const menuList = useSelector(selectMenu)\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        console.log(menuList)\n    })\n\n    /**\n     * @function (01)\n     */\n    const removeCategory = () => {\n        //todo have double check in place where name has to be repeated\n    };\n\n    /**\n     * @function (01) update the UI of the clicked button and remove the UI from the previously selected button\n     *           (02) update the currently selected category\n     *           (02) todo update the UI of the category\n     * @param index is the index of the currently selected menu category\n     */\n    const selectCategory = (e, index) => {\n        if (document.querySelector('.active_category_item')) document.querySelector('.active_category_item').classList.remove('active_category_item')\n        e.currentTarget.classList.add('active_category_item');\n        console.log(index)\n        dispatch(setSelectedCategory(index));\n    }\n\n    /**\n     * @function (01) make the field editable and set teh focus\n     *           (02) once the focus is left remove the editable\n     *           (03) check if value is empty\n     *           (04) update the category name via reducer\n     */\n    const renameCategory = (e, i) => {\n        //01\n        let txtField = e.currentTarget.childNodes[0];\n        txtField.contentEditable = \"true\";\n        txtField.focus();\n        //02\n        txtField.addEventListener('focusout', () => {\n            txtField.contentEditable = \"false\";\n            //03\n            if (txtField.innerHTML === '') return txtField.innerHTML = menuList[i].name\n            //04\n            dispatch(updateMenuCategory({index: i, val:txtField.innerHTML}));\n        })\n    }\n\n    //todo drag and drop and change order - https://codepen.io/retrofuturistic/pen/tlbHE\n\n    return (\n        <div className=\"menu_category_container\">\n            {menuList.length > 0 ? (\n                menuList.map((menuCategory, index)=> {\n                    return <div className=\"category_item\" draggable=\"true\" onClick={(e) => selectCategory(e, index)} onDoubleClick={(e) => renameCategory(e, index)}>\n                        <div className=\"category_name\">{menuCategory.name}</div>\n                        {/*<div className=\"category_dish_count\"># {menuCategory.dishes.length}</div>}*/}\n                        <div className=\"category_btn category_rank\">{index+1}</div>\n                        {/*<div className=\"category_btn\" onClick={removeCategory}>X</div>*/}\n                    </div>\n                })\n            ) : (\n                <div className=\"empty_menu_txt\">Erstellen Sie Ihre erste Kategorie</div>\n            )}\n        </div>\n    );\n};\n\nexport default CategoryItems;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/index.js",[],["352","353"],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/serviceWorker.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/App.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/app/store.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/adminSlice.js",["354"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {activeLinks, getUsers, inviteUser, removeUser} from '../services/admin.service';\n\nconst initialState = {\n    activeLinks: [],\n    userList: []\n};\n\nexport const currentLinksAsync = createAsyncThunk(\n    'admin/fetchActiveLinks',\n    async () => {\n        return await activeLinks();\n    }\n);\n\nexport const getUserAsync = createAsyncThunk(\n    'admin/getUserList',\n    async () => {\n        return await getUsers();\n    }\n);\n\nexport const removeUserAsync = createAsyncThunk(\n    'admin/removeUser',\n    async (userId) => {\n        return await removeUser(userId);\n    }\n);\n\nexport const inviteUserAsync = createAsyncThunk(\n    'admin/invite',\n    async (userData) => {\n        return await inviteUser(userData);\n    }\n);\n\nexport const adminSlice = createSlice({\n    name: 'admin',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(currentLinksAsync.fulfilled, (state, action) => {\n                console.log('loaded current orders')\n                state.currentOrders = action.payload;\n            })\n            .addCase(getUserAsync.fulfilled, (state, action) => {\n                let filteredUserList = action.payload.userList.filter((user) => user._id !== action.payload.userId);\n                return {...state, userList: filteredUserList}\n            })\n            .addCase(removeUserAsync.fulfilled, (state, action) => {\n                let updatedUserList = state.userList.filter((user) => user._id !== action.payload.userId);\n                return { ...state, userList: updatedUserList }\n            })\n            .addCase(inviteUserAsync.fulfilled, (state, action) => {\n                console.log('loaded past orders')\n                state.pastOrders = action.payload;\n            })\n    },\n});\n\nexport const {} = adminSlice.actions;\n\nexport const selectActiveLinks = (state) => state.admin.activeLinks;\nexport const selectUserList = (state) => state.admin.userList;\n\nexport default adminSlice.reducer;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/userSlice.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/reviewSlice.js",["355"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n    codeCompletion,\n    getAnalyticsUploads,\n    //compareCodes,\n    getCreatedUploads, getProposal,\n    getSuitableUploads, modifyProposal, proposeCode,\n    uploadCode, uploadStudentCode\n} from '../services/review.service';\n\nconst initialState = {\n    createdUploads: [],\n    suitableUploads: {}\n};\n\nexport const codeCompletionAsync = createAsyncThunk(\n    'review/codeCompletion',\n    async (data) => {\n        return await codeCompletion(data);\n    }\n);\n\nexport const uploadCodeAsync = createAsyncThunk(\n    'review/uploadCode',\n    async (data) => {\n        return await uploadCode(data);\n    }\n);\n\nexport const uploadStudentCodeAsync = createAsyncThunk(\n    'review/uploadStudentCode',\n    async (data) => {\n        const response = await uploadStudentCode(data);\n        return response;\n    }\n);\n\nexport const getUploadsAsync = createAsyncThunk(\n    'review/getUploads',\n    async () => {\n        return await getCreatedUploads();\n    }\n);\n\nexport const getSuitableUploadsAsync = createAsyncThunk(\n    'review/getSuitableUploads',\n    async (searchOffset) => {\n        const response = await getSuitableUploads(searchOffset);\n        return response;\n    }\n);\n\nexport const getReviewAnalyticsAsync = createAsyncThunk(\n    'review/analyseReviews',\n    async (reviewIds) => {\n        return await getAnalyticsUploads(reviewIds);\n    }\n);\n\nexport const proposeCodeAsync = createAsyncThunk(\n    'review/proposeCode',\n    async (code) => {\n        return await proposeCode(code);\n    }\n);\n\nexport const getProposalsAsync = createAsyncThunk(\n    'review/getProposal',\n    async (reviewId) => {\n        return await getProposal(reviewId);\n    }\n);\n\nexport const modifyProposalsAsync = createAsyncThunk(\n    'review/modifyProposal',\n    async (proposalData) => {\n        return await modifyProposal(proposalData);\n    }\n);\n\nexport const reviewSlice = createSlice({\n    name: 'review',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(codeCompletionAsync.fulfilled, (state, action) => {\n                //todo add to redux\n            })\n            .addCase(uploadCodeAsync.fulfilled, (state, action) => {\n                //todo add to redux\n            })\n            .addCase(getUploadsAsync.fulfilled, (state, action) => {\n                state.createdUploads = action.payload.codes.sort((a, b) => b.proposalCounter-a.proposalCounter);\n            })\n            .addCase(getSuitableUploadsAsync.fulfilled, (state, action) => {\n                state.suitableUploads = {...state.suitableUploads, ...action.payload}\n            })\n            .addCase(uploadStudentCodeAsync.fulfilled, (state, action) => {\n                console.log('uploaded student code')\n            })\n            .addCase(getReviewAnalyticsAsync.fulfilled, (state, action) => {\n                console.log('analytics ')\n            })\n            .addCase(proposeCodeAsync.fulfilled, (state, action) => {\n                console.log('proposed code')\n            })\n    },\n});\n\nexport const {} = reviewSlice.actions;\n\nexport const selectCreatedUploads = (state) => state.review.createdUploads;\nexport const selectSuitableUploads = (state) => state.review.suitableUploads;\n\nexport default reviewSlice.reducer;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/verifySlice.js",["356"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { validateInviteLink, submitInvite } from '../services/verify.service';\n\nconst initialState = {\n};\n\nexport const validateLinksAsync = createAsyncThunk(\n    'invite/validate',\n    async (hash) => {\n        const response = await validateInviteLink(hash);\n        return response;\n    }\n);\n\nexport const submitUserAsync = createAsyncThunk(\n    'invite/submit',\n    async (userData) => {\n        return await submitInvite(userData);\n    }\n);\n\nexport const verifySlice = createSlice({\n    name: 'verify',\n    initialState,\n    reducers: {\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(validateLinksAsync.fulfilled, (state, action) => {\n                console.log(action.payload)\n            })\n            .addCase(submitUserAsync.fulfilled, (state, action) => {\n            })\n    },\n});\n\nexport const {} = verifySlice.actions;\n\nexport default verifySlice.reducer;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/slice/authSlice.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/routes/Routes.js",["357","358"],"import React, {useEffect} from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\n\n//General routes\nimport LandingPage from \"../landing/LandingPage\";\nimport Login from \"../login/Login\";\nimport Verify from \"../verify/Verify\";\nimport Logout from \"../logout/Logout\";\n\n//Admin only routes\nimport AdminUsers from \"../../admin/manage/ManageUser\";\nimport AdminInvite from \"../../admin/invite/InviteUser\";\n\n//Student routes\nimport StudentEditor from \"../../student/editor/Editor\";\nimport StudentSearch from \"../../student/search/Search\";\nimport StudentAnalytics from \"../../student/analytics/Analytics\";\n\n//Coder routes\nimport CoderEditor from \"../../coder/editor/Editor\";\nimport CoderReviews from \"../../coder/reviews/Reviews\";\n\n\nimport { history } from \"../../../helpers/history\";\nimport {selectIsLoggedIn, selectUserType} from \"../../../slice/authSlice\";\n\n\nfunction Routes() {\n    /**\n     * @desc (01) check from redux if the user is logged in\n     *       (02) if user is logged in redirect to the specific user type\n     */\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userType = useSelector(selectUserType);\n\n    /**\n     * @desc return the available routes based on the current user status - logged in or not logged in\n     */\n    return (\n        <>\n            {loggedIn && userType === 'admin' ? (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route exact path=\"/verify/:hash\" component={Verify} />\n\n                    <Route exact path=\"/admin/invite/\" component={AdminInvite} />\n                    <Route exact path=\"/admin/users/\" component={AdminUsers} />\n                </Switch>\n            ) : loggedIn && userType === 'coder' ? (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route exact path=\"/verify/:hash\" component={Verify} />\n\n                    <Route exact path=\"/coder/editor/\" component={CoderEditor} />\n                    <Route exact path=\"/coder/reviews/\" component={CoderReviews} />\n                </Switch>\n            ) : loggedIn && userType === 'student' ? (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route exact path=\"/verify/:hash\" component={Verify} />\n\n                    <Route exact path=\"/student/editor/\" component={StudentEditor} />\n                    <Route exact path=\"/student/search/\" component={StudentSearch} />\n                    <Route exact path=\"/student/analytics/:id\" component={StudentAnalytics} />\n                    <Route exact path=\"/student/analytics/\" component={StudentAnalytics} />\n                </Switch>\n            ) : (\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/verify/:hash\" component={Verify} />\n                </Switch>\n            )}\n        </>\n    );\n}\n\nexport default Routes;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/services/review.service.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/services/verify.service.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/services/auth.service.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/services/user.service.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/services/admin.service.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/verify/Verify.js",["359","360"],"import React, { useState, useEffect } from \"react\";\nimport {validateLinksAsync, submitUserAsync} from \"../../../slice/verifySlice\"\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nimport '../../../styles/main/general/verify/verify.css'\n\nconst Verify = ({ match }) => {\n\n    const [inviteData, setInviteData] = useState({})\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (00) remove all tokens\n     *           (01) verify the signup link backend side\n     */\n    useEffect(() => {\n        //00\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"userType\");\n        localStorage.setItem(\"loggedIn\", \"false\");\n\n        //01\n        dispatch(validateLinksAsync(match.params.hash))\n            .then((res) => {\n                setInviteData(prevState => ({...prevState, ...res.payload.inviteData}))\n            })\n            .catch((e) => {\n                console.log('error', e)\n            })\n\n        console.log()\n    }, [])\n\n\n    /**\n     * @function (01) prevent the default form submit\n     *           (02) dispatch the form result to proceed data in the backend\n     *           (03) redirect user based on type to the appropriate home page\n     */\n    const signup = (e) => {\n        //01\n        e.preventDefault();\n        //02\n        let signupData = {...{hash: match.params.hash, inviteId: inviteData._id}, ...Object.fromEntries(new FormData(e.target))}\n        dispatch(submitUserAsync(signupData))\n            .then((res) => {\n                //03\n                res.payload.userType === 'student' ? history.push(\"/student/search/\") : history.push(\"/coder/editor/\")\n                window.location.reload();\n\n                //todo redirect to the right page\n                //todo update user type in auth slice\n            })\n            .catch((e) => {\n                console.log('error', e)\n            })\n\n\n    }\n\n\n    return (\n\n        <div className=\"main_wrapper\">\n            <div className=\"top_section\">\n                <div className=\"heading_text\"></div>\n            </div>\n\n            <div className=\"main_verify_section\">\n                <form className=\"main_sub_large\" onSubmit={signup}>\n                    <div className=\"input_wrapper\">\n                        <div className=\"input_section\">\n                            <div className=\"input_desc\" id=\"psw_input\">E-Mail wiederholen</div>\n                            <input className=\"input_field\" type=\"text\" name=\"email\" required/>\n                        </div>\n                        <div className=\"input_section\">\n                            <div className=\"input_desc\" id=\"psw_input\">Passwort vergeben</div>\n                            <input className=\"input_field\" id=\"psw_input\" type=\"password\" name=\"password\" required/>\n                        </div>\n                        <div className=\"input_section\">\n                            <button type=\"submit\" className=\"submit_btn\" id=\"submit_button\">Registrieren</button>\n                        </div>\n                    </div>\n                </form>\n                <div className=\"main_sub_small\">{inviteData.userType === 'student' ? \"Student Account\" : \"Coder Account\"}</div>\n            </div>\n\n            <div className=\"bottom_section\"></div>\n        </div>\n\n\n    );\n};\n\nexport default Verify;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/helpers/history.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/landing/LandingPage.js",["361","362","363","364","365"],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/logout/Logout.js",["366","367"],"import React, {useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\n\nimport {logoutAsync} from \"../../../slice/authSlice\";\n\nimport '../../../styles/main/general/logout/logout.css';\nimport {history} from \"../../../helpers/history\";\n\n\n\nconst Logout = () => {\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01) dispatch the logout to the backend\n     *           (02) on success redirect to the landing page again\n     */\n    useEffect(() => {\n        //01\n        dispatch(logoutAsync())\n            .then((res) => {\n                //02\n                history.push(\"/\");\n                window.location.reload();\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }, [])\n\n    return (\n        <div className=\"logout_container\">\n            You are safely being logged out...\n        </div>\n    );\n};\n\nexport default Logout;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/admin/invite/InviteUser.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/search/Search.js",["368","369","370","371"],"import React, {useState, useEffect} from \"react\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nimport {selectIsLoggedIn, selectUserType} from \"../../../slice/authSlice\";\nimport {selectUserData, getUserAsync} from \"../../../slice/userSlice\";\nimport {getSuitableUploadsAsync} from \"../../../slice/reviewSlice\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/main/student/search/Search.css';\n\nimport Navbar from \"../../general/navbar/Navbar\";\n\nimport SearchResults from \"./Results\";\nimport Editor from \"../editor/Editor\";\n\n\nconst Search = () => {\n\n    const dispatch = useDispatch();\n\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userType = useSelector(selectUserType);\n    const userData = useSelector(selectUserData);\n\n    const [searchIndex, setSearchIndex] = useState({\n        internalIndex: 0,\n        externalIndex: 0\n    })\n    const [visibleEditor, setVisibleEditor] = useState(false)\n    const [selectedTask, setSelectedTask] = useState({})\n\n    if (!loggedIn || userType !== 'student') {\n        history.push(\"/login\");\n        window.location.reload();\n    }\n\n    /**\n     * @function (00) check if user data exists in redux - if not load the data\n     *           (01) load suitable tasks via dispatch\n     *           (02) hide the loading sign once fulfilled\n     */\n    useEffect(async () => {\n        //00\n        if (Object.keys(userData).length === 0) dispatch(getUserAsync());\n        //01\n        dispatch(getSuitableUploadsAsync(searchIndex))\n            .then((res) => {\n                //02\n            })\n            .catch((err) => {\n                console.log('error', err)\n            })\n    }, [])\n\n    /**\n     * @function (01) update the paginatiopn index counter\n     *           (02) dispatch the updated suitable upload and update the redux state variable\n     */\n    const paginateResults = () => {\n\n    }\n\n    /**\n     * @function (00) check if user has already answered this task\n     *           (01) set the selected task data\n     *           (02) make the editor visible\n     * @param taskData object of the entire task\n     */\n    const selectTask = (taskData) => {\n        //00\n        if (userData.answeredUploads && userData.answeredUploads.filter(review => review[0] === taskData._id.toString()).length > 0) return alert('already answered')\n        //01\n        setSelectedTask({...selectedTask, ...taskData})\n        //02\n        setVisibleEditor(true);\n    }\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Search</div>\n                </div>\n\n                <div className=\"main_center_content\">\n                    <SearchResults type = {\"extReviews\"} title = {\"Other universities\"} select = {selectTask} />\n                    <SearchResults type = {\"intReviews\"} title = {\"My university\"} select = {selectTask} />\n                    { visibleEditor && <Editor taskData = {selectedTask} close = {() => setVisibleEditor(false)}/> }\n                </div>\n\n                <div className=\"main_outer_content right_bound_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Search;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/editor/Editor.js",["372","373","374"],"import React, {useEffect, useState} from \"react\";\n\nimport '../../../styles/shared/editor/editor.css';\nimport '../../../styles/shared/fadein.css';\n\nimport {codeCompletionAsync, uploadStudentCodeAsync} from \"../../../slice/reviewSlice\";\n\nimport {fromRange} from \"xpath-range\";\nimport {v4 as uuidv4} from \"uuid\";\n\nimport {useDispatch} from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nconst Editor = ({ close, taskData }) => {\n\n    const [selTxt, setSelTxt] = useState({})\n    const [tempCodes, setTempCodes] = useState([])\n    const [loadedTxt, setLoadedTxt] = useState(false)\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01) get the dark background, the content wrapper and the inputs\n     *           (02) increase the dark background opacity\n     *           (03) fade up the content wrapper\n     *           =============\n     *           (04) insert the feature rich txt\n     *           (05) show the tooltip\n     *           (06) ensure that the code display has the same length as the overflow text\n     *           (07) ensure that the empty codes text is centered\n     */\n    useEffect(() => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        bg.style.cssText = \"opacity: 100%\";\n        //03\n        content.style.marginTop = \"0\";\n        //04\n        document.getElementsByClassName('code_input')[0].innerHTML = taskData.txt;\n        //05\n        setLoadedTxt(true);\n        //06\n        document.getElementById('internal_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        //07\n        document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight+'px'\n    }, [])\n\n    /**\n     * @function (01) get the background and content\n     *           (02) return if user clicked on the content\n     *           (03) user clicked outside of content - hide\n     *           (04) after timeout set state again to hidden\n     */\n    const hideCreateView = (e, forced) => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        if (!forced && content.contains(e.target)) return;\n        //03\n        bg.style.cssText = \"opacity: 0%\";\n        content.style.marginTop = \"150vh\";\n        //04\n        setTimeout(() => close(), 350)\n    };\n\n    /**\n     * @function (01) define the target by choosing the complementary of the scrolled div\n     *           (02) assign scroll toü and scroll left to the target based on the event scrolled position\n     */\n    const syncScroll = (e, origin) => {\n        //01\n        const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]\n        //02\n        target.scrollTop = e.currentTarget.scrollTop;\n        target.scrollLeft = e.currentTarget.scrollLeft;\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) check that there is no overlapping regarding the codes\n     *           (02) highlight the code\n     *           (03) push into data structure (updates the code overview on the right side)\n     */\n    const addCode = () => {\n        //01\n        let startOverlapCheck = tempCodes.filter(code => selTxt.start > code.start && selTxt.start < code.end)\n        let endOverlapCheck = tempCodes.filter(code => selTxt.end < code.end && selTxt.end > code.start)\n        if (startOverlapCheck.length > 0 || endOverlapCheck.length > 0) return alert('No overlaps possbile')\n        //02\n        setSelectionRange(selTxt.start, selTxt.end)\n        //highlight(\"yellow\");\n        //03\n        setTempCodes(currentCodes => [...currentCodes, selTxt]);\n    }\n\n    /**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */\n    const selector = (e) => {\n        //01\n        let select = window.getSelection(),\n            selectRange = select.getRangeAt(0),\n            selectPos = selectRange.getBoundingClientRect(),\n            codeInput = document.getElementsByClassName('code_input')[0],\n            codeInputPos = codeInput.getBoundingClientRect(),\n            tooltip = document.getElementById('tooltip_editor_wrapper');\n        //02\n        if (selectPos.width < 1) return tooltip.style.display = \"none\";\n        //03\n        tooltip.style.display = \"inline\";\n        tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n        tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n        //04\n        let xpath = fromRange(selectRange, codeInput)\n\n        setSelTxt({...selTxt,  ...{\n                val: selectRange.toString(),\n                start: xpath.startOffset,\n                end: xpath.endOffset,\n                top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5,\n                id: uuidv4()\n            },\n        })\n    }\n\n    /**\n     * @function (01)\n     *           (02)\n     * @param start\n     * @param end\n     */\n    function setSelectionRange(start, end) {\n\n        let el = document.getElementsByClassName('code_input')[0];\n\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var textNodes = getTextNodesIn(el);\n        var foundStart = false;\n        var charCount = 0, endCharCount;\n\n        for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n            endCharCount = charCount + textNode.length;\n            if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {\n                range.setStart(textNode, start - charCount);\n                foundStart = true;\n            }\n            if (foundStart && end <= endCharCount) {\n                range.setEnd(textNode, end - charCount);\n                break;\n            }\n            charCount = endCharCount;\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n        //Helper functions\n\n        function getTextNodesIn(node) {\n            var textNodes = [];\n            if (node.nodeType === 3) {\n                textNodes.push(node);\n            } else {\n                var children = node.childNodes;\n                for (var i = 0, len = children.length; i < len; ++i) {\n                    textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n                }\n            }\n            return textNodes;\n        }\n    }\n\n    //====================================================================\n\n    /**\n     * @function (00) wait until typing ended and dispatch send to backend for code completion and wait - if more than one is found throw error\n     *           (01) duplicate the array\n     *           (02) find the array entry by index\n     *           (03) add code to this entry\n     *           (04) add the description\n     *           (05) indicate that this code is ok -> remove any border color\n     * @param e is the event\n     * @param i is the index of the array element which is\n     * @param type either id or desc of the code - required for the autocompletion\n     */\n    let typingTimerEdit;\n    const editCode = (e, i, type) => {\n        //00\n        clearTimeout(typingTimerEdit);\n        if (!e.target.value) return;\n        typingTimerEdit = setTimeout(() => {\n            dispatch(codeCompletionAsync({type: type, val: e.target.value}))\n                .then((res) => {\n                    if (res.payload.matches.length !== 1) {\n                        document.getElementsByClassName('ind_code_display')[i].style.border = \"1px solid red\";\n                        return document.getElementsByClassName('large_code_section')[i].value = 'Zu viele Ergebnisse - '+res.payload.matches.length\n                    }\n                    //01\n                    let newArr = [...tempCodes];\n                    //02\n                    let mergedObj = {...newArr[i], icdCode: e.target.value, icdCodeDesc: res.payload.matches[0][2]}\n                    newArr[i] = mergedObj;\n                    //03\n                    setTempCodes(newArr);\n                    //04\n                    document.getElementsByClassName('large_code_section')[i].value = res.payload.matches[0][2]\n                    //05\n                    document.getElementsByClassName('ind_code_display')[i].style.border = \"none\";\n                })\n                .catch((err) => {\n                    console.log(err)\n                });\n        }, 200);\n    }\n\n    /**\n     * @function (01) duplicate the array\n     *           (02) splice the array\n     *           (03) set the new temp codes\n     * @param i index of the highlight which is deleted\n     */\n    const removeTxt = (i) => {\n        let newArr = [...tempCodes];\n        //02\n        newArr.splice(i, 1);\n        //03\n        setTempCodes(newArr);\n    }\n\n    // ====================================================================\n\n    /**\n     * @function (01) check if all temp codes were assigned - if not proceed and let user assign icd 10 code\n     *           (02) upload codes to backend and perform server side comparison\n     *           (03) once finished jump to the analytics page where detailed information can be obtained\n     */\n    const uploadStudentCode = () => {\n        //01\n        const nonFinishedCodes = tempCodes.filter((code, index) => !code.icdCode || code.icdCode === \"\")\n        if (nonFinishedCodes.length > 0) return alert('not all codes were assigned');\n        //02\n        dispatch(uploadStudentCodeAsync({tempCodes, ...{reviewId: taskData._id}}))\n            .then((res) => {\n                //03\n                history.push(\"/student/analytics/\");\n                window.location.reload();\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n\n    }\n\n    //====================================================================\n\n    return (\n        <div className=\"menu_dark_bg\" onClick={hideCreateView}>\n            <div className=\"create_input_wrapper enlarged_create_input_wrapper\">\n                <div className=\"create_input_hide\" onClick={(e) => {hideCreateView(e, true)}}>X</div>\n                <div className=\"code_input enlarged_code_input\" onMouseUp={selector} onScroll={(e) => syncScroll(e, 'input')}>\n\n                    {loadedTxt && <div id=\"tooltip_editor_wrapper\">\n                        <div className=\"tooltip_btn\" onClick={addCode}>Add code</div>\n                    </div>}\n                </div>\n                <div className=\"code_display enlarged_code_display\" onScroll={(e) => syncScroll(e, 'display')}>\n                    <div id=\"internal_code_display\">\n                    {\n                        tempCodes.length > 0 ? (\n                            tempCodes.map((code, i) => {\n                                return <div className=\"ind_code_display\" id={code.id} style={{top:code.top+'px'}} key={i}>\n                                    <input placeholder=\"Code ID\" className=\"small_code_section\" onChange={(e) => editCode(e, i, 'id')}/>\n                                    <input placeholder=\"Code Desc\" className=\"large_code_section\" readOnly/>\n                                    <div className=\"remove_code_btn\" onClick={() => removeTxt(i)}>X</div>\n                                </div>;\n                            })\n                        ) : (\n                            <div className=\"empty_editor\">Vergebe Codes</div>\n                            )\n                    }\n                    </div>\n                    { tempCodes.length > 0 && <div className=\"student_compare_btn\" onClick={() => uploadStudentCode()}>Upload codes and compare</div> }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Editor;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/coder/reviews/Reviews.js",["375","376","377"],"import React, {useState, useRef, useEffect} from \"react\";\n\nimport Navbar from \"../../general/navbar/Navbar\";\nimport ReviewListItem from \"./ReviewListItem\";\nimport ReviewEditor from \"./ReviewEditor\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/main/coder/reviews/reviews.css';\n\nimport {} from \"../../../slice/authSlice\";\nimport {getUploadsAsync, selectCreatedUploads,} from \"../../../slice/reviewSlice\";\n\nimport {history} from \"../../../helpers/history\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {Link} from \"react-router-dom\";\n\nconst Reviews = () => {\n\n    const [visibleReview, setVisibleReview] = useState(false);\n    const [visibleReviewData, setVisibleReviewData] = useState(false);\n\n    const dispatch = useDispatch();\n    const uploads = useSelector(selectCreatedUploads)\n\n    //todo security checks\n\n    /**\n     * @function (01) load all documents which were uploaded by the coder + show loading spinner\n     *           (02) hide loading spinner once the load was finished\n     */\n    useEffect(() => {\n        //01\n        dispatch(getUploadsAsync())\n            .then((res) => {\n                //02\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }, [])\n\n    /**\n     * @function (01) update state and set the extended view to true\n     */\n    const showExtReview = (data) => {\n        //01\n        setVisibleReview(true);\n        setVisibleReviewData(data)\n    }\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Student reviews</div>\n                </div>\n                <div className=\"main_center_content\">\n                        {\n                            uploads.length > 0 ? (\n                                <div className=\"review_list_container\">\n                                    <div className=\"review_list_heading\">\n                                        <div className=\"large_list_field small_list_field\">Date</div>\n                                        <div className=\"large_list_field\">Title</div>\n                                        <div className=\"large_list_field small_list_field\">Reviews</div>\n                                        <div className=\"large_list_field small_list_field\">Proposals</div>\n                                        <div className=\"large_list_field small_list_field\">Deviation</div>\n                                        <div className=\"large_list_field small_list_field\">Code check</div>\n                                        <div className=\"large_list_field small_list_field empty_list_field\"></div>\n                                    </div>\n                                    {uploads.map((upload, index) => <ReviewListItem data = {upload} index = {index} extView = {showExtReview}/>)}\n                                </div>\n                            ) : (\n                                <Link to={\"/coder/editor/\"} className=\"empty_review_msg\">You have not uploaded yet - start now</Link>\n                            )\n                        }\n                        { visibleReview && <ReviewEditor data = {visibleReviewData} close = {() => setVisibleReview(false)}/> }\n                </div>\n                <div className=\"main_outer_content right_bound_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Reviews;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/analytics/Analytics.js",["378"],"import React, {useState, useEffect} from \"react\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nimport {selectIsLoggedIn, selectUserType} from \"../../../slice/authSlice\";\nimport {selectUserData, getUserAsync} from \"../../../slice/userSlice\";\nimport {getReviewAnalyticsAsync} from \"../../../slice/reviewSlice\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/shared/analytics/analytics.css';\n\nimport Navbar from \"../../general/navbar/Navbar\";\nimport AnalyticsListItem from \"../../student/analytics/AnalyticsListItem\";\nimport DetailedAnalytics from \"../../student/analytics/DetailedAnalytics\";\nimport GeneralAnalytics from \"../../student/analytics/GeneralAnalytics\";\n\nconst Analytics = () => {\n\n    const dispatch = useDispatch();\n\n    const loggedIn = useSelector(selectIsLoggedIn);\n    const userType = useSelector(selectUserType);\n    const userData = useSelector(selectUserData);\n\n    if (!loggedIn || userType !== 'student') {\n        history.push(\"/login\");\n        window.location.reload();\n    }\n\n    const [reviewDataList, setReviewDataList] = useState([])\n    const [globalAnalytics, setGlobalAnalytics] = useState({})\n    const [visibleDetailedAnalytics, setVisibleDetailedAnalytics] = useState(false)\n    const [detailedAnalyticsData, setDetailedAnalyticsData] = useState({})\n\n    /**\n     * @function (00) if user data has been loaded check if any reviews were already made - if true load the reviewed uploads\n     *           (01) load answered uploads for this user - if user has ´made any reviews so far\n     *           (02) hide the loading sign once fulfilled\n     */\n    useEffect(() => {\n        //00\n        if (Object.keys(userData).length > 0) {\n            getAnalytics(userData.answeredUploads);\n            return;\n        }\n        //01\n        dispatch(getUserAsync())\n            .then((res) => {\n                getAnalytics(res.payload.userData.answeredUploads)\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }, [])\n\n    // Detailed view ==============================\n\n    /**\n     * @function (01) update the state and fade in the\n     * @param data\n     */\n    const detailedView = (data) => {\n        setDetailedAnalyticsData(data)\n        setVisibleDetailedAnalytics(true)\n\n    }\n\n    // Helper functions ===========================\n\n    /**\n     * @function (01) check if user has made any revies so far\n     *           (02) load the reviews from the backend\n     *           (03) assign the results to the local variables\n     * @param reviewIds array of reviews [0] reviewId [1] reviewAnswerId [2] reviewAnswerSubId\n     */\n    const getAnalytics = (reviewIds) => {\n        //01\n        if (!reviewIds || reviewIds.length === 0)  console.log('No replies so far')\n        //02\n        dispatch(getReviewAnalyticsAsync(reviewIds))\n            .then((res) => {\n                setGlobalAnalytics(res.payload.globalKPIS)\n                setReviewDataList(res.payload.reviewData)\n            })\n            .catch((err) => {\n                console.log('error', err)\n            })\n    }\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Analytics</div>\n                </div>\n\n                <div className=\"main_center_content\">\n                    <div className=\"analytics_review_wrapper\">\n                    {\n                        reviewDataList.length > 0 ? (\n                            reviewDataList.map((elem, index) => <AnalyticsListItem data = {elem} index = {index} detailedView = {detailedView} />)\n                        ) : (\n                            <div className=\"no_analytics_txt\">Tackle reviews - No answers mean no analytics</div>\n                        )\n                    }\n                    </div>\n                    { reviewDataList.length > 0 && <GeneralAnalytics data = {globalAnalytics} />}\n                    { visibleDetailedAnalytics && <DetailedAnalytics data = {detailedAnalyticsData}  close = {() => setVisibleDetailedAnalytics(false)}/> }\n                </div>\n\n                <div className=\"main_outer_content right_bound_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default Analytics;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/coder/editor/Editor.js",["379","380","381","382","383"],"import React, {useState, useRef, useEffect} from \"react\";\nimport { fromRange } from \"xpath-range\"\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Navbar from \"../../general/navbar/Navbar\";\nimport UploadFadeIn from \"./UploadFadeIn\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/shared/editor/editor.css';\n\nimport {} from \"../../../slice/authSlice\";\nimport {codeCompletionAsync, uploadCodeAsync} from \"../../../slice/reviewSlice\";\nimport {history} from \"../../../helpers/history\";\n\n\nimport {useDispatch} from \"react-redux\";\n\nconst Editor = () => {\n\n    const [insertTxtStage, setInsertTxtStage] = useState(true);\n    const [txt, setTxt] = useState(\"\");\n    const [selTxt, setSelTxt] = useState({})\n    const [tempCodes, setTempCodes] = useState([])\n    const [finalUploadStage, setFinalUploadStage] = useState(false)\n\n    const dispatch = useDispatch();\n\n    //todo security checks\n\n    /**\n     * @function (01) ensure that the empty sign has the correct height\n     */\n    useEffect(() => {\n        //01\n        document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight+'px'\n    }, [])\n\n    /**\n     * @function (01) define the target by choosing the complementary of the scrolled div\n     *           (02) assign scroll toü and scroll left to the target based on the event scrolled position\n     */\n    const syncScroll = (e, origin) => {\n        //01\n        const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]\n        //02\n        target.scrollTop = e.currentTarget.scrollTop;\n        target.scrollLeft = e.currentTarget.scrollLeft;\n    }\n\n    //==================================================\n\n    /**\n     * @function (01) check that there is no overlapping regarding the codes\n     *           (02) highlight the code\n     *           (03) push into data structure (updates the code overview on the right side)\n     */\n    const addCode = () => {\n        //01\n        let startOverlapCheck = tempCodes.filter(code => selTxt.start > code.start && selTxt.start < code.end)\n        let endOverlapCheck = tempCodes.filter(code => selTxt.end < code.end && selTxt.end > code.start)\n        //todo check that this code has not been used yet\n        if (startOverlapCheck.length > 0 || endOverlapCheck.length > 0) return alert('No overlaps possbile')\n        //02\n        setSelectionRange(selTxt.start, selTxt.end)\n        //highlight(\"yellow\");\n        //03\n        setTempCodes(currentCodes => [...currentCodes, selTxt]);\n    }\n\n    /**\n     * @function (00) wait until typing ended and dispatch send to backend for code completion and wait\n     *           (01) duplicate the array\n     *           (02) find the array entry by index\n     *           (03) add code to this entry\n     * @param e is the event\n     * @param i is the index of the array element which is\n     * @param type either id or desc of the code - required for the autocompletion\n     */\n    let typingTimerEdit;\n    const editCode = (e, i, type) => {\n        //00\n        clearTimeout(typingTimerEdit);\n        if (!e.target.value) return;\n        typingTimerEdit = setTimeout(() => {\n            dispatch(codeCompletionAsync({type: type, val: e.target.value}))\n                .then((res) => {\n                    if (res.payload.matches.length !== 1) {\n                        document.getElementsByClassName('ind_code_display')[i].style.border = \"1px solid red\";\n                        return document.getElementsByClassName('large_code_section')[i].value = 'Zu viele Ergebnisse - '+res.payload.matches.length\n                    }\n                    //01\n                    let newArr = [...tempCodes];\n                    //02\n                    let mergedObj = {...newArr[i], icdCode: e.target.value, icdCodeDesc: res.payload.matches[0][2]}\n                    newArr[i] = mergedObj;\n                    //03\n                    setTempCodes(newArr);\n                    //04\n                    document.getElementsByClassName('large_code_section')[i].value = res.payload.matches[0][2]\n                    //05\n                    document.getElementsByClassName('ind_code_display')[i].style.border = \"none\";\n                })\n                .catch((err) => {\n                    console.log(err)\n                });\n        }, 200);\n    }\n\n    /**\n     * @function (01) duplicate the array\n     *           (02) splice the array\n     *           (03) set the new temp codes\n     * @param i index of the highlight which is deleted\n     */\n    const removeTxt = (i) => {\n        let newArr = [...tempCodes];\n        //02\n        newArr.splice(i, 1);\n        //03\n        setTempCodes(newArr);\n    }\n\n    //==================================================\n\n    //todo next section\n\n    /**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */\n    const selector = (e) => {\n        //01\n        let select = window.getSelection(),\n            selectRange = select.getRangeAt(0),\n            selectPos = selectRange.getBoundingClientRect(),\n            codeInput = document.getElementsByClassName('code_input')[0],\n            codeInputPos = codeInput.getBoundingClientRect(),\n            tooltip = document.getElementById('tooltip_editor_wrapper');\n        //02\n        if (selectPos.width < 1) return tooltip.style.display = \"none\";\n        //03\n        tooltip.style.display = \"inline\";\n        tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n        tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n        //04\n        let xpath = fromRange(selectRange, codeInput)\n\n        setSelTxt({...selTxt,  ...{\n                val: selectRange.toString(),\n                start: xpath.startOffset,\n                end: xpath.endOffset,\n                id: uuidv4(),\n                top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5\n            },\n        })\n    }\n\n    /**\n     * @function (01)\n     *           (02)\n     * @param start\n     * @param end\n     */\n    function setSelectionRange(start, end) {\n\n        let el = document.getElementsByClassName('code_input')[0];\n\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var textNodes = getTextNodesIn(el);\n        var foundStart = false;\n        var charCount = 0, endCharCount;\n\n        for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n            endCharCount = charCount + textNode.length;\n            if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {\n                range.setStart(textNode, start - charCount);\n                foundStart = true;\n            }\n            if (foundStart && end <= endCharCount) {\n                range.setEnd(textNode, end - charCount);\n                break;\n            }\n            charCount = endCharCount;\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n        //Helper functions\n\n        function getTextNodesIn(node) {\n            var textNodes = [];\n            if (node.nodeType === 3) {\n                textNodes.push(node);\n            } else {\n                var children = node.childNodes;\n                for (var i = 0, len = children.length; i < len; ++i) {\n                    textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n                }\n            }\n            return textNodes;\n        }\n    }\n\n    /**\n     * @function\n     * @param colour\n     */\n    function highlight(colour) {\n\n        let range, sel;\n\n        sel = window.getSelection();\n        if (sel.rangeCount && sel.getRangeAt) {\n            range = sel.getRangeAt(0);\n        }\n        document.designMode = \"on\";\n        sel.removeAllRanges();\n        sel.addRange(range);\n        document.execCommand(\"BackColor\", false, colour);\n        document.designMode = \"off\";\n    }\n\n    //==================================================\n\n    /**\n     * @function (00) check if the div has any type of input\n     *           (01) update the state of the of the insertTxtStage\n     *           (02) adjust the heights\n     */\n    const endEditMode = () => {\n        //00\n        if (txt === \"\") return alert('we need some text')\n        //01\n        setInsertTxtStage(false);\n        //02\n        document.getElementById('internal_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n    }\n\n    /**\n     * @function (01) update the current text\n     *           (02) if the text is empty\n     */\n    const addTxt = (e) => {\n        //01\n        setTxt(e.currentTarget.innerHTML)\n        //02\n        if (e.currentTarget.innerHTML   === \"\") e.currentTarget.innerHTML = \"copy & paste patient record and anonymize it\"\n    }\n\n    /**\n     * @function (01) prevent the default behavior\n     *           (02) select the clipboard\n     *           (03) insert the plain text\n     *           (04) update the txt variable\n     */\n    const pasteTxt = (e) => {\n        //01\n        e.preventDefault();\n        let content;\n        //02\n        if (e.clipboardData) {\n            //03\n            content = (e.originalEvent || e).clipboardData.getData('text/plain');\n            document.execCommand('insertText', false, content);\n        } else if (window.clipboardData) {\n            //03\n            content = window.clipboardData.getData('Text');\n            document.selection.createRange().pasteHTML(content);\n        }\n        //04\n        setTxt(content)\n    }\n\n    //==================================================\n\n    /**\n     * @function (01) check if any codes were added - if not return + that every code has an icd code allocated\n     *           (02) fade in the final upload overview - where tags, difficulty, internal use and title are provided\n     */\n    const proceedUpload = () => {\n        //01\n        if (tempCodes.length < 1) return alert(\"please provide at least one code\");\n        if (tempCodes.filter(code => !code.hasOwnProperty('icdCode') || code.icdCode === \"\").length !== 0) return alert(\"allocate icd code\");\n        //02\n        setFinalUploadStage(true);\n    }\n\n    /**\n     * @function (01) prevent default\n     *           (02) create a merged object of text, codes\n     *           (03) upload via dispatch and wait for success\n     *           (04) on success clear the view and let user create a new - reset the inital state\n     */\n    const uploadCodes = (e) => {\n        //01\n        e.preventDefault();\n        setFinalUploadStage(false);\n        //02\n        let codeDataObj = {initialCodes: tempCodes, txt: txt, ...Object.fromEntries(new FormData(e.target))}\n        //03\n        dispatch(uploadCodeAsync(codeDataObj))\n            .then((res) => {\n                //04\n                window.location.reload();\n            })\n            .catch((err) => {\n                console.log('error', err)\n            })\n    }\n\n    // ==========================\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Code editor</div>\n                </div>\n\n                <div className=\"main_center_content\">\n                    <div className=\"code_input\" onPaste={(e) => pasteTxt(e)} placeholder=\"Copy & paste patient record and anonymize it in the editor...\" onKeyUp={insertTxtStage && addTxt} contentEditable={insertTxtStage ? \"true\" : \"false\"} onMouseUp={!insertTxtStage && selector} onScroll={(e) => syncScroll(e, 'input')}>\n                        {!insertTxtStage &&\n                            <div id=\"tooltip_editor_wrapper\">\n                                <div className=\"tooltip_btn\" onClick={addCode}>Code hinzufügen</div>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"code_display\">\n                        <div id=\"internal_code_display\" onScroll={(e) => syncScroll(e, 'input')}>\n                        {\n                            tempCodes.length > 0 ? (\n                                tempCodes.map((code, i) => {\n                                    return <div className=\"ind_code_display\" id={code.id} style={{top:code.top+'px'}} key={i}>\n                                        <input placeholder=\"Code ID\" className=\"small_code_section\" onChange={(e) => editCode(e, i, 'id')}/>\n                                        <input placeholder=\"Code Desc\" className=\"large_code_section\" readOnly/>\n                                        <div className=\"remove_code_btn\" onClick={() => removeTxt(i)}>X</div>\n                                    </div>;\n                                })\n                            ) : (\n                                <div className=\"empty_editor\">{!insertTxtStage ? (<span>Assign codes</span>) : (<span>Finalize editing the patient record</span>)}</div>\n                            )\n                        }\n                        </div>\n                    </div>\n                    {finalUploadStage && <UploadFadeIn submit = {uploadCodes} close = {() => setFinalUploadStage(false)}/>}\n                </div>\n\n                <div className=\"main_outer_content right_bound_outer_content\">\n                    {!finalUploadStage && <div className=\"editor_submit_btn highlighted_editor_submit_btn\" onClick={() => insertTxtStage ? endEditMode() : proceedUpload()}>{insertTxtStage ? <span>Proceed</span> : <span>Upload</span>}</div>}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Editor;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/services/auth_header.js",["384"],"import axios from \"axios\";\n\n/**\n * @function (01) parse the user token, expiry and refresh token\n *           (02) if token has expired send refresh token to backend and generate a new access token\n *           (03) create authorization header with Bearer access token and return\n */\nexport default async function auth_header() {\n  //01\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  //02\n  /*if (user.tokenExp < Math.floor(Date.now() / 1000)) {\n    const accessData = await axios.post('localhost.../refresh', {\n      refreshToken: user.refreshToken,\n    });\n    if (accessData.data.accessToken) localStorage.setItem(\"user\", JSON.stringify(accessData.data));\n  }\n   */\n  //03\n  if (user && user.accessToken) return { Authorization: \"Bearer \" + user.accessToken };\n  return {};\n}\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/landing/Signup.js",["385","386","387","388"],"import React, {useEffect, useState, CSSProperties} from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Select from 'react-select';\n\nimport {signUpAsync} from \"../../../slice/authSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { history } from \"../../../helpers/history\";\n\nimport \"../../../styles/main/general/landing/Signup.css\";\n\nconst Signup = () => {\n\n    const [loading, setLoading] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(null);\n\n    const dispatch = useDispatch();\n\n\n    /**\n     * @function (01) prevent the default and update to loading state\n     *           (02) check if hospital option was selected - if not return\n     *           (03) merge with the form object\n     *           (02) dispatch to the signup reducer and wait until fulfilled\n     */\n    const performSignup = (e) => {\n        //01\n        e.preventDefault();\n        setLoading(true);\n        //02\n        if (!selectedOption) return alert('please select a hospital')\n        //03\n        let signupData = {...Object.fromEntries(new FormData(e.target)), ...{hospitalCode: selectedOption.value, hospitalName: selectedOption.label}}\n        //02\n        dispatch(signUpAsync(signupData))\n            .then((res) => {\n                history.push(\"/admin/invite/\");\n                window.location.reload();\n            })\n            .catch((err) => {\n                console.log(err)\n                setLoading(false);\n            });\n    };\n\n    // =================================\n\n    const options = [\n        { value: '00001', label: 'DONAUISAR Klinikum Deggendorf-Dingolfing-Landau' },\n        { value: '00003', label: 'Klinikum Bremen links der Weser' }\n    ];\n\n    const customStyles = {\n        option: (provided, state) => ({\n            ...provided,\n            borderBottom: '2px dotted green',\n            color: state.isSelected ? 'yellow' : 'black',\n            backgroundColor: state.isSelected ? 'green' : 'white',\n            width: '100%',\n            height: \"200%\"\n        }),\n        control: (provided) => ({\n            ...provided,\n            margin: \"4% 0 4% 0\",\n            width: \"34vw\",\n            borderRadius: \"8px\",\n            height: \"8vh\",\n            backgroundColor: \"white\",\n            padding: \"0 2.5% 0 2.5%\",\n            fontSize: \"1em\",\n            color: '#505DF7',\n            textAlign: 'center',\n            border: 'none'\n        }),\n        placeholder: (defaultStyles) => ({\n            ...defaultStyles,\n            fontSize: '1em',\n            color: '#505DF7',\n            textAlign: 'center'\n        })\n    }\n\n    // =================================\n\n    return (\n        <div className=\"main_section right_main_section\">\n            <div id=\"cta_wrapper\">\n                <form className=\"su_section\" onSubmit={performSignup}>\n                    <input className=\"signup_input short_input\" name=\"firstName\" placeholder=\"First name\" type=\"text\" required />\n                    <input className=\"signup_input short_input\" name=\"lastName\" placeholder=\"Last name\" type=\"text\" required />\n                    <Select\n                        placeholder=\"Choose hospital ...\"\n                        styles = { customStyles }\n                        options = { options }\n                        onChange = { setSelectedOption }\n                    />\n                    <input className=\"signup_input short_input\" name=\"email\" placeholder=\"E-Mail\" type=\"email\" required />\n                    <input className=\"signup_input short_input\" name=\"password\" placeholder=\"Password\" type=\"password\" required/>\n                    <button type=\"submit\" className=\"signup_input signup_btn\">\n                        {loading ? (\"Processing ...\") : (\"Signup\")}\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Signup;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/search/Results.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/coder/reviews/ReviewListItem.js",["389","390"],"import React, {useState, useRef, useEffect} from \"react\";\n\nimport '../../../styles/main/coder/reviews/reviewListItem.css';\n\nconst ReviewListItem = ({data, index, extView}) => {\n\n    const [proposalMode, setProposalMode] = useState(\"pending\")\n\n    /**\n     * @function (01) check if enough reviews were provided\n     *           (02) check if threshold deviation was exceeded\n     */\n    useEffect(() => {\n        //01\n        if (data.reviewCounter < 10) return setProposalMode(10 - data.reviewCounter+\" more\")\n        //02\n        setProposalMode(data.codeDeviation > 5 ? 'review' : 'all good')\n    }, [])\n\n    return (\n        <div className=\"review_list_item\" onClick={() => extView(data)}>\n            <div className=\"large_list_field small_list_field displayed_list_field\">{new Date(data.timestamp).toLocaleDateString(\"de-DE\")}</div>\n            <div className=\"large_list_field displayed_list_field\">{data.title}</div>\n            <div className=\"large_list_field small_list_field displayed_list_field\">{data.reviewCounter}</div>\n            <div className=\"large_list_field small_list_field displayed_list_field\">{data.proposalCounter}</div>\n            <div className=\"large_list_field small_list_field displayed_list_field\">{data.codeDeviation.toFixed(2)}</div>\n            <div className=\"large_list_field small_list_field displayed_list_field\">{proposalMode}</div>\n            <div className=\"large_list_field small_list_field empty_list_field\">open</div>\n        </div>\n    );\n};\n\nexport default ReviewListItem;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/analytics/AnalyticsListItem.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/analytics/GeneralAnalytics.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/analytics/DetailedAnalytics.js",["391","392","393","394","395"],"import React, {useEffect, useState} from \"react\";\n\nimport '../../../styles/shared/editor/editor.css';\nimport '../../../styles/shared/fadein.css';\n\nimport {proposeCodeAsync} from \"../../../slice/reviewSlice\";\nimport {useDispatch} from \"react-redux\";\n\nimport AnalyticsCodeItem from \"../analytics/AnalyticsCodeItem\";\n\nconst DetailedAnalytics = ({ data, close }) => {\n\n    const [loadedTxt, setLoadedTxt] = useState(false);\n    const [studentCodeData, setStudentCodeData] = useState([]);\n    const [coderCodeData, setCoderCodeData] = useState([]);\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01) get the dark background, the content wrapper and the inputs\n     *           (02) increase the dark background opacity\n     *           (03) fade up the content wrapper\n     *           =============\n     *           (04) ensure that the code display has the same length as the overflow text\n     *           (05) ensure that the empty codes text is centered\n     *           (06) process the provided codes to display them\n     */\n    useEffect(() => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        bg.style.cssText = \"opacity: 100%\";\n        //03\n        content.style.marginTop = \"0\";\n        //04\n        document.getElementsByClassName('code_input')[0].innerHTML = data.review.txt;\n        //05\n        setLoadedTxt(true);\n        //04\n        document.getElementById('internal_left_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        document.getElementById('internal_right_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        document.getElementById('internal_code_separator').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        //05\n        document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight+'px'\n        //06\n        displayCodes();\n    }, [])\n\n    /**\n     * @function (01) get the background and content\n     *           (02) return if user clicked on the content\n     *           (03) user clicked outside of content - hide\n     *           (04) after timeout set state again to hidden\n     */\n    const hideView = (e, forced) => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        if (!forced && content.contains(e.target)) return;\n        //03\n        bg.style.cssText = \"opacity: 0%\";\n        content.style.marginTop = \"150vh\";\n        //04\n        setTimeout(() => close(), 350)\n    };\n\n    /**\n     * @function (01) define the target by choosing the complementary of the scrolled div\n     *           (02) assign scroll toü and scroll left to the target based on the event scrolled position\n     */\n    const syncScroll = (e, origin) => {\n        //01\n        const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]\n        //02\n        target.scrollTop = e.currentTarget.scrollTop;\n        target.scrollLeft = e.currentTarget.scrollLeft;\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) transform the data provided into state data and enrich with type\n     *           (02) highlight those codes which the student but not the coder has\n     *           (03) merge into state array\n     */\n    const displayCodes = () => {\n        //01\n        let studentCodes = data.studentAnswer.codes.map(code => ({...code, type: 'student'}))\n        let coderCodes = data.review.initialCodes.map(code => ({...code, type: 'coder'}))\n        //02\n        studentCodes.forEach((code, i) => {\n            if (!data.coderCoverage.intersect.includes(code.icdCode)) studentCodes[i]['proposalEligible'] = true;\n        })\n        //03\n        setStudentCodeData(studentCodes)\n        setCoderCodeData(coderCodes)\n    }\n\n    /**\n     * @function (01) double check that this code is not included by the coder\n     *           (02) form object of all relevant ids\n     *           (03) dispatch the code to the backend\n     */\n    const proposeCode = (code) => {\n        //01\n        if (data.coderCoverage.intersect.includes(code.icdCode)) return alert('coder has already allocated this code')\n        //02\n        const codeProposal = {\n            reviewId: data.review._id,\n            codeProposal: code\n        }\n        //03\n        dispatch(proposeCodeAsync(codeProposal))\n            .then((res) => {\n                console.log(res.payload)\n                alert('proposed this to the coder')\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */\n    const selector = (e) => {\n        /*\n        //01\n        let select = window.getSelection(),\n            selectRange = select.getRangeAt(0),\n            selectPos = selectRange.getBoundingClientRect(),\n            codeInput = document.getElementsByClassName('code_input')[0],\n            codeInputPos = codeInput.getBoundingClientRect(),\n            tooltip = document.getElementById('tooltip_editor_wrapper');\n        //02\n        if (selectPos.width < 1) return tooltip.style.display = \"none\";\n        //03\n        tooltip.style.display = \"inline\";\n        tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n        tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n        //04\n        let xpath = fromRange(selectRange, codeInput)\n\n        setSelTxt({...selTxt,  ...{\n                val: selectRange.toString(),\n                start: xpath.startOffset,\n                end: xpath.endOffset,\n                top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5,\n                id: uuidv4()\n            },\n        })\n         */\n    }\n\n    /**\n     * @function (01)\n     *           (02)\n     * @param start\n     * @param end\n     */\n    function setSelectionRange(start, end) {\n\n        let el = document.getElementsByClassName('code_input')[0];\n\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var textNodes = getTextNodesIn(el);\n        var foundStart = false;\n        var charCount = 0, endCharCount;\n\n        for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n            endCharCount = charCount + textNode.length;\n            if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {\n                range.setStart(textNode, start - charCount);\n                foundStart = true;\n            }\n            if (foundStart && end <= endCharCount) {\n                range.setEnd(textNode, end - charCount);\n                break;\n            }\n            charCount = endCharCount;\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n        //Helper functions\n\n        function getTextNodesIn(node) {\n            var textNodes = [];\n            if (node.nodeType === 3) {\n                textNodes.push(node);\n            } else {\n                var children = node.childNodes;\n                for (var i = 0, len = children.length; i < len; ++i) {\n                    textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n                }\n            }\n            return textNodes;\n        }\n    }\n\n    //====================================================================\n\n    return (\n        <div className=\"menu_dark_bg\" onClick={hideView}>\n            <div className=\"create_input_wrapper enlarged_create_input_wrapper\">\n                <div className=\"create_input_hide\" onClick={(e) => {hideView(e, true)}}>X</div>\n                <div className=\"code_input enlarged_code_input\" onScroll={(e) => syncScroll(e, 'input')}>\n                    {loadedTxt &&\n                        <div id=\"tooltip_editor_wrapper\">\n                            <div className=\"tooltip_btn\">Add code</div>\n                        </div>\n                    }\n                </div>\n                <div className=\"code_display enlarged_code_display split_code_display\" onScroll={(e) => syncScroll(e, 'display')}>\n                    <div id=\"internal_left_code_display\">\n                        <div className=\"internal_code_desc\">Coder</div>\n                        {\n                            coderCodeData.length > 0 ? (\n                                coderCodeData.map((code, i) => <AnalyticsCodeItem code = {code} proposeCode = {proposeCode}/>)\n                            ) : (\n                                <div className=\"empty_editor\">Codes werden geladen</div>\n                            )\n                        }\n                    </div>\n                    <div id=\"internal_code_separator\"></div>\n                    <div id=\"internal_right_code_display\">\n                        <div className=\"internal_code_desc\">You</div>\n                        {\n                            studentCodeData.length > 0 ? (\n                                studentCodeData.map((code, i) => <AnalyticsCodeItem code = {code} proposeCode = {proposeCode}/>)\n                            ) : (\n                                <div className=\"empty_editor\">Codes werden geladen</div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DetailedAnalytics;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/coder/editor/UploadFadeIn.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/coder/reviews/ReviewEditor.js",["396","397","398","399","400","401","402","403"],"import React, {useEffect, useState} from \"react\";\n\nimport '../../../styles/shared/editor/editor.css';\nimport '../../../styles/shared/fadein.css';\nimport accept from '../../../assets/general/accept.svg';\nimport decline from '../../../assets/general/decline.svg';\n\nimport {getProposalsAsync, modifyProposalsAsync} from \"../../../slice/reviewSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nconst DetailedAnalytics = ({ data, close }) => {\n\n    const [loadedTxt, setLoadedTxt] = useState(false);\n    const [codeData, setCodeData] = useState([]);\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01) get the dark background, the content wrapper and the inputs\n     *           (02) increase the dark background opacity\n     *           (03) fade up the content wrapper\n     *           =============\n     *           (04) insert the feature rich txt\n     *           (05) show the tooltip\n     *           (06) ensure that the code display has the same length as the overflow text\n     *           (07) ensure that the empty codes text is centered\n     *           (08) process the provided codes to display them\n     */\n    useEffect(() => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        bg.style.cssText = \"opacity: 100%\";\n        //03\n        content.style.marginTop = \"0\";\n        //04\n        document.getElementsByClassName('code_input')[0].innerHTML = data.txt;\n        //05\n        setLoadedTxt(true)\n        //06\n        document.getElementById('internal_code_display').style.height = document.getElementsByClassName('code_input')[0].scrollHeight+'px';\n        //07\n        document.getElementsByClassName('empty_editor')[0].style.height = document.getElementsByClassName('code_input')[0].offsetHeight+'px'\n        //08\n        fetchProposals();\n    }, [])\n\n    /**\n     * @function (01) get the background and content\n     *           (02) return if user clicked on the content\n     *           (03) user clicked outside of content - hide\n     *           (04) after timeout set state again to hidden\n     */\n    const hideView = (e, forced) => {\n        //01\n        let bg = document.querySelector('.menu_dark_bg'),\n            content = document.querySelector('.create_input_wrapper');\n        //02\n        if (!forced && content.contains(e.target)) return;\n        //03\n        bg.style.cssText = \"opacity: 0%\";\n        content.style.marginTop = \"150vh\";\n        //04\n        setTimeout(() => close(), 350)\n    };\n\n    /**\n     * @function (01) define the target by choosing the complementary of the scrolled div\n     *           (02) assign scroll toü and scroll left to the target based on the event scrolled position\n     */\n    const syncScroll = (e, origin) => {\n        //01\n        const target = origin === 'display' ? document.getElementsByClassName('code_input')[0] : document.getElementsByClassName('code_display')[0]\n        //02\n        target.scrollTop = e.currentTarget.scrollTop;\n        target.scrollLeft = e.currentTarget.scrollLeft;\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) fetch the proposals\n     *           (02) merge into state array\n     */\n    const fetchProposals = () => {\n        dispatch(getProposalsAsync({reviewId: data._id}))\n            .then((res) => {\n                //02\n                let proposalArr = res.payload.proposals.map(proposal => ({...proposal.proposedCode, ...{id:proposal._id, studentId: proposal.senderId}}));\n                setCodeData(proposalArr)\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }\n\n    /**\n     * @function (01) form proposalData object\n     *           (02) dispatch to the backend\n     *           (03) remove the code from the local state once the dispatch was successful\n     *           (04) decrement the proposal counter\n     * @param code is the affected code data object\n     * @param action either accept or decline of the proposal\n     * @param index is the index of the proposal within the codedata data structure\n     */\n    const modifyProposal = (action, code, index) => {\n        //01\n        let codeProposal = {\n            reviewId: data._id,\n            tempCodes: code,\n            userId: code.studentId,\n            action: action,\n            proposalId:code.id\n        }\n        //02\n        dispatch(modifyProposalsAsync(codeProposal))\n            .then((res) => {\n                //03\n                let newCodeData = [...codeData];\n                newCodeData.splice(index, 1);\n                setCodeData(newCodeData)\n                //04\n\n\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n        //test\n    }\n\n    //====================================================================\n\n    /**\n     * @function (01) get all selects and positions\n     *           (02) if only cursor change takes place only hide the tooltip\n     *           (03) reposition tooltip\n     *           (04) set selected text state\n     */\n    const selector = (e) => {\n        /*\n        //01\n        let select = window.getSelection(),\n            selectRange = select.getRangeAt(0),\n            selectPos = selectRange.getBoundingClientRect(),\n            codeInput = document.getElementsByClassName('code_input')[0],\n            codeInputPos = codeInput.getBoundingClientRect(),\n            tooltip = document.getElementById('tooltip_editor_wrapper');\n        //02\n        if (selectPos.width < 1) return tooltip.style.display = \"none\";\n        //03\n        tooltip.style.display = \"inline\";\n        tooltip.style.top = (selectPos.top - codeInputPos.top - tooltip.offsetHeight - 10 + codeInput.scrollTop)+'px';\n        tooltip.style.left = (selectPos.left - codeInputPos.left + selectPos.width/2 - tooltip.offsetWidth / 2)+'px';\n        //04\n        let xpath = fromRange(selectRange, codeInput)\n\n        setSelTxt({...selTxt,  ...{\n                val: selectRange.toString(),\n                start: xpath.startOffset,\n                end: xpath.endOffset,\n                top: selectPos.top - codeInputPos.top + codeInput.scrollTop - 5,\n                id: uuidv4()\n            },\n        })\n         */\n    }\n\n    /**\n     * @function (01)\n     *           (02)\n     * @param start\n     * @param end\n     */\n    function setSelectionRange(start, end) {\n\n        let el = document.getElementsByClassName('code_input')[0];\n\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var textNodes = getTextNodesIn(el);\n        var foundStart = false;\n        var charCount = 0, endCharCount;\n\n        for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n            endCharCount = charCount + textNode.length;\n            if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {\n                range.setStart(textNode, start - charCount);\n                foundStart = true;\n            }\n            if (foundStart && end <= endCharCount) {\n                range.setEnd(textNode, end - charCount);\n                break;\n            }\n            charCount = endCharCount;\n        }\n\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n\n        //Helper functions\n\n        function getTextNodesIn(node) {\n            var textNodes = [];\n            if (node.nodeType === 3) {\n                textNodes.push(node);\n            } else {\n                var children = node.childNodes;\n                for (var i = 0, len = children.length; i < len; ++i) {\n                    textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n                }\n            }\n            return textNodes;\n        }\n    }\n\n    //====================================================================\n\n    return (\n        <div className=\"menu_dark_bg\" onClick={hideView}>\n            <div className=\"create_input_wrapper enlarged_create_input_wrapper\">\n                <div className=\"create_input_hide\" onClick={(e) => {hideView(e, true)}}>X</div>\n                <div className=\"code_input enlarged_code_input\" onScroll={(e) => syncScroll(e, 'input')}>\n                    {loadedTxt &&\n                        <div id=\"tooltip_editor_wrapper\">\n                            <div className=\"tooltip_btn\">Code hinzufügen</div>\n                        </div>\n                    }\n                </div>\n                <div className=\"code_display enlarged_code_display\" onScroll={(e) => syncScroll(e, 'display')}>\n                    <div id=\"internal_code_display\">\n                        {\n                            codeData.length > 0 ? (\n                                codeData.map((code, i) => {\n                                    return <div className={\"ind_code_display\"} id={code.id} style={{top:code.top+'px'}} key={i}>\n                                        <input placeholder=\"Code ID\" value={code.icdCode} className=\"small_code_section\" readOnly/>\n                                        <input placeholder=\"Code Desc\" value={code.icdCodeDesc} className=\"large_code_section medium_code_section\" readOnly/>\n                                        <img className=\"remove_code_btn\" onClick={() => modifyProposal('decline', code, i)} src={decline} />\n                                        <img className=\"remove_code_btn\" onClick={() => modifyProposal('accept', code, i)} src={accept} />\n                                    </div>;\n                                })\n                            ) : (\n                                <div className=\"empty_editor\">No proposals</div>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DetailedAnalytics;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/navbar/Navbar.js",["404","405","406","407","408","409","410","411","412","413"],"import React, {useState, useRef, useEffect} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {selectUserType} from \"../../../slice/authSlice\";\n\nimport Tooltip from \"./Tooltip\";\n\nimport '../../../styles/main/general/navbar/Navbar.css';\n\nimport add from '../../../assets/nav/add_user.svg';\nimport logout from '../../../assets/nav/logout.svg';\nimport analytics from '../../../assets/nav/analytics.svg';\nimport upload from '../../../assets/nav/upload.svg';\nimport search from '../../../assets/nav/search.svg';\nimport edit from '../../../assets/nav/edit.svg';\n\nconst Navbar = () => {\n\n    const userType = useSelector(selectUserType)\n\n\n    /**\n     * @function (01) on render of the component get the current path depending on the path add the active UI class\n     */\n    useEffect(() => {\n        //01\n        //document.getElementById(`${window.location.pathname.substring(1)}_nav_item`).classList.add('active_nav_item');\n    }, []);\n\n    /**\n     * @function (01) get the currently highlighted nav button and remove the highlight\n     *           (02) add the highlight to the clicked button\n     * @param id of the element where the class is added to\n     */\n    const changeHighlight = (id) => {\n        //01\n        //document.getElementsByClassName('active_nav_item')[0].classList.remove('active_nav_item')\n        //02\n        //document.getElementById(id).classList.add('active_nav_item');\n    }\n\n    return (\n        <div className=\"nav_bar\">\n\n            <div className=\"outer_nav_bar\">\n                <div className=\"nav_item\">\n                    {/*<img src={logo} className=\"nav_icon large_nav_icon\" />*/}\n                </div>\n            </div>\n\n            {\n                userType === 'admin' ? (\n                    <div className=\"center_nav_bar\">\n                        <Link to={\"/admin/invite/\"} id=\"order_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('orders_nav_item')}>\n                            <Tooltip content=\"Invite\" direction=\"right\">\n                                <img src={add} className=\"nav_icon\" />\n                            </Tooltip>\n                        </Link>\n                        <Link to={\"/admin/users/\"} id=\"order_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('orders_nav_item')}>\n                            <Tooltip content=\"User management\" direction=\"right\">\n                                <img src={edit} className=\"nav_icon\" />\n                            </Tooltip>\n                        </Link>\n                    </div>\n                ) : userType === 'coder' ? (\n                    <div className=\"center_nav_bar\">\n                        <div className=\"center_nav_bar\">\n                            <Link to={\"/coder/editor/\"} id=\"order_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('orders_nav_item')}>\n                                <Tooltip content=\"Upload document\" direction=\"right\">\n                                    <img src={upload} className=\"nav_icon\" />\n                                </Tooltip>\n                            </Link>\n                            <Link to={\"/coder/reviews/\"} id=\"income_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('income_nav_item')}>\n                                <Tooltip content=\"Reviews\" direction=\"right\">\n                                    <img src={analytics} className=\"nav_icon\" />\n                                </Tooltip>\n                            </Link>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"center_nav_bar\">\n                        <div className=\"center_nav_bar\">\n                            <div className=\"center_nav_bar\">\n                                <Link to={\"/student/search/\"} id=\"order_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('orders_nav_item')}>\n                                    <Tooltip content=\"Suche\" direction=\"right\">\n                                        <img src={search} className=\"nav_icon\" />\n                                    </Tooltip>\n                                </Link>\n                                <Link to={\"/student/analytics/\"} id=\"income_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('income_nav_item')}>\n                                    <Tooltip content=\"Analytics\" direction=\"right\">\n                                        <img src={analytics} className=\"nav_icon\" />\n                                    </Tooltip>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n\n            <div className=\"outer_nav_bar\">\n                <Link to={\"/logout\"} id=\"logout_nav_item\" className=\"nav_item\" onClick={() => changeHighlight('logout_nav_item')}>\n                    <Tooltip content=\"Logout\" direction=\"right\">\n                        <img src={logout} className=\"nav_icon\" />\n                    </Tooltip>\n                </Link>\n            </div>\n\n        </div>\n\n    );\n};\n\nexport default Navbar;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/student/analytics/AnalyticsCodeItem.js",["414"],"import React from \"react\";\nimport pin from \"../../../assets/general/share.svg\";\n\nconst AnalyticsCodeItem = ({ code, proposeCode }) => {\n\n    return (\n        <div className={\"ind_code_display\"} id={code.id} style={{top:code.top+'px'}}>\n            <input placeholder=\"Code ID\" value={code.icdCode} className=\"small_code_section split_small_code_section\" readOnly/>\n            <input placeholder=\"Code Desc\" value={code.icdCodeDesc} className=\"large_code_section split_large_code_section\" readOnly/>\n            {code.type === 'student' && code.hasOwnProperty('proposalEligible') && code.proposalEligible ? <img className=\"remove_code_btn\" onClick={() => proposeCode(code)} src={pin} /> : <div className=\"remove_code_btn\"></div>}\n        </div>\n    );\n};\n\nexport default AnalyticsCodeItem;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/navbar/Tooltip.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/admin/manage/ManageUser.js",["415","416","417"],"import React, {useState, useRef, useEffect} from \"react\";\n\nimport {selectIsLoggedIn, selectUserType} from \"../../../slice/authSlice\";\nimport {getUserAsync, removeUserAsync, selectUserList} from \"../../../slice/adminSlice\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {history} from \"../../../helpers/history\";\n\nimport Navbar from \"../../general/navbar/Navbar\";\nimport UserListItem from \"../../admin/manage/UserListItem\";\n\nimport '../../../styles/shared/main.css';\nimport '../../../styles/main/admin/manage/ManageUser.css';\n\nconst ManageUser = () => {\n\n    const userList = useSelector(selectUserList)\n    const loggedIn = useSelector(selectIsLoggedIn)\n    const userType = useSelector(selectUserType)\n\n    if (!loggedIn || userType !== 'admin') {\n        history.push(\"/login\");\n        window.location.reload();\n    }\n\n    const dispatch = useDispatch();\n\n    // ======================================\n\n    /**\n     * @function (01) on load of component load all users of this hospital\n     *           (02) hide loading sign\n     */\n    useEffect(() => {\n        //01\n        dispatch(getUserAsync())\n            .then((res) => {\n                //02\n            })\n            .catch((err) => {\n                console.log(err)\n            })\n    }, [])\n\n    /**\n     * @function (01) dispatch the delete user function\n     * @param userId is the specific id of the user\n     */\n    const removeUser = (userId) => {\n        //01\n        dispatch(removeUserAsync({userId: userId}))\n            .then((res) => {\n                console.log('success', res)\n            })\n            .catch((err) => {\n                console.log('err', err)\n            })\n    }\n\n    // ======================================\n\n    return (\n        <div className=\"center_container\">\n            <Navbar />\n            <div className=\"main_center_content_wrapper\">\n                <div className=\"main_outer_content\">\n                    <div className=\"main_outer_heading\">Manage users</div>\n                </div>\n                <div className=\"main_center_content start_main_center_content\">\n                    <div className=\"user_header\">\n                        <div className=\"user_header_section small_user_header_section\">Type</div>\n                        <div className=\"user_header_section\">Signup Date</div>\n                        <div className=\"user_header_section\">Name</div>\n                        <div className=\"user_header_section\">E-Mail</div>\n                        <div className=\"user_header_section small_user_header_section\">Delete</div>\n                    </div>\n\n                    <div className=\"user_table\">\n                        { userList.length > 0 ? userList.map((user, i) => <UserListItem user= {user} deleteUser = {removeUser} />) : <div className=\"admin_user_empty\">No users found - Invite other users</div>}\n                    </div>\n                </div>\n                <div className=\"main_outer_content\"></div>\n            </div>\n        </div>\n    );\n};\n\nexport default ManageUser;\n","/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/admin/manage/UserListItem.js",[],"/Users/Jakob/Desktop/TUM/Semester_01/inno_entre/tech_challenge/tc/frontend/tc_hospital_frontend/src/components/general/login/Login.js",["418"],"import React, {useState} from \"react\";\nimport {Link} from 'react-router-dom';\nimport {loginAsync} from \"../../../slice/authSlice\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { history } from \"../../../helpers/history\";\n\nimport '../../../styles/main/general/login/Login.css';\n\nconst Login = () => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [forgotPsw, setForgotPsw] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n\n    /**\n     * @function (01) prevent the default form behaviour and set to loading\n     *           (02) dispatch the login\n     *           (03) redirect based on user type\n     */\n    const performLogin = (e) => {\n        //01\n        e.preventDefault();\n        setLoading(true);\n        //02\n        dispatch(loginAsync({email: email, password: password}))\n            .then((res) => {\n                //03\n                res.payload.userType === 'student' ? history.push(\"/student/search/\") : res.payload.userType === 'coder' ? history.push(\"/coder/editor/\") : history.push(\"/admin/invite/\")\n                window.location.reload();\n            })\n            .catch((err) => {\n                setLoading(false);\n            });\n    };\n\n    /**\n     * @function (01)\n     */\n    const performForgotPsw = (e) => {\n\n    }\n\n    //if (isLoggedIn) return <Redirect to=\"/profile\" />;\n\n    return (\n        <div className=\"login_wrapper\">\n            <div className=\"login_section\">\n                <div className=\"outer_login_wrapper\">\n                    {/*Welcome*/}\n                </div>\n                {!forgotPsw ? (\n                    <form className=\"login_field_wrapper\" onSubmit={performLogin}>\n                        <input name=\"email\" className=\"login_input\" placeholder=\"E-Mail\" type=\"email\" required onChange={(e) => setEmail(e.target.value)}/>\n                        <input name=\"password\" className=\"login_input\" placeholder=\"Password\" type=\"password\" required onChange={(e) => setPassword(e.target.value)}/>\n                        <button className=\"login_btn\" type=\"submit\">\n                            {loading ? (<span>Processing</span>) : (<span>Login</span>)}\n                        </button>\n                        <div className=\"login_btn forgot_btn\" onClick={() => {setForgotPsw(true)}}>Passwort vergessen</div>\n                        <div className=\"signup_txt_btn\">Noch keinen Account - <Link className=\"signup_txt_link\" to={\"/\"}>erstellen Sie noch heute einen</Link></div>\n                    </form>\n                ) : (\n                    <form className=\"login_field_wrapper\" onSubmit={performForgotPsw}>\n                        <input name=\"email\" className=\"login_input\" placeholder=\"E-Mail\" type=\"email\" required onChange={(e) => setEmail(e.target.value)}/>\n                        <button className=\"login_btn\" type=\"submit\">\n                            {loading ? (<span>Processing</span>) : (<span>Passwort wiederherstellen</span>)}\n                        </button>\n                        <div className=\"login_btn forgot_btn\" onClick={() => {setForgotPsw(false)}}>Zurück</div>\n                    </form>\n                )}\n                <div className=\"outer_login_wrapper\">\n                    <div className=\"login_legal\"><Link className=\"signup_txt_link\" to={\"/\"}>Impressum</Link>  |  <Link className=\"signup_txt_link\" to={\"/\"}>Datenschutz</Link>  |  <Link className=\"signup_txt_link\" to={\"/\"}>AGB</Link>  |  <Link className=\"signup_txt_link\" to={\"/\"}>Kontakt</Link></div>\n                </div>\n            </div>\n            <div className=\"login_section\">\n                Log In\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n",{"ruleId":"419","replacedBy":"420"},{"ruleId":"421","replacedBy":"422"},{"ruleId":"423","severity":1,"message":"424","line":1,"column":17,"nodeType":"425","messageId":"426","endLine":1,"endColumn":25},{"ruleId":"423","severity":1,"message":"427","line":3,"column":9,"nodeType":"425","messageId":"426","endLine":3,"endColumn":25},{"ruleId":"428","severity":1,"message":"429","line":17,"column":21,"nodeType":"430","endLine":17,"endColumn":44},{"ruleId":"428","severity":1,"message":"429","line":18,"column":21,"nodeType":"430","endLine":18,"endColumn":44},{"ruleId":"428","severity":1,"message":"429","line":19,"column":21,"nodeType":"430","endLine":19,"endColumn":44},{"ruleId":"423","severity":1,"message":"431","line":2,"column":15,"nodeType":"425","messageId":"426","endLine":2,"endColumn":23},{"ruleId":"423","severity":1,"message":"432","line":3,"column":27,"nodeType":"425","messageId":"426","endLine":3,"endColumn":40},{"ruleId":"423","severity":1,"message":"433","line":3,"column":42,"nodeType":"425","messageId":"426","endLine":3,"endColumn":56},{"ruleId":"423","severity":1,"message":"434","line":20,"column":11,"nodeType":"425","messageId":"426","endLine":20,"endColumn":21},{"ruleId":"423","severity":1,"message":"431","line":2,"column":10,"nodeType":"425","messageId":"426","endLine":2,"endColumn":18},{"ruleId":"423","severity":1,"message":"435","line":1,"column":26,"nodeType":"425","messageId":"426","endLine":1,"endColumn":32},{"ruleId":"423","severity":1,"message":"436","line":1,"column":34,"nodeType":"425","messageId":"426","endLine":1,"endColumn":43},{"ruleId":"423","severity":1,"message":"437","line":2,"column":10,"nodeType":"425","messageId":"426","endLine":2,"endColumn":21},{"ruleId":"423","severity":1,"message":"438","line":18,"column":12,"nodeType":"425","messageId":"426","endLine":18,"endColumn":28},{"ruleId":"423","severity":1,"message":"439","line":18,"column":30,"nodeType":"425","messageId":"426","endLine":18,"endColumn":49},{"ruleId":"423","severity":1,"message":"436","line":1,"column":16,"nodeType":"425","messageId":"426","endLine":1,"endColumn":25},{"ruleId":"423","severity":1,"message":"431","line":2,"column":10,"nodeType":"425","messageId":"426","endLine":2,"endColumn":18},{"ruleId":"423","severity":1,"message":"440","line":5,"column":23,"nodeType":"425","messageId":"426","endLine":5,"endColumn":34},{"ruleId":"423","severity":1,"message":"441","line":7,"column":10,"nodeType":"425","messageId":"426","endLine":7,"endColumn":17},{"ruleId":"423","severity":1,"message":"442","line":17,"column":12,"nodeType":"425","messageId":"426","endLine":17,"endColumn":25},{"ruleId":"423","severity":1,"message":"443","line":17,"column":27,"nodeType":"425","messageId":"426","endLine":17,"endColumn":46},{"ruleId":"423","severity":1,"message":"444","line":75,"column":11,"nodeType":"425","messageId":"426","endLine":75,"endColumn":30},{"ruleId":"445","severity":1,"message":"446","line":106,"column":83,"nodeType":"430","messageId":"447","endLine":106,"endColumn":151,"fix":"448"},{"ruleId":"445","severity":1,"message":"446","line":106,"column":215,"nodeType":"430","messageId":"447","endLine":106,"endColumn":283,"fix":"449"},{"ruleId":"445","severity":1,"message":"446","line":106,"column":352,"nodeType":"430","messageId":"447","endLine":106,"endColumn":420,"fix":"450"},{"ruleId":"423","severity":1,"message":"451","line":3,"column":10,"nodeType":"425","messageId":"426","endLine":3,"endColumn":23},{"ruleId":"423","severity":1,"message":"424","line":1,"column":16,"nodeType":"425","messageId":"426","endLine":1,"endColumn":24},{"ruleId":"423","severity":1,"message":"435","line":1,"column":26,"nodeType":"425","messageId":"426","endLine":1,"endColumn":32},{"ruleId":"423","severity":1,"message":"437","line":2,"column":10,"nodeType":"425","messageId":"426","endLine":2,"endColumn":21},{"ruleId":"423","severity":1,"message":"440","line":2,"column":23,"nodeType":"425","messageId":"426","endLine":2,"endColumn":34},{"ruleId":"423","severity":1,"message":"452","line":44,"column":11,"nodeType":"425","messageId":"426","endLine":44,"endColumn":22},{"ruleId":"423","severity":1,"message":"453","line":51,"column":11,"nodeType":"425","messageId":"426","endLine":51,"endColumn":22},{"ruleId":"454","severity":1,"message":"455","line":65,"column":29,"nodeType":"430","endLine":65,"endColumn":69},{"ruleId":"454","severity":1,"message":"455","line":70,"column":29,"nodeType":"430","endLine":70,"endColumn":70},{"ruleId":"454","severity":1,"message":"455","line":75,"column":29,"nodeType":"430","endLine":75,"endColumn":74},{"ruleId":"454","severity":1,"message":"455","line":80,"column":29,"nodeType":"430","endLine":80,"endColumn":70},{"ruleId":"454","severity":1,"message":"455","line":85,"column":29,"nodeType":"430","endLine":85,"endColumn":73},{"ruleId":"454","severity":1,"message":"455","line":90,"column":29,"nodeType":"430","endLine":90,"endColumn":68},{"ruleId":"454","severity":1,"message":"455","line":95,"column":29,"nodeType":"430","endLine":95,"endColumn":72},{"ruleId":"454","severity":1,"message":"455","line":102,"column":29,"nodeType":"430","endLine":102,"endColumn":70},{"ruleId":"423","severity":1,"message":"456","line":10,"column":10,"nodeType":"425","messageId":"426","endLine":10,"endColumn":23},{"ruleId":"423","severity":1,"message":"457","line":21,"column":11,"nodeType":"425","messageId":"426","endLine":21,"endColumn":19},{"ruleId":"423","severity":1,"message":"424","line":1,"column":17,"nodeType":"425","messageId":"426","endLine":1,"endColumn":25},{"ruleId":"423","severity":1,"message":"456","line":3,"column":38,"nodeType":"425","messageId":"426","endLine":3,"endColumn":51},{"ruleId":"423","severity":1,"message":"458","line":3,"column":21,"nodeType":"425","messageId":"426","endLine":3,"endColumn":28},{"ruleId":"423","severity":1,"message":"459","line":9,"column":11,"nodeType":"425","messageId":"426","endLine":9,"endColumn":19},{"ruleId":"423","severity":1,"message":"460","line":10,"column":11,"nodeType":"425","messageId":"426","endLine":10,"endColumn":27},{"ruleId":"423","severity":1,"message":"461","line":18,"column":24,"nodeType":"425","messageId":"426","endLine":18,"endColumn":40},{"ruleId":"423","severity":1,"message":"462","line":19,"column":12,"nodeType":"425","messageId":"426","endLine":19,"endColumn":17},{"ruleId":"423","severity":1,"message":"463","line":19,"column":19,"nodeType":"425","messageId":"426","endLine":19,"endColumn":30},{"ruleId":"423","severity":1,"message":"464","line":20,"column":12,"nodeType":"425","messageId":"426","endLine":20,"endColumn":16},{"ruleId":"423","severity":1,"message":"465","line":20,"column":18,"nodeType":"425","messageId":"426","endLine":20,"endColumn":28},{"ruleId":"423","severity":1,"message":"466","line":21,"column":12,"nodeType":"425","messageId":"426","endLine":21,"endColumn":17},{"ruleId":"423","severity":1,"message":"467","line":21,"column":19,"nodeType":"425","messageId":"426","endLine":21,"endColumn":30},{"ruleId":"423","severity":1,"message":"457","line":23,"column":11,"nodeType":"425","messageId":"426","endLine":23,"endColumn":19},{"ruleId":"423","severity":1,"message":"468","line":124,"column":11,"nodeType":"425","messageId":"426","endLine":124,"endColumn":25},{"ruleId":"469","severity":1,"message":"470","line":49,"column":14,"nodeType":"471","messageId":"472","endLine":49,"endColumn":16},{"ruleId":"423","severity":1,"message":"424","line":1,"column":17,"nodeType":"425","messageId":"426","endLine":1,"endColumn":25},{"ruleId":"423","severity":1,"message":"473","line":21,"column":11,"nodeType":"425","messageId":"426","endLine":21,"endColumn":25},{"ruleId":"419","replacedBy":"474"},{"ruleId":"421","replacedBy":"475"},{"ruleId":"469","severity":1,"message":"470","line":63,"column":14,"nodeType":"471","messageId":"472","endLine":63,"endColumn":16},{"ruleId":"469","severity":1,"message":"470","line":112,"column":14,"nodeType":"471","messageId":"472","endLine":112,"endColumn":16},{"ruleId":"469","severity":1,"message":"470","line":37,"column":14,"nodeType":"471","messageId":"472","endLine":37,"endColumn":16},{"ruleId":"423","severity":1,"message":"436","line":1,"column":16,"nodeType":"425","messageId":"426","endLine":1,"endColumn":25},{"ruleId":"423","severity":1,"message":"441","line":25,"column":10,"nodeType":"425","messageId":"426","endLine":25,"endColumn":17},{"ruleId":"423","severity":1,"message":"440","line":4,"column":23,"nodeType":"425","messageId":"426","endLine":4,"endColumn":34},{"ruleId":"476","severity":1,"message":"477","line":35,"column":8,"nodeType":"478","endLine":35,"endColumn":10,"suggestions":"479"},{"ruleId":"423","severity":1,"message":"424","line":1,"column":17,"nodeType":"425","messageId":"426","endLine":1,"endColumn":25},{"ruleId":"423","severity":1,"message":"427","line":3,"column":9,"nodeType":"425","messageId":"426","endLine":3,"endColumn":25},{"ruleId":"428","severity":1,"message":"429","line":18,"column":21,"nodeType":"430","endLine":18,"endColumn":44},{"ruleId":"428","severity":1,"message":"429","line":19,"column":21,"nodeType":"430","endLine":19,"endColumn":44},{"ruleId":"428","severity":1,"message":"429","line":20,"column":21,"nodeType":"430","endLine":20,"endColumn":44},{"ruleId":"423","severity":1,"message":"424","line":1,"column":27,"nodeType":"425","messageId":"426","endLine":1,"endColumn":35},{"ruleId":"476","severity":1,"message":"480","line":30,"column":8,"nodeType":"478","endLine":30,"endColumn":10,"suggestions":"481"},{"ruleId":"423","severity":1,"message":"482","line":27,"column":25,"nodeType":"425","messageId":"426","endLine":27,"endColumn":39},{"ruleId":"476","severity":1,"message":"483","line":44,"column":15,"nodeType":"484","endLine":55,"endColumn":6},{"ruleId":"476","severity":1,"message":"485","line":55,"column":8,"nodeType":"478","endLine":55,"endColumn":10,"suggestions":"486"},{"ruleId":"423","severity":1,"message":"487","line":61,"column":11,"nodeType":"425","messageId":"426","endLine":61,"endColumn":26},{"ruleId":"476","severity":1,"message":"488","line":48,"column":8,"nodeType":"478","endLine":48,"endColumn":10,"suggestions":"489"},{"ruleId":"490","severity":1,"message":"491","line":149,"column":35,"nodeType":"492","messageId":"493","endLine":149,"endColumn":60},{"ruleId":"494","severity":1,"message":"495","line":151,"column":86,"nodeType":"496","messageId":"472","endLine":151,"endColumn":88},{"ruleId":"423","severity":1,"message":"435","line":1,"column":26,"nodeType":"425","messageId":"426","endLine":1,"endColumn":32},{"ruleId":"423","severity":1,"message":"441","line":13,"column":9,"nodeType":"425","messageId":"426","endLine":13,"endColumn":16},{"ruleId":"476","severity":1,"message":"480","line":40,"column":8,"nodeType":"478","endLine":40,"endColumn":10,"suggestions":"497"},{"ruleId":"476","severity":1,"message":"498","line":55,"column":8,"nodeType":"478","endLine":55,"endColumn":10,"suggestions":"499"},{"ruleId":"423","severity":1,"message":"435","line":1,"column":26,"nodeType":"425","messageId":"426","endLine":1,"endColumn":32},{"ruleId":"423","severity":1,"message":"441","line":13,"column":9,"nodeType":"425","messageId":"426","endLine":13,"endColumn":16},{"ruleId":"490","severity":1,"message":"491","line":176,"column":35,"nodeType":"492","messageId":"493","endLine":176,"endColumn":60},{"ruleId":"494","severity":1,"message":"495","line":178,"column":86,"nodeType":"496","messageId":"472","endLine":178,"endColumn":88},{"ruleId":"423","severity":1,"message":"500","line":213,"column":14,"nodeType":"425","messageId":"426","endLine":213,"endColumn":23},{"ruleId":"423","severity":1,"message":"501","line":1,"column":8,"nodeType":"425","messageId":"426","endLine":1,"endColumn":13},{"ruleId":"423","severity":1,"message":"436","line":1,"column":16,"nodeType":"425","messageId":"426","endLine":1,"endColumn":25},{"ruleId":"423","severity":1,"message":"502","line":1,"column":37,"nodeType":"425","messageId":"426","endLine":1,"endColumn":50},{"ruleId":"423","severity":1,"message":"431","line":2,"column":10,"nodeType":"425","messageId":"426","endLine":2,"endColumn":18},{"ruleId":"423","severity":1,"message":"440","line":6,"column":23,"nodeType":"425","messageId":"426","endLine":6,"endColumn":34},{"ruleId":"423","severity":1,"message":"435","line":1,"column":26,"nodeType":"425","messageId":"426","endLine":1,"endColumn":32},{"ruleId":"476","severity":1,"message":"503","line":18,"column":8,"nodeType":"478","endLine":18,"endColumn":10,"suggestions":"504"},{"ruleId":"476","severity":1,"message":"505","line":48,"column":8,"nodeType":"478","endLine":48,"endColumn":10,"suggestions":"506"},{"ruleId":"423","severity":1,"message":"507","line":133,"column":11,"nodeType":"425","messageId":"426","endLine":133,"endColumn":19},{"ruleId":"423","severity":1,"message":"508","line":168,"column":14,"nodeType":"425","messageId":"426","endLine":168,"endColumn":31},{"ruleId":"490","severity":1,"message":"491","line":178,"column":35,"nodeType":"492","messageId":"493","endLine":178,"endColumn":60},{"ruleId":"494","severity":1,"message":"495","line":180,"column":86,"nodeType":"496","messageId":"472","endLine":180,"endColumn":88},{"ruleId":"423","severity":1,"message":"440","line":9,"column":22,"nodeType":"425","messageId":"426","endLine":9,"endColumn":33},{"ruleId":"476","severity":1,"message":"509","line":47,"column":8,"nodeType":"478","endLine":47,"endColumn":10,"suggestions":"510"},{"ruleId":"423","severity":1,"message":"507","line":141,"column":11,"nodeType":"425","messageId":"426","endLine":141,"endColumn":19},{"ruleId":"423","severity":1,"message":"508","line":176,"column":14,"nodeType":"425","messageId":"426","endLine":176,"endColumn":31},{"ruleId":"490","severity":1,"message":"491","line":186,"column":35,"nodeType":"492","messageId":"493","endLine":186,"endColumn":60},{"ruleId":"494","severity":1,"message":"495","line":188,"column":86,"nodeType":"496","messageId":"472","endLine":188,"endColumn":88},{"ruleId":"454","severity":1,"message":"455","line":240,"column":41,"nodeType":"430","endLine":240,"endColumn":141},{"ruleId":"454","severity":1,"message":"455","line":241,"column":41,"nodeType":"430","endLine":241,"endColumn":139},{"ruleId":"423","severity":1,"message":"424","line":1,"column":16,"nodeType":"425","messageId":"426","endLine":1,"endColumn":24},{"ruleId":"423","severity":1,"message":"435","line":1,"column":26,"nodeType":"425","messageId":"426","endLine":1,"endColumn":32},{"ruleId":"423","severity":1,"message":"437","line":4,"column":10,"nodeType":"425","messageId":"426","endLine":4,"endColumn":21},{"ruleId":"454","severity":1,"message":"455","line":57,"column":33,"nodeType":"430","endLine":57,"endColumn":71},{"ruleId":"454","severity":1,"message":"455","line":62,"column":33,"nodeType":"430","endLine":62,"endColumn":72},{"ruleId":"454","severity":1,"message":"455","line":71,"column":37,"nodeType":"430","endLine":71,"endColumn":78},{"ruleId":"454","severity":1,"message":"455","line":76,"column":37,"nodeType":"430","endLine":76,"endColumn":81},{"ruleId":"454","severity":1,"message":"455","line":87,"column":41,"nodeType":"430","endLine":87,"endColumn":82},{"ruleId":"454","severity":1,"message":"455","line":92,"column":41,"nodeType":"430","endLine":92,"endColumn":85},{"ruleId":"454","severity":1,"message":"455","line":104,"column":25,"nodeType":"430","endLine":104,"endColumn":66},{"ruleId":"454","severity":1,"message":"455","line":10,"column":108,"nodeType":"430","endLine":10,"endColumn":187},{"ruleId":"423","severity":1,"message":"424","line":1,"column":16,"nodeType":"425","messageId":"426","endLine":1,"endColumn":24},{"ruleId":"423","severity":1,"message":"435","line":1,"column":26,"nodeType":"425","messageId":"426","endLine":1,"endColumn":32},{"ruleId":"476","severity":1,"message":"480","line":43,"column":8,"nodeType":"478","endLine":43,"endColumn":10,"suggestions":"511"},{"ruleId":"423","severity":1,"message":"440","line":5,"column":23,"nodeType":"425","messageId":"426","endLine":5,"endColumn":34},"no-native-reassign",["512"],"no-negated-in-lhs",["513"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'selectIsLoggedIn' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Redirect' is defined but never used.","'selectMessage' is defined but never used.","'selectUserType' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'viewActiveOrders' is assigned a value but never used.","'setViewActiveOrders' is assigned a value but never used.","'useSelector' is defined but never used.","'history' is defined but never used.","'pswBtnVisible' is assigned a value but never used.","'setPswBtnVisibility' is assigned a value but never used.","'togglePswVisibility' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"514","text":"515"},{"range":"516","text":"515"},{"range":"517","text":"515"},"'BrowserRouter' is defined but never used.","'showExtView' is assigned a value but never used.","'hideExtView' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'loadMenuAsync' is defined but never used.","'dispatch' is assigned a value but never used.","'setMenu' is defined but never used.","'menuList' is assigned a value but never used.","'categorySelected' is assigned a value but never used.","'changeExtraOffer' is assigned a value but never used.","'vegan' is assigned a value but never used.","'changeVegan' is assigned a value but never used.","'meat' is assigned a value but never used.","'changeMeat' is assigned a value but never used.","'spicy' is assigned a value but never used.","'changeSpicy' is assigned a value but never used.","'editIngredient' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'removeCategory' is assigned a value but never used.",["512"],["513"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'match.params.hash'. Either include them or remove the dependency array.","ArrayExpression",["518"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["519"],"'setSearchIndex' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch', 'searchIndex', and 'userData'. Either include them or remove the dependency array.",["520"],"'paginateResults' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'taskData.txt'. Either include it or remove the dependency array.",["521"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["522"],"React Hook useEffect has missing dependencies: 'dispatch', 'getAnalytics', and 'userData'. Either include them or remove the dependency array.",["523"],"'highlight' is defined but never used.","'axios' is defined but never used.","'CSSProperties' is defined but never used.","React Hook useEffect has missing dependencies: 'data.codeDeviation' and 'data.reviewCounter'. Either include them or remove the dependency array. If 'setProposalMode' needs the current value of 'data.reviewCounter', you can also switch to useReducer instead of useState and read 'data.reviewCounter' in the reducer.",["524"],"React Hook useEffect has missing dependencies: 'data.review.txt' and 'displayCodes'. Either include them or remove the dependency array.",["525"],"'selector' is assigned a value but never used.","'setSelectionRange' is defined but never used.","React Hook useEffect has missing dependencies: 'data.txt' and 'fetchProposals'. Either include them or remove the dependency array.",["526"],["527"],"no-global-assign","no-unsafe-negation",[4419,4419]," rel=\"noreferrer\"",[4551,4551],[4688,4688],{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"530","fix":"536"},{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},{"desc":"530","fix":"545"},"Update the dependencies array to be: [dispatch, match.params.hash]",{"range":"546","text":"547"},"Update the dependencies array to be: [dispatch]",{"range":"548","text":"549"},"Update the dependencies array to be: [dispatch, searchIndex, userData]",{"range":"550","text":"551"},"Update the dependencies array to be: [taskData.txt]",{"range":"552","text":"553"},{"range":"554","text":"549"},"Update the dependencies array to be: [dispatch, getAnalytics, userData]",{"range":"555","text":"556"},"Update the dependencies array to be: [data.codeDeviation, data.reviewCounter]",{"range":"557","text":"558"},"Update the dependencies array to be: [data.review.txt, displayCodes]",{"range":"559","text":"560"},"Update the dependencies array to be: [data.txt, fetchProposals]",{"range":"561","text":"562"},{"range":"563","text":"549"},[1021,1023],"[dispatch, match.params.hash]",[760,762],"[dispatch]",[1719,1721],"[dispatch, searchIndex, userData]",[1844,1846],"[taskData.txt]",[1263,1265],[2078,2080],"[dispatch, getAnalytics, userData]",[603,605],"[data.codeDeviation, data.reviewCounter]",[2101,2103],"[data.review.txt, displayCodes]",[1904,1906],"[data.txt, fetchProposals]",[1273,1275]]